Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON

Grammar

Rule 0     S' -> INITIAL
Rule 1     INITIAL -> L_INST
Rule 2     L_INST -> L_INST INTS
Rule 3     L_INST -> INTS
Rule 4     L_INST -> empty
Rule 5     INTS -> METHODS
Rule 6     INTS -> FUNTIONS
Rule 7     INTS -> SENTENCES
Rule 8     METHODS -> METHODS METHOD
Rule 9     METHODS -> METHOD
Rule 10    METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY empty RKEY
Rule 11    METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY SENTENCES_METHOD RKEY
Rule 12    METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY empty RKEY
Rule 13    METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_METHOD RKEY
Rule 14    FUNTIONS -> FUNTIONS FUNTION
Rule 15    FUNTIONS -> FUNTION
Rule 16    FUNTION -> TYPE_INT COUPLER
Rule 17    FUNTION -> TYPE_DOUBLE COUPLER
Rule 18    FUNTION -> TYPE_STRING COUPLER
Rule 19    FUNTION -> TYPE_CHAR COUPLER
Rule 20    FUNTION -> TYPE_BOOL COUPLER
Rule 21    COUPLER -> ID LPAREN RPAREN LKEY empty RKEY
Rule 22    COUPLER -> ID LPAREN RPAREN LKEY SENTENCES_FUNTION RKEY
Rule 23    COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY empty RKEY
Rule 24    COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_FUNTION RKEY
Rule 25    SENTENCES_METHOD -> SENTENCES_METHOD SENTENCE_METHOD
Rule 26    SENTENCES_METHOD -> SENTENCE_METHOD
Rule 27    SENTENCE_METHOD -> DECLARATIONS
Rule 28    SENTENCE_METHOD -> ASSIGNMENTS
Rule 29    SENTENCE_METHOD -> SENTENCES_IF
Rule 30    SENTENCE_METHOD -> SENTENCES_WHILE
Rule 31    SENTENCE_METHOD -> COMENTLINE
Rule 32    SENTENCE_METHOD -> COMENTMULTYLINE
Rule 33    SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA
Rule 34    SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA
Rule 35    SENTENCE_METHOD -> METHOD_RETURN DOT_AN_DCOMMA
Rule 36    SENTENCE_METHOD -> ID LPAREN CALLS RPAREN
Rule 37    SENTENCES_FUNTION -> SENTENCES_FUNTION SENTENCE_FUNTION
Rule 38    SENTENCES_FUNTION -> SENTENCE_FUNTION
Rule 39    SENTENCE_FUNTION -> DECLARATIONS
Rule 40    SENTENCE_FUNTION -> ASSIGNMENTS
Rule 41    SENTENCE_FUNTION -> SENTENCES_IF
Rule 42    SENTENCE_FUNTION -> SENTENCES_WHILE
Rule 43    SENTENCE_FUNTION -> COMENTLINE
Rule 44    SENTENCE_FUNTION -> COMENTMULTYLINE
Rule 45    SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA
Rule 46    SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA
Rule 47    SENTENCE_FUNTION -> METHOD_RETURN TYPE_DATO DOT_AN_DCOMMA
Rule 48    SENTENCE_FUNTION -> METHOD_RETURN ID DOT_AN_DCOMMA
Rule 49    SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN
Rule 50    SENTENCES -> SENTENCES SENTENCE
Rule 51    SENTENCES -> SENTENCE
Rule 52    SENTENCE -> DECLARATIONS
Rule 53    SENTENCE -> ASSIGNMENTS
Rule 54    SENTENCE -> SENTENCE_IF
Rule 55    SENTENCE -> SENTENCE_WHILE
Rule 56    SENTENCE -> COMENTLINE
Rule 57    SENTENCE -> COMENTMULTYLINE
Rule 58    SENTENCE -> BREAK DOT_AN_DCOMMA
Rule 59    SENTENCE -> CONTINUE DOT_AN_DCOMMA
Rule 60    SENTENCE -> ID LPAREN CALLS RPAREN
Rule 61    SENTENCES_IF -> SENTENCES_IF SENTENCE_IF
Rule 62    SENTENCES_IF -> SENTENCE_IF
Rule 63    SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
Rule 64    SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
Rule 65    SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
Rule 66    SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
Rule 67    SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
Rule 68    SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY
Rule 69    SENTENCES_WHILE -> SENTENCES_WHILE SENTENCE_WHILE
Rule 70    SENTENCES_WHILE -> SENTENCE_WHILE
Rule 71    SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
Rule 72    SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
Rule 73    SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
Rule 74    SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
Rule 75    SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
Rule 76    SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
Rule 77    INSTRUCTIONS -> INSTRUCTIONS OPTIONS
Rule 78    INSTRUCTIONS -> OPTIONS
Rule 79    OPTIONS -> OPTIONS AND OPTIONS
Rule 80    OPTIONS -> OPTIONS OR OPTIONS
Rule 81    OPTIONS -> OPTIONS NOT OPTIONS
Rule 82    OPTIONS -> OPTION
Rule 83    OPTION -> OPTION IQUALS OPTION
Rule 84    OPTION -> OPTION DIFFERENT OPTION
Rule 85    OPTION -> OPTION IQUAL_GREATER OPTION
Rule 86    OPTION -> OPTION IQUAL_LESS OPTION
Rule 87    OPTION -> OPTION GREATER OPTION
Rule 88    OPTION -> OPTION LESS OPTION
Rule 89    OPTION -> ID
Rule 90    OPTION -> EXPRESSIONS
Rule 91    EXPRESSIONS -> EXPRESSIONS E
Rule 92    EXPRESSIONS -> E
Rule 93    E -> E PLUS E
Rule 94    E -> E MINUS E
Rule 95    E -> E TIMES E
Rule 96    E -> E DIVIDE E
Rule 97    E -> E REST E
Rule 98    E -> ID
Rule 99    E -> TYPE_DATO
Rule 100   DECLARATIONS -> DECLARATIONS DECLARATION
Rule 101   DECLARATIONS -> DECLARATION
Rule 102   DECLARATION -> TYPE_INT ID IQUAL INT DOT_AN_DCOMMA
Rule 103   DECLARATION -> TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA
Rule 104   DECLARATION -> TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA
Rule 105   DECLARATION -> TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA
Rule 106   DECLARATION -> TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA
Rule 107   ASSIGNMENTS -> ASSIGNMENTS ASSIGNMENT
Rule 108   ASSIGNMENTS -> ASSIGNMENT
Rule 109   ASSIGNMENT -> ID IQUAL INT DOT_AN_DCOMMA
Rule 110   ASSIGNMENT -> ID IQUAL FLOAT DOT_AN_DCOMMA
Rule 111   ASSIGNMENT -> ID IQUAL STRING DOT_AN_DCOMMA
Rule 112   ASSIGNMENT -> ID IQUAL CHAR DOT_AN_DCOMMA
Rule 113   ASSIGNMENT -> ID IQUAL DATA_BOOL DOT_AN_DCOMMA
Rule 114   ASSIGNMENT -> ID IQUAL EXPRESSIONS DOT_AN_DCOMMA
Rule 115   L_PARAMS -> L_PARAMS COMMA PARAM
Rule 116   L_PARAMS -> PARAM
Rule 117   PARAM -> TYPE_INT ID
Rule 118   PARAM -> TYPE_DOUBLE ID
Rule 119   PARAM -> TYPE_STRING ID
Rule 120   PARAM -> TYPE_CHAR ID
Rule 121   PARAM -> TYPE_BOOL ID
Rule 122   CALLS -> CALLS COMMA CALL
Rule 123   CALLS -> CALL
Rule 124   CALL -> TYPE_DATO
Rule 125   CALL -> ID
Rule 126   TYPE_DATO -> INT
Rule 127   TYPE_DATO -> FLOAT
Rule 128   TYPE_DATO -> STRING
Rule 129   TYPE_DATO -> CHAR
Rule 130   TYPE_DATO -> DATA_BOOL
Rule 131   empty -> <empty>

Terminals, with rules where they appear

AND                  : 79
BREAK                : 33 45 58
CHAR                 : 105 112 129
COLON                : 
COMENTLINE           : 31 43 56
COMENTMULTYLINE      : 32 44 57
COMMA                : 115 122
CONDITIONAL_ELSE     : 64 66 68
CONDITIONAL_IF       : 63 64 65 66 67 68
CONTINUE             : 34 46 59
DATA_BOOL            : 106 113 130
DIFFERENT            : 84
DIVIDE               : 96
DOT_AN_DCOMMA        : 33 34 35 45 46 47 48 58 59 72 74 76 102 103 104 105 106 109 110 111 112 113 114
FLOAT                : 103 110 127
GREATER              : 87
ID                   : 10 11 12 13 21 22 23 24 36 48 49 60 89 98 102 103 104 105 106 109 110 111 112 113 114 117 118 119 120 121 125
INT                  : 102 109 126
IQUAL                : 102 103 104 105 106 109 110 111 112 113 114
IQUALS               : 83
IQUAL_GREATER        : 85
IQUAL_LESS           : 86
ITERATIVE_DO         : 72 74 76
ITERATIVE_WHILE      : 71 72 73 74 75 76
LESS                 : 88
LKEY                 : 10 11 12 13 21 22 23 24 63 64 64 65 66 66 67 68 68 71 72 73 74 75 76
LPAREN               : 10 11 12 13 21 22 23 24 36 49 60 63 64 65 66 67 68 71 72 73 74 75 76
METHOD_RETURN        : 35 47 48
METHOD_VOID          : 10 11 12 13
MINUS                : 94
NOT                  : 81
OR                   : 80
PLUS                 : 93
REST                 : 97
RKEY                 : 10 11 12 13 21 22 23 24 63 64 64 65 66 66 67 68 68 71 72 73 74 75 76
RPAREN               : 10 11 12 13 21 22 23 24 36 49 60 63 64 65 66 67 68 71 72 73 74 75 76
STRING               : 104 111 128
TIMES                : 95
TYPE_BOOL            : 20 106 121
TYPE_CHAR            : 19 105 120
TYPE_DOUBLE          : 17 103 118
TYPE_INT             : 16 102 117
TYPE_STRING          : 18 104 119
error                : 

Nonterminals, with rules where they appear

ASSIGNMENT           : 107 108
ASSIGNMENTS          : 28 40 53 107
CALL                 : 122 123
CALLS                : 36 49 60 122
COUPLER              : 16 17 18 19 20
DECLARATION          : 100 101
DECLARATIONS         : 27 39 52 100
E                    : 91 92 93 93 94 94 95 95 96 96 97 97
EXPRESSIONS          : 90 91 114
FUNTION              : 14 15
FUNTIONS             : 6 14
INITIAL              : 0
INSTRUCTIONS         : 63 64 65 66 67 68 71 72 73 74 75 76 77
INTS                 : 2 3
L_INST               : 1 2
L_PARAMS             : 12 13 23 24 115
METHOD               : 8 9
METHODS              : 5 8
OPTION               : 82 83 83 84 84 85 85 86 86 87 87 88 88
OPTIONS              : 77 78 79 79 80 80 81 81
PARAM                : 115 116
SENTENCE             : 50 51
SENTENCES            : 7 50 63 64 64 71 72
SENTENCES_FUNTION    : 22 24 37 65 66 66 73 74
SENTENCES_IF         : 29 41 61
SENTENCES_METHOD     : 11 13 25 67 68 68 75 76
SENTENCES_WHILE      : 30 42 69
SENTENCE_FUNTION     : 37 38
SENTENCE_IF          : 54 61 62
SENTENCE_METHOD      : 25 26
SENTENCE_WHILE       : 55 69 70
TYPE_DATO            : 47 99 124
empty                : 4 10 12 21 23

Parsing method: LALR

state 0

    (0) S' -> . INITIAL
    (1) INITIAL -> . L_INST
    (2) L_INST -> . L_INST INTS
    (3) L_INST -> . INTS
    (4) L_INST -> . empty
    (5) INTS -> . METHODS
    (6) INTS -> . FUNTIONS
    (7) INTS -> . SENTENCES
    (131) empty -> .
    (8) METHODS -> . METHODS METHOD
    (9) METHODS -> . METHOD
    (14) FUNTIONS -> . FUNTIONS FUNTION
    (15) FUNTIONS -> . FUNTION
    (50) SENTENCES -> . SENTENCES SENTENCE
    (51) SENTENCES -> . SENTENCE
    (10) METHOD -> . METHOD_VOID ID LPAREN RPAREN LKEY empty RKEY
    (11) METHOD -> . METHOD_VOID ID LPAREN RPAREN LKEY SENTENCES_METHOD RKEY
    (12) METHOD -> . METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY empty RKEY
    (13) METHOD -> . METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_METHOD RKEY
    (16) FUNTION -> . TYPE_INT COUPLER
    (17) FUNTION -> . TYPE_DOUBLE COUPLER
    (18) FUNTION -> . TYPE_STRING COUPLER
    (19) FUNTION -> . TYPE_CHAR COUPLER
    (20) FUNTION -> . TYPE_BOOL COUPLER
    (52) SENTENCE -> . DECLARATIONS
    (53) SENTENCE -> . ASSIGNMENTS
    (54) SENTENCE -> . SENTENCE_IF
    (55) SENTENCE -> . SENTENCE_WHILE
    (56) SENTENCE -> . COMENTLINE
    (57) SENTENCE -> . COMENTMULTYLINE
    (58) SENTENCE -> . BREAK DOT_AN_DCOMMA
    (59) SENTENCE -> . CONTINUE DOT_AN_DCOMMA
    (60) SENTENCE -> . ID LPAREN CALLS RPAREN
    (100) DECLARATIONS -> . DECLARATIONS DECLARATION
    (101) DECLARATIONS -> . DECLARATION
    (107) ASSIGNMENTS -> . ASSIGNMENTS ASSIGNMENT
    (108) ASSIGNMENTS -> . ASSIGNMENT
    (63) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY
    (71) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (72) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (73) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (74) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (75) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (76) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (102) DECLARATION -> . TYPE_INT ID IQUAL INT DOT_AN_DCOMMA
    (103) DECLARATION -> . TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA
    (104) DECLARATION -> . TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA
    (105) DECLARATION -> . TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA
    (106) DECLARATION -> . TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (109) ASSIGNMENT -> . ID IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> . ID IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> . ID IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> . ID IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> . ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> . ID IQUAL EXPRESSIONS DOT_AN_DCOMMA

  ! shift/reduce conflict for METHOD_VOID resolved as shift
  ! shift/reduce conflict for TYPE_INT resolved as shift
  ! shift/reduce conflict for TYPE_DOUBLE resolved as shift
  ! shift/reduce conflict for TYPE_STRING resolved as shift
  ! shift/reduce conflict for TYPE_CHAR resolved as shift
  ! shift/reduce conflict for TYPE_BOOL resolved as shift
  ! shift/reduce conflict for COMENTLINE resolved as shift
  ! shift/reduce conflict for COMENTMULTYLINE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CONDITIONAL_IF resolved as shift
  ! shift/reduce conflict for ITERATIVE_WHILE resolved as shift
  ! shift/reduce conflict for ITERATIVE_DO resolved as shift
    $end            reduce using rule 131 (empty -> .)
    METHOD_VOID     shift and go to state 11
    TYPE_INT        shift and go to state 13
    TYPE_DOUBLE     shift and go to state 14
    TYPE_STRING     shift and go to state 15
    TYPE_CHAR       shift and go to state 16
    TYPE_BOOL       shift and go to state 17
    COMENTLINE      shift and go to state 22
    COMENTMULTYLINE shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    ID              shift and go to state 12
    CONDITIONAL_IF  shift and go to state 28
    ITERATIVE_WHILE shift and go to state 29
    ITERATIVE_DO    shift and go to state 30

  ! METHOD_VOID     [ reduce using rule 131 (empty -> .) ]
  ! TYPE_INT        [ reduce using rule 131 (empty -> .) ]
  ! TYPE_DOUBLE     [ reduce using rule 131 (empty -> .) ]
  ! TYPE_STRING     [ reduce using rule 131 (empty -> .) ]
  ! TYPE_CHAR       [ reduce using rule 131 (empty -> .) ]
  ! TYPE_BOOL       [ reduce using rule 131 (empty -> .) ]
  ! COMENTLINE      [ reduce using rule 131 (empty -> .) ]
  ! COMENTMULTYLINE [ reduce using rule 131 (empty -> .) ]
  ! BREAK           [ reduce using rule 131 (empty -> .) ]
  ! CONTINUE        [ reduce using rule 131 (empty -> .) ]
  ! ID              [ reduce using rule 131 (empty -> .) ]
  ! CONDITIONAL_IF  [ reduce using rule 131 (empty -> .) ]
  ! ITERATIVE_WHILE [ reduce using rule 131 (empty -> .) ]
  ! ITERATIVE_DO    [ reduce using rule 131 (empty -> .) ]

    INITIAL                        shift and go to state 1
    L_INST                         shift and go to state 2
    INTS                           shift and go to state 3
    empty                          shift and go to state 4
    METHODS                        shift and go to state 5
    FUNTIONS                       shift and go to state 6
    SENTENCES                      shift and go to state 7
    METHOD                         shift and go to state 8
    FUNTION                        shift and go to state 9
    SENTENCE                       shift and go to state 10
    DECLARATIONS                   shift and go to state 18
    ASSIGNMENTS                    shift and go to state 19
    SENTENCE_IF                    shift and go to state 20
    SENTENCE_WHILE                 shift and go to state 21
    DECLARATION                    shift and go to state 26
    ASSIGNMENT                     shift and go to state 27

state 1

    (0) S' -> INITIAL .



state 2

    (1) INITIAL -> L_INST .
    (2) L_INST -> L_INST . INTS
    (5) INTS -> . METHODS
    (6) INTS -> . FUNTIONS
    (7) INTS -> . SENTENCES
    (8) METHODS -> . METHODS METHOD
    (9) METHODS -> . METHOD
    (14) FUNTIONS -> . FUNTIONS FUNTION
    (15) FUNTIONS -> . FUNTION
    (50) SENTENCES -> . SENTENCES SENTENCE
    (51) SENTENCES -> . SENTENCE
    (10) METHOD -> . METHOD_VOID ID LPAREN RPAREN LKEY empty RKEY
    (11) METHOD -> . METHOD_VOID ID LPAREN RPAREN LKEY SENTENCES_METHOD RKEY
    (12) METHOD -> . METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY empty RKEY
    (13) METHOD -> . METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_METHOD RKEY
    (16) FUNTION -> . TYPE_INT COUPLER
    (17) FUNTION -> . TYPE_DOUBLE COUPLER
    (18) FUNTION -> . TYPE_STRING COUPLER
    (19) FUNTION -> . TYPE_CHAR COUPLER
    (20) FUNTION -> . TYPE_BOOL COUPLER
    (52) SENTENCE -> . DECLARATIONS
    (53) SENTENCE -> . ASSIGNMENTS
    (54) SENTENCE -> . SENTENCE_IF
    (55) SENTENCE -> . SENTENCE_WHILE
    (56) SENTENCE -> . COMENTLINE
    (57) SENTENCE -> . COMENTMULTYLINE
    (58) SENTENCE -> . BREAK DOT_AN_DCOMMA
    (59) SENTENCE -> . CONTINUE DOT_AN_DCOMMA
    (60) SENTENCE -> . ID LPAREN CALLS RPAREN
    (100) DECLARATIONS -> . DECLARATIONS DECLARATION
    (101) DECLARATIONS -> . DECLARATION
    (107) ASSIGNMENTS -> . ASSIGNMENTS ASSIGNMENT
    (108) ASSIGNMENTS -> . ASSIGNMENT
    (63) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY
    (71) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (72) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (73) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (74) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (75) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (76) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (102) DECLARATION -> . TYPE_INT ID IQUAL INT DOT_AN_DCOMMA
    (103) DECLARATION -> . TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA
    (104) DECLARATION -> . TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA
    (105) DECLARATION -> . TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA
    (106) DECLARATION -> . TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (109) ASSIGNMENT -> . ID IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> . ID IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> . ID IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> . ID IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> . ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> . ID IQUAL EXPRESSIONS DOT_AN_DCOMMA

    $end            reduce using rule 1 (INITIAL -> L_INST .)
    METHOD_VOID     shift and go to state 11
    TYPE_INT        shift and go to state 13
    TYPE_DOUBLE     shift and go to state 14
    TYPE_STRING     shift and go to state 15
    TYPE_CHAR       shift and go to state 16
    TYPE_BOOL       shift and go to state 17
    COMENTLINE      shift and go to state 22
    COMENTMULTYLINE shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    ID              shift and go to state 12
    CONDITIONAL_IF  shift and go to state 28
    ITERATIVE_WHILE shift and go to state 29
    ITERATIVE_DO    shift and go to state 30

    INTS                           shift and go to state 31
    METHODS                        shift and go to state 5
    FUNTIONS                       shift and go to state 6
    SENTENCES                      shift and go to state 7
    METHOD                         shift and go to state 8
    FUNTION                        shift and go to state 9
    SENTENCE                       shift and go to state 10
    DECLARATIONS                   shift and go to state 18
    ASSIGNMENTS                    shift and go to state 19
    SENTENCE_IF                    shift and go to state 20
    SENTENCE_WHILE                 shift and go to state 21
    DECLARATION                    shift and go to state 26
    ASSIGNMENT                     shift and go to state 27

state 3

    (3) L_INST -> INTS .

    METHOD_VOID     reduce using rule 3 (L_INST -> INTS .)
    TYPE_INT        reduce using rule 3 (L_INST -> INTS .)
    TYPE_DOUBLE     reduce using rule 3 (L_INST -> INTS .)
    TYPE_STRING     reduce using rule 3 (L_INST -> INTS .)
    TYPE_CHAR       reduce using rule 3 (L_INST -> INTS .)
    TYPE_BOOL       reduce using rule 3 (L_INST -> INTS .)
    COMENTLINE      reduce using rule 3 (L_INST -> INTS .)
    COMENTMULTYLINE reduce using rule 3 (L_INST -> INTS .)
    BREAK           reduce using rule 3 (L_INST -> INTS .)
    CONTINUE        reduce using rule 3 (L_INST -> INTS .)
    ID              reduce using rule 3 (L_INST -> INTS .)
    CONDITIONAL_IF  reduce using rule 3 (L_INST -> INTS .)
    ITERATIVE_WHILE reduce using rule 3 (L_INST -> INTS .)
    ITERATIVE_DO    reduce using rule 3 (L_INST -> INTS .)
    $end            reduce using rule 3 (L_INST -> INTS .)


state 4

    (4) L_INST -> empty .

    METHOD_VOID     reduce using rule 4 (L_INST -> empty .)
    TYPE_INT        reduce using rule 4 (L_INST -> empty .)
    TYPE_DOUBLE     reduce using rule 4 (L_INST -> empty .)
    TYPE_STRING     reduce using rule 4 (L_INST -> empty .)
    TYPE_CHAR       reduce using rule 4 (L_INST -> empty .)
    TYPE_BOOL       reduce using rule 4 (L_INST -> empty .)
    COMENTLINE      reduce using rule 4 (L_INST -> empty .)
    COMENTMULTYLINE reduce using rule 4 (L_INST -> empty .)
    BREAK           reduce using rule 4 (L_INST -> empty .)
    CONTINUE        reduce using rule 4 (L_INST -> empty .)
    ID              reduce using rule 4 (L_INST -> empty .)
    CONDITIONAL_IF  reduce using rule 4 (L_INST -> empty .)
    ITERATIVE_WHILE reduce using rule 4 (L_INST -> empty .)
    ITERATIVE_DO    reduce using rule 4 (L_INST -> empty .)
    $end            reduce using rule 4 (L_INST -> empty .)


state 5

    (5) INTS -> METHODS .
    (8) METHODS -> METHODS . METHOD
    (10) METHOD -> . METHOD_VOID ID LPAREN RPAREN LKEY empty RKEY
    (11) METHOD -> . METHOD_VOID ID LPAREN RPAREN LKEY SENTENCES_METHOD RKEY
    (12) METHOD -> . METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY empty RKEY
    (13) METHOD -> . METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_METHOD RKEY

  ! shift/reduce conflict for METHOD_VOID resolved as shift
    TYPE_INT        reduce using rule 5 (INTS -> METHODS .)
    TYPE_DOUBLE     reduce using rule 5 (INTS -> METHODS .)
    TYPE_STRING     reduce using rule 5 (INTS -> METHODS .)
    TYPE_CHAR       reduce using rule 5 (INTS -> METHODS .)
    TYPE_BOOL       reduce using rule 5 (INTS -> METHODS .)
    COMENTLINE      reduce using rule 5 (INTS -> METHODS .)
    COMENTMULTYLINE reduce using rule 5 (INTS -> METHODS .)
    BREAK           reduce using rule 5 (INTS -> METHODS .)
    CONTINUE        reduce using rule 5 (INTS -> METHODS .)
    ID              reduce using rule 5 (INTS -> METHODS .)
    CONDITIONAL_IF  reduce using rule 5 (INTS -> METHODS .)
    ITERATIVE_WHILE reduce using rule 5 (INTS -> METHODS .)
    ITERATIVE_DO    reduce using rule 5 (INTS -> METHODS .)
    $end            reduce using rule 5 (INTS -> METHODS .)
    METHOD_VOID     shift and go to state 11

  ! METHOD_VOID     [ reduce using rule 5 (INTS -> METHODS .) ]

    METHOD                         shift and go to state 32

state 6

    (6) INTS -> FUNTIONS .
    (14) FUNTIONS -> FUNTIONS . FUNTION
    (16) FUNTION -> . TYPE_INT COUPLER
    (17) FUNTION -> . TYPE_DOUBLE COUPLER
    (18) FUNTION -> . TYPE_STRING COUPLER
    (19) FUNTION -> . TYPE_CHAR COUPLER
    (20) FUNTION -> . TYPE_BOOL COUPLER

  ! shift/reduce conflict for TYPE_INT resolved as shift
  ! shift/reduce conflict for TYPE_DOUBLE resolved as shift
  ! shift/reduce conflict for TYPE_STRING resolved as shift
  ! shift/reduce conflict for TYPE_CHAR resolved as shift
  ! shift/reduce conflict for TYPE_BOOL resolved as shift
    METHOD_VOID     reduce using rule 6 (INTS -> FUNTIONS .)
    COMENTLINE      reduce using rule 6 (INTS -> FUNTIONS .)
    COMENTMULTYLINE reduce using rule 6 (INTS -> FUNTIONS .)
    BREAK           reduce using rule 6 (INTS -> FUNTIONS .)
    CONTINUE        reduce using rule 6 (INTS -> FUNTIONS .)
    ID              reduce using rule 6 (INTS -> FUNTIONS .)
    CONDITIONAL_IF  reduce using rule 6 (INTS -> FUNTIONS .)
    ITERATIVE_WHILE reduce using rule 6 (INTS -> FUNTIONS .)
    ITERATIVE_DO    reduce using rule 6 (INTS -> FUNTIONS .)
    $end            reduce using rule 6 (INTS -> FUNTIONS .)
    TYPE_INT        shift and go to state 34
    TYPE_DOUBLE     shift and go to state 35
    TYPE_STRING     shift and go to state 36
    TYPE_CHAR       shift and go to state 37
    TYPE_BOOL       shift and go to state 38

  ! TYPE_INT        [ reduce using rule 6 (INTS -> FUNTIONS .) ]
  ! TYPE_DOUBLE     [ reduce using rule 6 (INTS -> FUNTIONS .) ]
  ! TYPE_STRING     [ reduce using rule 6 (INTS -> FUNTIONS .) ]
  ! TYPE_CHAR       [ reduce using rule 6 (INTS -> FUNTIONS .) ]
  ! TYPE_BOOL       [ reduce using rule 6 (INTS -> FUNTIONS .) ]

    FUNTION                        shift and go to state 33

state 7

    (7) INTS -> SENTENCES .
    (50) SENTENCES -> SENTENCES . SENTENCE
    (52) SENTENCE -> . DECLARATIONS
    (53) SENTENCE -> . ASSIGNMENTS
    (54) SENTENCE -> . SENTENCE_IF
    (55) SENTENCE -> . SENTENCE_WHILE
    (56) SENTENCE -> . COMENTLINE
    (57) SENTENCE -> . COMENTMULTYLINE
    (58) SENTENCE -> . BREAK DOT_AN_DCOMMA
    (59) SENTENCE -> . CONTINUE DOT_AN_DCOMMA
    (60) SENTENCE -> . ID LPAREN CALLS RPAREN
    (100) DECLARATIONS -> . DECLARATIONS DECLARATION
    (101) DECLARATIONS -> . DECLARATION
    (107) ASSIGNMENTS -> . ASSIGNMENTS ASSIGNMENT
    (108) ASSIGNMENTS -> . ASSIGNMENT
    (63) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY
    (71) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (72) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (73) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (74) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (75) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (76) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (102) DECLARATION -> . TYPE_INT ID IQUAL INT DOT_AN_DCOMMA
    (103) DECLARATION -> . TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA
    (104) DECLARATION -> . TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA
    (105) DECLARATION -> . TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA
    (106) DECLARATION -> . TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (109) ASSIGNMENT -> . ID IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> . ID IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> . ID IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> . ID IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> . ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> . ID IQUAL EXPRESSIONS DOT_AN_DCOMMA

  ! shift/reduce conflict for COMENTLINE resolved as shift
  ! shift/reduce conflict for COMENTMULTYLINE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CONDITIONAL_IF resolved as shift
  ! shift/reduce conflict for ITERATIVE_WHILE resolved as shift
  ! shift/reduce conflict for ITERATIVE_DO resolved as shift
  ! shift/reduce conflict for TYPE_INT resolved as shift
  ! shift/reduce conflict for TYPE_DOUBLE resolved as shift
  ! shift/reduce conflict for TYPE_STRING resolved as shift
  ! shift/reduce conflict for TYPE_CHAR resolved as shift
  ! shift/reduce conflict for TYPE_BOOL resolved as shift
    METHOD_VOID     reduce using rule 7 (INTS -> SENTENCES .)
    $end            reduce using rule 7 (INTS -> SENTENCES .)
    COMENTLINE      shift and go to state 22
    COMENTMULTYLINE shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    ID              shift and go to state 12
    CONDITIONAL_IF  shift and go to state 28
    ITERATIVE_WHILE shift and go to state 29
    ITERATIVE_DO    shift and go to state 30
    TYPE_INT        shift and go to state 40
    TYPE_DOUBLE     shift and go to state 41
    TYPE_STRING     shift and go to state 42
    TYPE_CHAR       shift and go to state 43
    TYPE_BOOL       shift and go to state 44

  ! TYPE_INT        [ reduce using rule 7 (INTS -> SENTENCES .) ]
  ! TYPE_DOUBLE     [ reduce using rule 7 (INTS -> SENTENCES .) ]
  ! TYPE_STRING     [ reduce using rule 7 (INTS -> SENTENCES .) ]
  ! TYPE_CHAR       [ reduce using rule 7 (INTS -> SENTENCES .) ]
  ! TYPE_BOOL       [ reduce using rule 7 (INTS -> SENTENCES .) ]
  ! COMENTLINE      [ reduce using rule 7 (INTS -> SENTENCES .) ]
  ! COMENTMULTYLINE [ reduce using rule 7 (INTS -> SENTENCES .) ]
  ! BREAK           [ reduce using rule 7 (INTS -> SENTENCES .) ]
  ! CONTINUE        [ reduce using rule 7 (INTS -> SENTENCES .) ]
  ! ID              [ reduce using rule 7 (INTS -> SENTENCES .) ]
  ! CONDITIONAL_IF  [ reduce using rule 7 (INTS -> SENTENCES .) ]
  ! ITERATIVE_WHILE [ reduce using rule 7 (INTS -> SENTENCES .) ]
  ! ITERATIVE_DO    [ reduce using rule 7 (INTS -> SENTENCES .) ]

    SENTENCE                       shift and go to state 39
    DECLARATIONS                   shift and go to state 18
    ASSIGNMENTS                    shift and go to state 19
    SENTENCE_IF                    shift and go to state 20
    SENTENCE_WHILE                 shift and go to state 21
    DECLARATION                    shift and go to state 26
    ASSIGNMENT                     shift and go to state 27

state 8

    (9) METHODS -> METHOD .

    METHOD_VOID     reduce using rule 9 (METHODS -> METHOD .)
    TYPE_INT        reduce using rule 9 (METHODS -> METHOD .)
    TYPE_DOUBLE     reduce using rule 9 (METHODS -> METHOD .)
    TYPE_STRING     reduce using rule 9 (METHODS -> METHOD .)
    TYPE_CHAR       reduce using rule 9 (METHODS -> METHOD .)
    TYPE_BOOL       reduce using rule 9 (METHODS -> METHOD .)
    COMENTLINE      reduce using rule 9 (METHODS -> METHOD .)
    COMENTMULTYLINE reduce using rule 9 (METHODS -> METHOD .)
    BREAK           reduce using rule 9 (METHODS -> METHOD .)
    CONTINUE        reduce using rule 9 (METHODS -> METHOD .)
    ID              reduce using rule 9 (METHODS -> METHOD .)
    CONDITIONAL_IF  reduce using rule 9 (METHODS -> METHOD .)
    ITERATIVE_WHILE reduce using rule 9 (METHODS -> METHOD .)
    ITERATIVE_DO    reduce using rule 9 (METHODS -> METHOD .)
    $end            reduce using rule 9 (METHODS -> METHOD .)


state 9

    (15) FUNTIONS -> FUNTION .

    TYPE_INT        reduce using rule 15 (FUNTIONS -> FUNTION .)
    TYPE_DOUBLE     reduce using rule 15 (FUNTIONS -> FUNTION .)
    TYPE_STRING     reduce using rule 15 (FUNTIONS -> FUNTION .)
    TYPE_CHAR       reduce using rule 15 (FUNTIONS -> FUNTION .)
    TYPE_BOOL       reduce using rule 15 (FUNTIONS -> FUNTION .)
    METHOD_VOID     reduce using rule 15 (FUNTIONS -> FUNTION .)
    COMENTLINE      reduce using rule 15 (FUNTIONS -> FUNTION .)
    COMENTMULTYLINE reduce using rule 15 (FUNTIONS -> FUNTION .)
    BREAK           reduce using rule 15 (FUNTIONS -> FUNTION .)
    CONTINUE        reduce using rule 15 (FUNTIONS -> FUNTION .)
    ID              reduce using rule 15 (FUNTIONS -> FUNTION .)
    CONDITIONAL_IF  reduce using rule 15 (FUNTIONS -> FUNTION .)
    ITERATIVE_WHILE reduce using rule 15 (FUNTIONS -> FUNTION .)
    ITERATIVE_DO    reduce using rule 15 (FUNTIONS -> FUNTION .)
    $end            reduce using rule 15 (FUNTIONS -> FUNTION .)


state 10

    (51) SENTENCES -> SENTENCE .

    COMENTLINE      reduce using rule 51 (SENTENCES -> SENTENCE .)
    COMENTMULTYLINE reduce using rule 51 (SENTENCES -> SENTENCE .)
    BREAK           reduce using rule 51 (SENTENCES -> SENTENCE .)
    CONTINUE        reduce using rule 51 (SENTENCES -> SENTENCE .)
    ID              reduce using rule 51 (SENTENCES -> SENTENCE .)
    CONDITIONAL_IF  reduce using rule 51 (SENTENCES -> SENTENCE .)
    ITERATIVE_WHILE reduce using rule 51 (SENTENCES -> SENTENCE .)
    ITERATIVE_DO    reduce using rule 51 (SENTENCES -> SENTENCE .)
    TYPE_INT        reduce using rule 51 (SENTENCES -> SENTENCE .)
    TYPE_DOUBLE     reduce using rule 51 (SENTENCES -> SENTENCE .)
    TYPE_STRING     reduce using rule 51 (SENTENCES -> SENTENCE .)
    TYPE_CHAR       reduce using rule 51 (SENTENCES -> SENTENCE .)
    TYPE_BOOL       reduce using rule 51 (SENTENCES -> SENTENCE .)
    METHOD_VOID     reduce using rule 51 (SENTENCES -> SENTENCE .)
    $end            reduce using rule 51 (SENTENCES -> SENTENCE .)
    RKEY            reduce using rule 51 (SENTENCES -> SENTENCE .)


state 11

    (10) METHOD -> METHOD_VOID . ID LPAREN RPAREN LKEY empty RKEY
    (11) METHOD -> METHOD_VOID . ID LPAREN RPAREN LKEY SENTENCES_METHOD RKEY
    (12) METHOD -> METHOD_VOID . ID LPAREN L_PARAMS RPAREN LKEY empty RKEY
    (13) METHOD -> METHOD_VOID . ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_METHOD RKEY

    ID              shift and go to state 45


state 12

    (60) SENTENCE -> ID . LPAREN CALLS RPAREN
    (109) ASSIGNMENT -> ID . IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> ID . IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> ID . IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> ID . IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> ID . IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> ID . IQUAL EXPRESSIONS DOT_AN_DCOMMA

    LPAREN          shift and go to state 46
    IQUAL           shift and go to state 47


state 13

    (16) FUNTION -> TYPE_INT . COUPLER
    (102) DECLARATION -> TYPE_INT . ID IQUAL INT DOT_AN_DCOMMA
    (21) COUPLER -> . ID LPAREN RPAREN LKEY empty RKEY
    (22) COUPLER -> . ID LPAREN RPAREN LKEY SENTENCES_FUNTION RKEY
    (23) COUPLER -> . ID LPAREN L_PARAMS RPAREN LKEY empty RKEY
    (24) COUPLER -> . ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_FUNTION RKEY

    ID              shift and go to state 49

    COUPLER                        shift and go to state 48

state 14

    (17) FUNTION -> TYPE_DOUBLE . COUPLER
    (103) DECLARATION -> TYPE_DOUBLE . ID IQUAL FLOAT DOT_AN_DCOMMA
    (21) COUPLER -> . ID LPAREN RPAREN LKEY empty RKEY
    (22) COUPLER -> . ID LPAREN RPAREN LKEY SENTENCES_FUNTION RKEY
    (23) COUPLER -> . ID LPAREN L_PARAMS RPAREN LKEY empty RKEY
    (24) COUPLER -> . ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_FUNTION RKEY

    ID              shift and go to state 51

    COUPLER                        shift and go to state 50

state 15

    (18) FUNTION -> TYPE_STRING . COUPLER
    (104) DECLARATION -> TYPE_STRING . ID IQUAL STRING DOT_AN_DCOMMA
    (21) COUPLER -> . ID LPAREN RPAREN LKEY empty RKEY
    (22) COUPLER -> . ID LPAREN RPAREN LKEY SENTENCES_FUNTION RKEY
    (23) COUPLER -> . ID LPAREN L_PARAMS RPAREN LKEY empty RKEY
    (24) COUPLER -> . ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_FUNTION RKEY

    ID              shift and go to state 53

    COUPLER                        shift and go to state 52

state 16

    (19) FUNTION -> TYPE_CHAR . COUPLER
    (105) DECLARATION -> TYPE_CHAR . ID IQUAL CHAR DOT_AN_DCOMMA
    (21) COUPLER -> . ID LPAREN RPAREN LKEY empty RKEY
    (22) COUPLER -> . ID LPAREN RPAREN LKEY SENTENCES_FUNTION RKEY
    (23) COUPLER -> . ID LPAREN L_PARAMS RPAREN LKEY empty RKEY
    (24) COUPLER -> . ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_FUNTION RKEY

    ID              shift and go to state 55

    COUPLER                        shift and go to state 54

state 17

    (20) FUNTION -> TYPE_BOOL . COUPLER
    (106) DECLARATION -> TYPE_BOOL . ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (21) COUPLER -> . ID LPAREN RPAREN LKEY empty RKEY
    (22) COUPLER -> . ID LPAREN RPAREN LKEY SENTENCES_FUNTION RKEY
    (23) COUPLER -> . ID LPAREN L_PARAMS RPAREN LKEY empty RKEY
    (24) COUPLER -> . ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_FUNTION RKEY

    ID              shift and go to state 57

    COUPLER                        shift and go to state 56

state 18

    (52) SENTENCE -> DECLARATIONS .
    (100) DECLARATIONS -> DECLARATIONS . DECLARATION
    (102) DECLARATION -> . TYPE_INT ID IQUAL INT DOT_AN_DCOMMA
    (103) DECLARATION -> . TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA
    (104) DECLARATION -> . TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA
    (105) DECLARATION -> . TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA
    (106) DECLARATION -> . TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA

  ! shift/reduce conflict for TYPE_INT resolved as shift
  ! shift/reduce conflict for TYPE_DOUBLE resolved as shift
  ! shift/reduce conflict for TYPE_STRING resolved as shift
  ! shift/reduce conflict for TYPE_CHAR resolved as shift
  ! shift/reduce conflict for TYPE_BOOL resolved as shift
    COMENTLINE      reduce using rule 52 (SENTENCE -> DECLARATIONS .)
    COMENTMULTYLINE reduce using rule 52 (SENTENCE -> DECLARATIONS .)
    BREAK           reduce using rule 52 (SENTENCE -> DECLARATIONS .)
    CONTINUE        reduce using rule 52 (SENTENCE -> DECLARATIONS .)
    ID              reduce using rule 52 (SENTENCE -> DECLARATIONS .)
    CONDITIONAL_IF  reduce using rule 52 (SENTENCE -> DECLARATIONS .)
    ITERATIVE_WHILE reduce using rule 52 (SENTENCE -> DECLARATIONS .)
    ITERATIVE_DO    reduce using rule 52 (SENTENCE -> DECLARATIONS .)
    METHOD_VOID     reduce using rule 52 (SENTENCE -> DECLARATIONS .)
    $end            reduce using rule 52 (SENTENCE -> DECLARATIONS .)
    RKEY            reduce using rule 52 (SENTENCE -> DECLARATIONS .)
    TYPE_INT        shift and go to state 40
    TYPE_DOUBLE     shift and go to state 41
    TYPE_STRING     shift and go to state 42
    TYPE_CHAR       shift and go to state 43
    TYPE_BOOL       shift and go to state 44

  ! TYPE_INT        [ reduce using rule 52 (SENTENCE -> DECLARATIONS .) ]
  ! TYPE_DOUBLE     [ reduce using rule 52 (SENTENCE -> DECLARATIONS .) ]
  ! TYPE_STRING     [ reduce using rule 52 (SENTENCE -> DECLARATIONS .) ]
  ! TYPE_CHAR       [ reduce using rule 52 (SENTENCE -> DECLARATIONS .) ]
  ! TYPE_BOOL       [ reduce using rule 52 (SENTENCE -> DECLARATIONS .) ]

    DECLARATION                    shift and go to state 58

state 19

    (53) SENTENCE -> ASSIGNMENTS .
    (107) ASSIGNMENTS -> ASSIGNMENTS . ASSIGNMENT
    (109) ASSIGNMENT -> . ID IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> . ID IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> . ID IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> . ID IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> . ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> . ID IQUAL EXPRESSIONS DOT_AN_DCOMMA

  ! shift/reduce conflict for ID resolved as shift
    COMENTLINE      reduce using rule 53 (SENTENCE -> ASSIGNMENTS .)
    COMENTMULTYLINE reduce using rule 53 (SENTENCE -> ASSIGNMENTS .)
    BREAK           reduce using rule 53 (SENTENCE -> ASSIGNMENTS .)
    CONTINUE        reduce using rule 53 (SENTENCE -> ASSIGNMENTS .)
    CONDITIONAL_IF  reduce using rule 53 (SENTENCE -> ASSIGNMENTS .)
    ITERATIVE_WHILE reduce using rule 53 (SENTENCE -> ASSIGNMENTS .)
    ITERATIVE_DO    reduce using rule 53 (SENTENCE -> ASSIGNMENTS .)
    TYPE_INT        reduce using rule 53 (SENTENCE -> ASSIGNMENTS .)
    TYPE_DOUBLE     reduce using rule 53 (SENTENCE -> ASSIGNMENTS .)
    TYPE_STRING     reduce using rule 53 (SENTENCE -> ASSIGNMENTS .)
    TYPE_CHAR       reduce using rule 53 (SENTENCE -> ASSIGNMENTS .)
    TYPE_BOOL       reduce using rule 53 (SENTENCE -> ASSIGNMENTS .)
    METHOD_VOID     reduce using rule 53 (SENTENCE -> ASSIGNMENTS .)
    $end            reduce using rule 53 (SENTENCE -> ASSIGNMENTS .)
    RKEY            reduce using rule 53 (SENTENCE -> ASSIGNMENTS .)
    ID              shift and go to state 60

  ! ID              [ reduce using rule 53 (SENTENCE -> ASSIGNMENTS .) ]

    ASSIGNMENT                     shift and go to state 59

state 20

    (54) SENTENCE -> SENTENCE_IF .

    COMENTLINE      reduce using rule 54 (SENTENCE -> SENTENCE_IF .)
    COMENTMULTYLINE reduce using rule 54 (SENTENCE -> SENTENCE_IF .)
    BREAK           reduce using rule 54 (SENTENCE -> SENTENCE_IF .)
    CONTINUE        reduce using rule 54 (SENTENCE -> SENTENCE_IF .)
    ID              reduce using rule 54 (SENTENCE -> SENTENCE_IF .)
    CONDITIONAL_IF  reduce using rule 54 (SENTENCE -> SENTENCE_IF .)
    ITERATIVE_WHILE reduce using rule 54 (SENTENCE -> SENTENCE_IF .)
    ITERATIVE_DO    reduce using rule 54 (SENTENCE -> SENTENCE_IF .)
    TYPE_INT        reduce using rule 54 (SENTENCE -> SENTENCE_IF .)
    TYPE_DOUBLE     reduce using rule 54 (SENTENCE -> SENTENCE_IF .)
    TYPE_STRING     reduce using rule 54 (SENTENCE -> SENTENCE_IF .)
    TYPE_CHAR       reduce using rule 54 (SENTENCE -> SENTENCE_IF .)
    TYPE_BOOL       reduce using rule 54 (SENTENCE -> SENTENCE_IF .)
    METHOD_VOID     reduce using rule 54 (SENTENCE -> SENTENCE_IF .)
    $end            reduce using rule 54 (SENTENCE -> SENTENCE_IF .)
    RKEY            reduce using rule 54 (SENTENCE -> SENTENCE_IF .)


state 21

    (55) SENTENCE -> SENTENCE_WHILE .

    COMENTLINE      reduce using rule 55 (SENTENCE -> SENTENCE_WHILE .)
    COMENTMULTYLINE reduce using rule 55 (SENTENCE -> SENTENCE_WHILE .)
    BREAK           reduce using rule 55 (SENTENCE -> SENTENCE_WHILE .)
    CONTINUE        reduce using rule 55 (SENTENCE -> SENTENCE_WHILE .)
    ID              reduce using rule 55 (SENTENCE -> SENTENCE_WHILE .)
    CONDITIONAL_IF  reduce using rule 55 (SENTENCE -> SENTENCE_WHILE .)
    ITERATIVE_WHILE reduce using rule 55 (SENTENCE -> SENTENCE_WHILE .)
    ITERATIVE_DO    reduce using rule 55 (SENTENCE -> SENTENCE_WHILE .)
    TYPE_INT        reduce using rule 55 (SENTENCE -> SENTENCE_WHILE .)
    TYPE_DOUBLE     reduce using rule 55 (SENTENCE -> SENTENCE_WHILE .)
    TYPE_STRING     reduce using rule 55 (SENTENCE -> SENTENCE_WHILE .)
    TYPE_CHAR       reduce using rule 55 (SENTENCE -> SENTENCE_WHILE .)
    TYPE_BOOL       reduce using rule 55 (SENTENCE -> SENTENCE_WHILE .)
    METHOD_VOID     reduce using rule 55 (SENTENCE -> SENTENCE_WHILE .)
    $end            reduce using rule 55 (SENTENCE -> SENTENCE_WHILE .)
    RKEY            reduce using rule 55 (SENTENCE -> SENTENCE_WHILE .)


state 22

    (56) SENTENCE -> COMENTLINE .

    COMENTLINE      reduce using rule 56 (SENTENCE -> COMENTLINE .)
    COMENTMULTYLINE reduce using rule 56 (SENTENCE -> COMENTLINE .)
    BREAK           reduce using rule 56 (SENTENCE -> COMENTLINE .)
    CONTINUE        reduce using rule 56 (SENTENCE -> COMENTLINE .)
    ID              reduce using rule 56 (SENTENCE -> COMENTLINE .)
    CONDITIONAL_IF  reduce using rule 56 (SENTENCE -> COMENTLINE .)
    ITERATIVE_WHILE reduce using rule 56 (SENTENCE -> COMENTLINE .)
    ITERATIVE_DO    reduce using rule 56 (SENTENCE -> COMENTLINE .)
    TYPE_INT        reduce using rule 56 (SENTENCE -> COMENTLINE .)
    TYPE_DOUBLE     reduce using rule 56 (SENTENCE -> COMENTLINE .)
    TYPE_STRING     reduce using rule 56 (SENTENCE -> COMENTLINE .)
    TYPE_CHAR       reduce using rule 56 (SENTENCE -> COMENTLINE .)
    TYPE_BOOL       reduce using rule 56 (SENTENCE -> COMENTLINE .)
    METHOD_VOID     reduce using rule 56 (SENTENCE -> COMENTLINE .)
    $end            reduce using rule 56 (SENTENCE -> COMENTLINE .)
    RKEY            reduce using rule 56 (SENTENCE -> COMENTLINE .)


state 23

    (57) SENTENCE -> COMENTMULTYLINE .

    COMENTLINE      reduce using rule 57 (SENTENCE -> COMENTMULTYLINE .)
    COMENTMULTYLINE reduce using rule 57 (SENTENCE -> COMENTMULTYLINE .)
    BREAK           reduce using rule 57 (SENTENCE -> COMENTMULTYLINE .)
    CONTINUE        reduce using rule 57 (SENTENCE -> COMENTMULTYLINE .)
    ID              reduce using rule 57 (SENTENCE -> COMENTMULTYLINE .)
    CONDITIONAL_IF  reduce using rule 57 (SENTENCE -> COMENTMULTYLINE .)
    ITERATIVE_WHILE reduce using rule 57 (SENTENCE -> COMENTMULTYLINE .)
    ITERATIVE_DO    reduce using rule 57 (SENTENCE -> COMENTMULTYLINE .)
    TYPE_INT        reduce using rule 57 (SENTENCE -> COMENTMULTYLINE .)
    TYPE_DOUBLE     reduce using rule 57 (SENTENCE -> COMENTMULTYLINE .)
    TYPE_STRING     reduce using rule 57 (SENTENCE -> COMENTMULTYLINE .)
    TYPE_CHAR       reduce using rule 57 (SENTENCE -> COMENTMULTYLINE .)
    TYPE_BOOL       reduce using rule 57 (SENTENCE -> COMENTMULTYLINE .)
    METHOD_VOID     reduce using rule 57 (SENTENCE -> COMENTMULTYLINE .)
    $end            reduce using rule 57 (SENTENCE -> COMENTMULTYLINE .)
    RKEY            reduce using rule 57 (SENTENCE -> COMENTMULTYLINE .)


state 24

    (58) SENTENCE -> BREAK . DOT_AN_DCOMMA

    DOT_AN_DCOMMA   shift and go to state 61


state 25

    (59) SENTENCE -> CONTINUE . DOT_AN_DCOMMA

    DOT_AN_DCOMMA   shift and go to state 62


state 26

    (101) DECLARATIONS -> DECLARATION .

    TYPE_INT        reduce using rule 101 (DECLARATIONS -> DECLARATION .)
    TYPE_DOUBLE     reduce using rule 101 (DECLARATIONS -> DECLARATION .)
    TYPE_STRING     reduce using rule 101 (DECLARATIONS -> DECLARATION .)
    TYPE_CHAR       reduce using rule 101 (DECLARATIONS -> DECLARATION .)
    TYPE_BOOL       reduce using rule 101 (DECLARATIONS -> DECLARATION .)
    COMENTLINE      reduce using rule 101 (DECLARATIONS -> DECLARATION .)
    COMENTMULTYLINE reduce using rule 101 (DECLARATIONS -> DECLARATION .)
    BREAK           reduce using rule 101 (DECLARATIONS -> DECLARATION .)
    CONTINUE        reduce using rule 101 (DECLARATIONS -> DECLARATION .)
    ID              reduce using rule 101 (DECLARATIONS -> DECLARATION .)
    CONDITIONAL_IF  reduce using rule 101 (DECLARATIONS -> DECLARATION .)
    ITERATIVE_WHILE reduce using rule 101 (DECLARATIONS -> DECLARATION .)
    ITERATIVE_DO    reduce using rule 101 (DECLARATIONS -> DECLARATION .)
    METHOD_VOID     reduce using rule 101 (DECLARATIONS -> DECLARATION .)
    $end            reduce using rule 101 (DECLARATIONS -> DECLARATION .)
    RKEY            reduce using rule 101 (DECLARATIONS -> DECLARATION .)
    METHOD_RETURN   reduce using rule 101 (DECLARATIONS -> DECLARATION .)


state 27

    (108) ASSIGNMENTS -> ASSIGNMENT .

    ID              reduce using rule 108 (ASSIGNMENTS -> ASSIGNMENT .)
    COMENTLINE      reduce using rule 108 (ASSIGNMENTS -> ASSIGNMENT .)
    COMENTMULTYLINE reduce using rule 108 (ASSIGNMENTS -> ASSIGNMENT .)
    BREAK           reduce using rule 108 (ASSIGNMENTS -> ASSIGNMENT .)
    CONTINUE        reduce using rule 108 (ASSIGNMENTS -> ASSIGNMENT .)
    CONDITIONAL_IF  reduce using rule 108 (ASSIGNMENTS -> ASSIGNMENT .)
    ITERATIVE_WHILE reduce using rule 108 (ASSIGNMENTS -> ASSIGNMENT .)
    ITERATIVE_DO    reduce using rule 108 (ASSIGNMENTS -> ASSIGNMENT .)
    TYPE_INT        reduce using rule 108 (ASSIGNMENTS -> ASSIGNMENT .)
    TYPE_DOUBLE     reduce using rule 108 (ASSIGNMENTS -> ASSIGNMENT .)
    TYPE_STRING     reduce using rule 108 (ASSIGNMENTS -> ASSIGNMENT .)
    TYPE_CHAR       reduce using rule 108 (ASSIGNMENTS -> ASSIGNMENT .)
    TYPE_BOOL       reduce using rule 108 (ASSIGNMENTS -> ASSIGNMENT .)
    METHOD_VOID     reduce using rule 108 (ASSIGNMENTS -> ASSIGNMENT .)
    $end            reduce using rule 108 (ASSIGNMENTS -> ASSIGNMENT .)
    RKEY            reduce using rule 108 (ASSIGNMENTS -> ASSIGNMENT .)
    METHOD_RETURN   reduce using rule 108 (ASSIGNMENTS -> ASSIGNMENT .)


state 28

    (63) SENTENCE_IF -> CONDITIONAL_IF . LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> CONDITIONAL_IF . LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> CONDITIONAL_IF . LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> CONDITIONAL_IF . LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> CONDITIONAL_IF . LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> CONDITIONAL_IF . LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY

    LPAREN          shift and go to state 63


state 29

    (71) SENTENCE_WHILE -> ITERATIVE_WHILE . LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (73) SENTENCE_WHILE -> ITERATIVE_WHILE . LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (75) SENTENCE_WHILE -> ITERATIVE_WHILE . LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY

    LPAREN          shift and go to state 64


state 30

    (72) SENTENCE_WHILE -> ITERATIVE_DO . LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (74) SENTENCE_WHILE -> ITERATIVE_DO . LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (76) SENTENCE_WHILE -> ITERATIVE_DO . LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA

    LKEY            shift and go to state 65


state 31

    (2) L_INST -> L_INST INTS .

    METHOD_VOID     reduce using rule 2 (L_INST -> L_INST INTS .)
    TYPE_INT        reduce using rule 2 (L_INST -> L_INST INTS .)
    TYPE_DOUBLE     reduce using rule 2 (L_INST -> L_INST INTS .)
    TYPE_STRING     reduce using rule 2 (L_INST -> L_INST INTS .)
    TYPE_CHAR       reduce using rule 2 (L_INST -> L_INST INTS .)
    TYPE_BOOL       reduce using rule 2 (L_INST -> L_INST INTS .)
    COMENTLINE      reduce using rule 2 (L_INST -> L_INST INTS .)
    COMENTMULTYLINE reduce using rule 2 (L_INST -> L_INST INTS .)
    BREAK           reduce using rule 2 (L_INST -> L_INST INTS .)
    CONTINUE        reduce using rule 2 (L_INST -> L_INST INTS .)
    ID              reduce using rule 2 (L_INST -> L_INST INTS .)
    CONDITIONAL_IF  reduce using rule 2 (L_INST -> L_INST INTS .)
    ITERATIVE_WHILE reduce using rule 2 (L_INST -> L_INST INTS .)
    ITERATIVE_DO    reduce using rule 2 (L_INST -> L_INST INTS .)
    $end            reduce using rule 2 (L_INST -> L_INST INTS .)


state 32

    (8) METHODS -> METHODS METHOD .

    METHOD_VOID     reduce using rule 8 (METHODS -> METHODS METHOD .)
    TYPE_INT        reduce using rule 8 (METHODS -> METHODS METHOD .)
    TYPE_DOUBLE     reduce using rule 8 (METHODS -> METHODS METHOD .)
    TYPE_STRING     reduce using rule 8 (METHODS -> METHODS METHOD .)
    TYPE_CHAR       reduce using rule 8 (METHODS -> METHODS METHOD .)
    TYPE_BOOL       reduce using rule 8 (METHODS -> METHODS METHOD .)
    COMENTLINE      reduce using rule 8 (METHODS -> METHODS METHOD .)
    COMENTMULTYLINE reduce using rule 8 (METHODS -> METHODS METHOD .)
    BREAK           reduce using rule 8 (METHODS -> METHODS METHOD .)
    CONTINUE        reduce using rule 8 (METHODS -> METHODS METHOD .)
    ID              reduce using rule 8 (METHODS -> METHODS METHOD .)
    CONDITIONAL_IF  reduce using rule 8 (METHODS -> METHODS METHOD .)
    ITERATIVE_WHILE reduce using rule 8 (METHODS -> METHODS METHOD .)
    ITERATIVE_DO    reduce using rule 8 (METHODS -> METHODS METHOD .)
    $end            reduce using rule 8 (METHODS -> METHODS METHOD .)


state 33

    (14) FUNTIONS -> FUNTIONS FUNTION .

    TYPE_INT        reduce using rule 14 (FUNTIONS -> FUNTIONS FUNTION .)
    TYPE_DOUBLE     reduce using rule 14 (FUNTIONS -> FUNTIONS FUNTION .)
    TYPE_STRING     reduce using rule 14 (FUNTIONS -> FUNTIONS FUNTION .)
    TYPE_CHAR       reduce using rule 14 (FUNTIONS -> FUNTIONS FUNTION .)
    TYPE_BOOL       reduce using rule 14 (FUNTIONS -> FUNTIONS FUNTION .)
    METHOD_VOID     reduce using rule 14 (FUNTIONS -> FUNTIONS FUNTION .)
    COMENTLINE      reduce using rule 14 (FUNTIONS -> FUNTIONS FUNTION .)
    COMENTMULTYLINE reduce using rule 14 (FUNTIONS -> FUNTIONS FUNTION .)
    BREAK           reduce using rule 14 (FUNTIONS -> FUNTIONS FUNTION .)
    CONTINUE        reduce using rule 14 (FUNTIONS -> FUNTIONS FUNTION .)
    ID              reduce using rule 14 (FUNTIONS -> FUNTIONS FUNTION .)
    CONDITIONAL_IF  reduce using rule 14 (FUNTIONS -> FUNTIONS FUNTION .)
    ITERATIVE_WHILE reduce using rule 14 (FUNTIONS -> FUNTIONS FUNTION .)
    ITERATIVE_DO    reduce using rule 14 (FUNTIONS -> FUNTIONS FUNTION .)
    $end            reduce using rule 14 (FUNTIONS -> FUNTIONS FUNTION .)


state 34

    (16) FUNTION -> TYPE_INT . COUPLER
    (21) COUPLER -> . ID LPAREN RPAREN LKEY empty RKEY
    (22) COUPLER -> . ID LPAREN RPAREN LKEY SENTENCES_FUNTION RKEY
    (23) COUPLER -> . ID LPAREN L_PARAMS RPAREN LKEY empty RKEY
    (24) COUPLER -> . ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_FUNTION RKEY

    ID              shift and go to state 66

    COUPLER                        shift and go to state 48

state 35

    (17) FUNTION -> TYPE_DOUBLE . COUPLER
    (21) COUPLER -> . ID LPAREN RPAREN LKEY empty RKEY
    (22) COUPLER -> . ID LPAREN RPAREN LKEY SENTENCES_FUNTION RKEY
    (23) COUPLER -> . ID LPAREN L_PARAMS RPAREN LKEY empty RKEY
    (24) COUPLER -> . ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_FUNTION RKEY

    ID              shift and go to state 66

    COUPLER                        shift and go to state 50

state 36

    (18) FUNTION -> TYPE_STRING . COUPLER
    (21) COUPLER -> . ID LPAREN RPAREN LKEY empty RKEY
    (22) COUPLER -> . ID LPAREN RPAREN LKEY SENTENCES_FUNTION RKEY
    (23) COUPLER -> . ID LPAREN L_PARAMS RPAREN LKEY empty RKEY
    (24) COUPLER -> . ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_FUNTION RKEY

    ID              shift and go to state 66

    COUPLER                        shift and go to state 52

state 37

    (19) FUNTION -> TYPE_CHAR . COUPLER
    (21) COUPLER -> . ID LPAREN RPAREN LKEY empty RKEY
    (22) COUPLER -> . ID LPAREN RPAREN LKEY SENTENCES_FUNTION RKEY
    (23) COUPLER -> . ID LPAREN L_PARAMS RPAREN LKEY empty RKEY
    (24) COUPLER -> . ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_FUNTION RKEY

    ID              shift and go to state 66

    COUPLER                        shift and go to state 54

state 38

    (20) FUNTION -> TYPE_BOOL . COUPLER
    (21) COUPLER -> . ID LPAREN RPAREN LKEY empty RKEY
    (22) COUPLER -> . ID LPAREN RPAREN LKEY SENTENCES_FUNTION RKEY
    (23) COUPLER -> . ID LPAREN L_PARAMS RPAREN LKEY empty RKEY
    (24) COUPLER -> . ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_FUNTION RKEY

    ID              shift and go to state 66

    COUPLER                        shift and go to state 56

state 39

    (50) SENTENCES -> SENTENCES SENTENCE .

    COMENTLINE      reduce using rule 50 (SENTENCES -> SENTENCES SENTENCE .)
    COMENTMULTYLINE reduce using rule 50 (SENTENCES -> SENTENCES SENTENCE .)
    BREAK           reduce using rule 50 (SENTENCES -> SENTENCES SENTENCE .)
    CONTINUE        reduce using rule 50 (SENTENCES -> SENTENCES SENTENCE .)
    ID              reduce using rule 50 (SENTENCES -> SENTENCES SENTENCE .)
    CONDITIONAL_IF  reduce using rule 50 (SENTENCES -> SENTENCES SENTENCE .)
    ITERATIVE_WHILE reduce using rule 50 (SENTENCES -> SENTENCES SENTENCE .)
    ITERATIVE_DO    reduce using rule 50 (SENTENCES -> SENTENCES SENTENCE .)
    TYPE_INT        reduce using rule 50 (SENTENCES -> SENTENCES SENTENCE .)
    TYPE_DOUBLE     reduce using rule 50 (SENTENCES -> SENTENCES SENTENCE .)
    TYPE_STRING     reduce using rule 50 (SENTENCES -> SENTENCES SENTENCE .)
    TYPE_CHAR       reduce using rule 50 (SENTENCES -> SENTENCES SENTENCE .)
    TYPE_BOOL       reduce using rule 50 (SENTENCES -> SENTENCES SENTENCE .)
    METHOD_VOID     reduce using rule 50 (SENTENCES -> SENTENCES SENTENCE .)
    $end            reduce using rule 50 (SENTENCES -> SENTENCES SENTENCE .)
    RKEY            reduce using rule 50 (SENTENCES -> SENTENCES SENTENCE .)


state 40

    (102) DECLARATION -> TYPE_INT . ID IQUAL INT DOT_AN_DCOMMA

    ID              shift and go to state 67


state 41

    (103) DECLARATION -> TYPE_DOUBLE . ID IQUAL FLOAT DOT_AN_DCOMMA

    ID              shift and go to state 68


state 42

    (104) DECLARATION -> TYPE_STRING . ID IQUAL STRING DOT_AN_DCOMMA

    ID              shift and go to state 69


state 43

    (105) DECLARATION -> TYPE_CHAR . ID IQUAL CHAR DOT_AN_DCOMMA

    ID              shift and go to state 70


state 44

    (106) DECLARATION -> TYPE_BOOL . ID IQUAL DATA_BOOL DOT_AN_DCOMMA

    ID              shift and go to state 71


state 45

    (10) METHOD -> METHOD_VOID ID . LPAREN RPAREN LKEY empty RKEY
    (11) METHOD -> METHOD_VOID ID . LPAREN RPAREN LKEY SENTENCES_METHOD RKEY
    (12) METHOD -> METHOD_VOID ID . LPAREN L_PARAMS RPAREN LKEY empty RKEY
    (13) METHOD -> METHOD_VOID ID . LPAREN L_PARAMS RPAREN LKEY SENTENCES_METHOD RKEY

    LPAREN          shift and go to state 72


state 46

    (60) SENTENCE -> ID LPAREN . CALLS RPAREN
    (122) CALLS -> . CALLS COMMA CALL
    (123) CALLS -> . CALL
    (124) CALL -> . TYPE_DATO
    (125) CALL -> . ID
    (126) TYPE_DATO -> . INT
    (127) TYPE_DATO -> . FLOAT
    (128) TYPE_DATO -> . STRING
    (129) TYPE_DATO -> . CHAR
    (130) TYPE_DATO -> . DATA_BOOL

    ID              shift and go to state 73
    INT             shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    CHAR            shift and go to state 80
    DATA_BOOL       shift and go to state 81

    CALLS                          shift and go to state 74
    CALL                           shift and go to state 75
    TYPE_DATO                      shift and go to state 76

state 47

    (109) ASSIGNMENT -> ID IQUAL . INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> ID IQUAL . FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> ID IQUAL . STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> ID IQUAL . CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> ID IQUAL . DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> ID IQUAL . EXPRESSIONS DOT_AN_DCOMMA
    (91) EXPRESSIONS -> . EXPRESSIONS E
    (92) EXPRESSIONS -> . E
    (93) E -> . E PLUS E
    (94) E -> . E MINUS E
    (95) E -> . E TIMES E
    (96) E -> . E DIVIDE E
    (97) E -> . E REST E
    (98) E -> . ID
    (99) E -> . TYPE_DATO
    (126) TYPE_DATO -> . INT
    (127) TYPE_DATO -> . FLOAT
    (128) TYPE_DATO -> . STRING
    (129) TYPE_DATO -> . CHAR
    (130) TYPE_DATO -> . DATA_BOOL

    INT             shift and go to state 83
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    CHAR            shift and go to state 86
    DATA_BOOL       shift and go to state 87
    ID              shift and go to state 82

    EXPRESSIONS                    shift and go to state 88
    E                              shift and go to state 89
    TYPE_DATO                      shift and go to state 90

state 48

    (16) FUNTION -> TYPE_INT COUPLER .

    TYPE_INT        reduce using rule 16 (FUNTION -> TYPE_INT COUPLER .)
    TYPE_DOUBLE     reduce using rule 16 (FUNTION -> TYPE_INT COUPLER .)
    TYPE_STRING     reduce using rule 16 (FUNTION -> TYPE_INT COUPLER .)
    TYPE_CHAR       reduce using rule 16 (FUNTION -> TYPE_INT COUPLER .)
    TYPE_BOOL       reduce using rule 16 (FUNTION -> TYPE_INT COUPLER .)
    METHOD_VOID     reduce using rule 16 (FUNTION -> TYPE_INT COUPLER .)
    COMENTLINE      reduce using rule 16 (FUNTION -> TYPE_INT COUPLER .)
    COMENTMULTYLINE reduce using rule 16 (FUNTION -> TYPE_INT COUPLER .)
    BREAK           reduce using rule 16 (FUNTION -> TYPE_INT COUPLER .)
    CONTINUE        reduce using rule 16 (FUNTION -> TYPE_INT COUPLER .)
    ID              reduce using rule 16 (FUNTION -> TYPE_INT COUPLER .)
    CONDITIONAL_IF  reduce using rule 16 (FUNTION -> TYPE_INT COUPLER .)
    ITERATIVE_WHILE reduce using rule 16 (FUNTION -> TYPE_INT COUPLER .)
    ITERATIVE_DO    reduce using rule 16 (FUNTION -> TYPE_INT COUPLER .)
    $end            reduce using rule 16 (FUNTION -> TYPE_INT COUPLER .)


state 49

    (102) DECLARATION -> TYPE_INT ID . IQUAL INT DOT_AN_DCOMMA
    (21) COUPLER -> ID . LPAREN RPAREN LKEY empty RKEY
    (22) COUPLER -> ID . LPAREN RPAREN LKEY SENTENCES_FUNTION RKEY
    (23) COUPLER -> ID . LPAREN L_PARAMS RPAREN LKEY empty RKEY
    (24) COUPLER -> ID . LPAREN L_PARAMS RPAREN LKEY SENTENCES_FUNTION RKEY

    IQUAL           shift and go to state 91
    LPAREN          shift and go to state 92


state 50

    (17) FUNTION -> TYPE_DOUBLE COUPLER .

    TYPE_INT        reduce using rule 17 (FUNTION -> TYPE_DOUBLE COUPLER .)
    TYPE_DOUBLE     reduce using rule 17 (FUNTION -> TYPE_DOUBLE COUPLER .)
    TYPE_STRING     reduce using rule 17 (FUNTION -> TYPE_DOUBLE COUPLER .)
    TYPE_CHAR       reduce using rule 17 (FUNTION -> TYPE_DOUBLE COUPLER .)
    TYPE_BOOL       reduce using rule 17 (FUNTION -> TYPE_DOUBLE COUPLER .)
    METHOD_VOID     reduce using rule 17 (FUNTION -> TYPE_DOUBLE COUPLER .)
    COMENTLINE      reduce using rule 17 (FUNTION -> TYPE_DOUBLE COUPLER .)
    COMENTMULTYLINE reduce using rule 17 (FUNTION -> TYPE_DOUBLE COUPLER .)
    BREAK           reduce using rule 17 (FUNTION -> TYPE_DOUBLE COUPLER .)
    CONTINUE        reduce using rule 17 (FUNTION -> TYPE_DOUBLE COUPLER .)
    ID              reduce using rule 17 (FUNTION -> TYPE_DOUBLE COUPLER .)
    CONDITIONAL_IF  reduce using rule 17 (FUNTION -> TYPE_DOUBLE COUPLER .)
    ITERATIVE_WHILE reduce using rule 17 (FUNTION -> TYPE_DOUBLE COUPLER .)
    ITERATIVE_DO    reduce using rule 17 (FUNTION -> TYPE_DOUBLE COUPLER .)
    $end            reduce using rule 17 (FUNTION -> TYPE_DOUBLE COUPLER .)


state 51

    (103) DECLARATION -> TYPE_DOUBLE ID . IQUAL FLOAT DOT_AN_DCOMMA
    (21) COUPLER -> ID . LPAREN RPAREN LKEY empty RKEY
    (22) COUPLER -> ID . LPAREN RPAREN LKEY SENTENCES_FUNTION RKEY
    (23) COUPLER -> ID . LPAREN L_PARAMS RPAREN LKEY empty RKEY
    (24) COUPLER -> ID . LPAREN L_PARAMS RPAREN LKEY SENTENCES_FUNTION RKEY

    IQUAL           shift and go to state 93
    LPAREN          shift and go to state 92


state 52

    (18) FUNTION -> TYPE_STRING COUPLER .

    TYPE_INT        reduce using rule 18 (FUNTION -> TYPE_STRING COUPLER .)
    TYPE_DOUBLE     reduce using rule 18 (FUNTION -> TYPE_STRING COUPLER .)
    TYPE_STRING     reduce using rule 18 (FUNTION -> TYPE_STRING COUPLER .)
    TYPE_CHAR       reduce using rule 18 (FUNTION -> TYPE_STRING COUPLER .)
    TYPE_BOOL       reduce using rule 18 (FUNTION -> TYPE_STRING COUPLER .)
    METHOD_VOID     reduce using rule 18 (FUNTION -> TYPE_STRING COUPLER .)
    COMENTLINE      reduce using rule 18 (FUNTION -> TYPE_STRING COUPLER .)
    COMENTMULTYLINE reduce using rule 18 (FUNTION -> TYPE_STRING COUPLER .)
    BREAK           reduce using rule 18 (FUNTION -> TYPE_STRING COUPLER .)
    CONTINUE        reduce using rule 18 (FUNTION -> TYPE_STRING COUPLER .)
    ID              reduce using rule 18 (FUNTION -> TYPE_STRING COUPLER .)
    CONDITIONAL_IF  reduce using rule 18 (FUNTION -> TYPE_STRING COUPLER .)
    ITERATIVE_WHILE reduce using rule 18 (FUNTION -> TYPE_STRING COUPLER .)
    ITERATIVE_DO    reduce using rule 18 (FUNTION -> TYPE_STRING COUPLER .)
    $end            reduce using rule 18 (FUNTION -> TYPE_STRING COUPLER .)


state 53

    (104) DECLARATION -> TYPE_STRING ID . IQUAL STRING DOT_AN_DCOMMA
    (21) COUPLER -> ID . LPAREN RPAREN LKEY empty RKEY
    (22) COUPLER -> ID . LPAREN RPAREN LKEY SENTENCES_FUNTION RKEY
    (23) COUPLER -> ID . LPAREN L_PARAMS RPAREN LKEY empty RKEY
    (24) COUPLER -> ID . LPAREN L_PARAMS RPAREN LKEY SENTENCES_FUNTION RKEY

    IQUAL           shift and go to state 94
    LPAREN          shift and go to state 92


state 54

    (19) FUNTION -> TYPE_CHAR COUPLER .

    TYPE_INT        reduce using rule 19 (FUNTION -> TYPE_CHAR COUPLER .)
    TYPE_DOUBLE     reduce using rule 19 (FUNTION -> TYPE_CHAR COUPLER .)
    TYPE_STRING     reduce using rule 19 (FUNTION -> TYPE_CHAR COUPLER .)
    TYPE_CHAR       reduce using rule 19 (FUNTION -> TYPE_CHAR COUPLER .)
    TYPE_BOOL       reduce using rule 19 (FUNTION -> TYPE_CHAR COUPLER .)
    METHOD_VOID     reduce using rule 19 (FUNTION -> TYPE_CHAR COUPLER .)
    COMENTLINE      reduce using rule 19 (FUNTION -> TYPE_CHAR COUPLER .)
    COMENTMULTYLINE reduce using rule 19 (FUNTION -> TYPE_CHAR COUPLER .)
    BREAK           reduce using rule 19 (FUNTION -> TYPE_CHAR COUPLER .)
    CONTINUE        reduce using rule 19 (FUNTION -> TYPE_CHAR COUPLER .)
    ID              reduce using rule 19 (FUNTION -> TYPE_CHAR COUPLER .)
    CONDITIONAL_IF  reduce using rule 19 (FUNTION -> TYPE_CHAR COUPLER .)
    ITERATIVE_WHILE reduce using rule 19 (FUNTION -> TYPE_CHAR COUPLER .)
    ITERATIVE_DO    reduce using rule 19 (FUNTION -> TYPE_CHAR COUPLER .)
    $end            reduce using rule 19 (FUNTION -> TYPE_CHAR COUPLER .)


state 55

    (105) DECLARATION -> TYPE_CHAR ID . IQUAL CHAR DOT_AN_DCOMMA
    (21) COUPLER -> ID . LPAREN RPAREN LKEY empty RKEY
    (22) COUPLER -> ID . LPAREN RPAREN LKEY SENTENCES_FUNTION RKEY
    (23) COUPLER -> ID . LPAREN L_PARAMS RPAREN LKEY empty RKEY
    (24) COUPLER -> ID . LPAREN L_PARAMS RPAREN LKEY SENTENCES_FUNTION RKEY

    IQUAL           shift and go to state 95
    LPAREN          shift and go to state 92


state 56

    (20) FUNTION -> TYPE_BOOL COUPLER .

    TYPE_INT        reduce using rule 20 (FUNTION -> TYPE_BOOL COUPLER .)
    TYPE_DOUBLE     reduce using rule 20 (FUNTION -> TYPE_BOOL COUPLER .)
    TYPE_STRING     reduce using rule 20 (FUNTION -> TYPE_BOOL COUPLER .)
    TYPE_CHAR       reduce using rule 20 (FUNTION -> TYPE_BOOL COUPLER .)
    TYPE_BOOL       reduce using rule 20 (FUNTION -> TYPE_BOOL COUPLER .)
    METHOD_VOID     reduce using rule 20 (FUNTION -> TYPE_BOOL COUPLER .)
    COMENTLINE      reduce using rule 20 (FUNTION -> TYPE_BOOL COUPLER .)
    COMENTMULTYLINE reduce using rule 20 (FUNTION -> TYPE_BOOL COUPLER .)
    BREAK           reduce using rule 20 (FUNTION -> TYPE_BOOL COUPLER .)
    CONTINUE        reduce using rule 20 (FUNTION -> TYPE_BOOL COUPLER .)
    ID              reduce using rule 20 (FUNTION -> TYPE_BOOL COUPLER .)
    CONDITIONAL_IF  reduce using rule 20 (FUNTION -> TYPE_BOOL COUPLER .)
    ITERATIVE_WHILE reduce using rule 20 (FUNTION -> TYPE_BOOL COUPLER .)
    ITERATIVE_DO    reduce using rule 20 (FUNTION -> TYPE_BOOL COUPLER .)
    $end            reduce using rule 20 (FUNTION -> TYPE_BOOL COUPLER .)


state 57

    (106) DECLARATION -> TYPE_BOOL ID . IQUAL DATA_BOOL DOT_AN_DCOMMA
    (21) COUPLER -> ID . LPAREN RPAREN LKEY empty RKEY
    (22) COUPLER -> ID . LPAREN RPAREN LKEY SENTENCES_FUNTION RKEY
    (23) COUPLER -> ID . LPAREN L_PARAMS RPAREN LKEY empty RKEY
    (24) COUPLER -> ID . LPAREN L_PARAMS RPAREN LKEY SENTENCES_FUNTION RKEY

    IQUAL           shift and go to state 96
    LPAREN          shift and go to state 92


state 58

    (100) DECLARATIONS -> DECLARATIONS DECLARATION .

    TYPE_INT        reduce using rule 100 (DECLARATIONS -> DECLARATIONS DECLARATION .)
    TYPE_DOUBLE     reduce using rule 100 (DECLARATIONS -> DECLARATIONS DECLARATION .)
    TYPE_STRING     reduce using rule 100 (DECLARATIONS -> DECLARATIONS DECLARATION .)
    TYPE_CHAR       reduce using rule 100 (DECLARATIONS -> DECLARATIONS DECLARATION .)
    TYPE_BOOL       reduce using rule 100 (DECLARATIONS -> DECLARATIONS DECLARATION .)
    COMENTLINE      reduce using rule 100 (DECLARATIONS -> DECLARATIONS DECLARATION .)
    COMENTMULTYLINE reduce using rule 100 (DECLARATIONS -> DECLARATIONS DECLARATION .)
    BREAK           reduce using rule 100 (DECLARATIONS -> DECLARATIONS DECLARATION .)
    CONTINUE        reduce using rule 100 (DECLARATIONS -> DECLARATIONS DECLARATION .)
    ID              reduce using rule 100 (DECLARATIONS -> DECLARATIONS DECLARATION .)
    CONDITIONAL_IF  reduce using rule 100 (DECLARATIONS -> DECLARATIONS DECLARATION .)
    ITERATIVE_WHILE reduce using rule 100 (DECLARATIONS -> DECLARATIONS DECLARATION .)
    ITERATIVE_DO    reduce using rule 100 (DECLARATIONS -> DECLARATIONS DECLARATION .)
    METHOD_VOID     reduce using rule 100 (DECLARATIONS -> DECLARATIONS DECLARATION .)
    $end            reduce using rule 100 (DECLARATIONS -> DECLARATIONS DECLARATION .)
    RKEY            reduce using rule 100 (DECLARATIONS -> DECLARATIONS DECLARATION .)
    METHOD_RETURN   reduce using rule 100 (DECLARATIONS -> DECLARATIONS DECLARATION .)


state 59

    (107) ASSIGNMENTS -> ASSIGNMENTS ASSIGNMENT .

    ID              reduce using rule 107 (ASSIGNMENTS -> ASSIGNMENTS ASSIGNMENT .)
    COMENTLINE      reduce using rule 107 (ASSIGNMENTS -> ASSIGNMENTS ASSIGNMENT .)
    COMENTMULTYLINE reduce using rule 107 (ASSIGNMENTS -> ASSIGNMENTS ASSIGNMENT .)
    BREAK           reduce using rule 107 (ASSIGNMENTS -> ASSIGNMENTS ASSIGNMENT .)
    CONTINUE        reduce using rule 107 (ASSIGNMENTS -> ASSIGNMENTS ASSIGNMENT .)
    CONDITIONAL_IF  reduce using rule 107 (ASSIGNMENTS -> ASSIGNMENTS ASSIGNMENT .)
    ITERATIVE_WHILE reduce using rule 107 (ASSIGNMENTS -> ASSIGNMENTS ASSIGNMENT .)
    ITERATIVE_DO    reduce using rule 107 (ASSIGNMENTS -> ASSIGNMENTS ASSIGNMENT .)
    TYPE_INT        reduce using rule 107 (ASSIGNMENTS -> ASSIGNMENTS ASSIGNMENT .)
    TYPE_DOUBLE     reduce using rule 107 (ASSIGNMENTS -> ASSIGNMENTS ASSIGNMENT .)
    TYPE_STRING     reduce using rule 107 (ASSIGNMENTS -> ASSIGNMENTS ASSIGNMENT .)
    TYPE_CHAR       reduce using rule 107 (ASSIGNMENTS -> ASSIGNMENTS ASSIGNMENT .)
    TYPE_BOOL       reduce using rule 107 (ASSIGNMENTS -> ASSIGNMENTS ASSIGNMENT .)
    METHOD_VOID     reduce using rule 107 (ASSIGNMENTS -> ASSIGNMENTS ASSIGNMENT .)
    $end            reduce using rule 107 (ASSIGNMENTS -> ASSIGNMENTS ASSIGNMENT .)
    RKEY            reduce using rule 107 (ASSIGNMENTS -> ASSIGNMENTS ASSIGNMENT .)
    METHOD_RETURN   reduce using rule 107 (ASSIGNMENTS -> ASSIGNMENTS ASSIGNMENT .)


state 60

    (109) ASSIGNMENT -> ID . IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> ID . IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> ID . IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> ID . IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> ID . IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> ID . IQUAL EXPRESSIONS DOT_AN_DCOMMA

    IQUAL           shift and go to state 47


state 61

    (58) SENTENCE -> BREAK DOT_AN_DCOMMA .

    COMENTLINE      reduce using rule 58 (SENTENCE -> BREAK DOT_AN_DCOMMA .)
    COMENTMULTYLINE reduce using rule 58 (SENTENCE -> BREAK DOT_AN_DCOMMA .)
    BREAK           reduce using rule 58 (SENTENCE -> BREAK DOT_AN_DCOMMA .)
    CONTINUE        reduce using rule 58 (SENTENCE -> BREAK DOT_AN_DCOMMA .)
    ID              reduce using rule 58 (SENTENCE -> BREAK DOT_AN_DCOMMA .)
    CONDITIONAL_IF  reduce using rule 58 (SENTENCE -> BREAK DOT_AN_DCOMMA .)
    ITERATIVE_WHILE reduce using rule 58 (SENTENCE -> BREAK DOT_AN_DCOMMA .)
    ITERATIVE_DO    reduce using rule 58 (SENTENCE -> BREAK DOT_AN_DCOMMA .)
    TYPE_INT        reduce using rule 58 (SENTENCE -> BREAK DOT_AN_DCOMMA .)
    TYPE_DOUBLE     reduce using rule 58 (SENTENCE -> BREAK DOT_AN_DCOMMA .)
    TYPE_STRING     reduce using rule 58 (SENTENCE -> BREAK DOT_AN_DCOMMA .)
    TYPE_CHAR       reduce using rule 58 (SENTENCE -> BREAK DOT_AN_DCOMMA .)
    TYPE_BOOL       reduce using rule 58 (SENTENCE -> BREAK DOT_AN_DCOMMA .)
    METHOD_VOID     reduce using rule 58 (SENTENCE -> BREAK DOT_AN_DCOMMA .)
    $end            reduce using rule 58 (SENTENCE -> BREAK DOT_AN_DCOMMA .)
    RKEY            reduce using rule 58 (SENTENCE -> BREAK DOT_AN_DCOMMA .)


state 62

    (59) SENTENCE -> CONTINUE DOT_AN_DCOMMA .

    COMENTLINE      reduce using rule 59 (SENTENCE -> CONTINUE DOT_AN_DCOMMA .)
    COMENTMULTYLINE reduce using rule 59 (SENTENCE -> CONTINUE DOT_AN_DCOMMA .)
    BREAK           reduce using rule 59 (SENTENCE -> CONTINUE DOT_AN_DCOMMA .)
    CONTINUE        reduce using rule 59 (SENTENCE -> CONTINUE DOT_AN_DCOMMA .)
    ID              reduce using rule 59 (SENTENCE -> CONTINUE DOT_AN_DCOMMA .)
    CONDITIONAL_IF  reduce using rule 59 (SENTENCE -> CONTINUE DOT_AN_DCOMMA .)
    ITERATIVE_WHILE reduce using rule 59 (SENTENCE -> CONTINUE DOT_AN_DCOMMA .)
    ITERATIVE_DO    reduce using rule 59 (SENTENCE -> CONTINUE DOT_AN_DCOMMA .)
    TYPE_INT        reduce using rule 59 (SENTENCE -> CONTINUE DOT_AN_DCOMMA .)
    TYPE_DOUBLE     reduce using rule 59 (SENTENCE -> CONTINUE DOT_AN_DCOMMA .)
    TYPE_STRING     reduce using rule 59 (SENTENCE -> CONTINUE DOT_AN_DCOMMA .)
    TYPE_CHAR       reduce using rule 59 (SENTENCE -> CONTINUE DOT_AN_DCOMMA .)
    TYPE_BOOL       reduce using rule 59 (SENTENCE -> CONTINUE DOT_AN_DCOMMA .)
    METHOD_VOID     reduce using rule 59 (SENTENCE -> CONTINUE DOT_AN_DCOMMA .)
    $end            reduce using rule 59 (SENTENCE -> CONTINUE DOT_AN_DCOMMA .)
    RKEY            reduce using rule 59 (SENTENCE -> CONTINUE DOT_AN_DCOMMA .)


state 63

    (63) SENTENCE_IF -> CONDITIONAL_IF LPAREN . INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> CONDITIONAL_IF LPAREN . INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> CONDITIONAL_IF LPAREN . INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> CONDITIONAL_IF LPAREN . INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> CONDITIONAL_IF LPAREN . INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> CONDITIONAL_IF LPAREN . INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY
    (77) INSTRUCTIONS -> . INSTRUCTIONS OPTIONS
    (78) INSTRUCTIONS -> . OPTIONS
    (79) OPTIONS -> . OPTIONS AND OPTIONS
    (80) OPTIONS -> . OPTIONS OR OPTIONS
    (81) OPTIONS -> . OPTIONS NOT OPTIONS
    (82) OPTIONS -> . OPTION
    (83) OPTION -> . OPTION IQUALS OPTION
    (84) OPTION -> . OPTION DIFFERENT OPTION
    (85) OPTION -> . OPTION IQUAL_GREATER OPTION
    (86) OPTION -> . OPTION IQUAL_LESS OPTION
    (87) OPTION -> . OPTION GREATER OPTION
    (88) OPTION -> . OPTION LESS OPTION
    (89) OPTION -> . ID
    (90) OPTION -> . EXPRESSIONS
    (91) EXPRESSIONS -> . EXPRESSIONS E
    (92) EXPRESSIONS -> . E
    (93) E -> . E PLUS E
    (94) E -> . E MINUS E
    (95) E -> . E TIMES E
    (96) E -> . E DIVIDE E
    (97) E -> . E REST E
    (98) E -> . ID
    (99) E -> . TYPE_DATO
    (126) TYPE_DATO -> . INT
    (127) TYPE_DATO -> . FLOAT
    (128) TYPE_DATO -> . STRING
    (129) TYPE_DATO -> . CHAR
    (130) TYPE_DATO -> . DATA_BOOL

    ID              shift and go to state 100
    INT             shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    CHAR            shift and go to state 80
    DATA_BOOL       shift and go to state 81

    INSTRUCTIONS                   shift and go to state 97
    OPTIONS                        shift and go to state 98
    OPTION                         shift and go to state 99
    EXPRESSIONS                    shift and go to state 101
    E                              shift and go to state 89
    TYPE_DATO                      shift and go to state 90

state 64

    (71) SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN . INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (73) SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN . INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (75) SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN . INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (77) INSTRUCTIONS -> . INSTRUCTIONS OPTIONS
    (78) INSTRUCTIONS -> . OPTIONS
    (79) OPTIONS -> . OPTIONS AND OPTIONS
    (80) OPTIONS -> . OPTIONS OR OPTIONS
    (81) OPTIONS -> . OPTIONS NOT OPTIONS
    (82) OPTIONS -> . OPTION
    (83) OPTION -> . OPTION IQUALS OPTION
    (84) OPTION -> . OPTION DIFFERENT OPTION
    (85) OPTION -> . OPTION IQUAL_GREATER OPTION
    (86) OPTION -> . OPTION IQUAL_LESS OPTION
    (87) OPTION -> . OPTION GREATER OPTION
    (88) OPTION -> . OPTION LESS OPTION
    (89) OPTION -> . ID
    (90) OPTION -> . EXPRESSIONS
    (91) EXPRESSIONS -> . EXPRESSIONS E
    (92) EXPRESSIONS -> . E
    (93) E -> . E PLUS E
    (94) E -> . E MINUS E
    (95) E -> . E TIMES E
    (96) E -> . E DIVIDE E
    (97) E -> . E REST E
    (98) E -> . ID
    (99) E -> . TYPE_DATO
    (126) TYPE_DATO -> . INT
    (127) TYPE_DATO -> . FLOAT
    (128) TYPE_DATO -> . STRING
    (129) TYPE_DATO -> . CHAR
    (130) TYPE_DATO -> . DATA_BOOL

    ID              shift and go to state 100
    INT             shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    CHAR            shift and go to state 80
    DATA_BOOL       shift and go to state 81

    INSTRUCTIONS                   shift and go to state 102
    OPTIONS                        shift and go to state 98
    OPTION                         shift and go to state 99
    EXPRESSIONS                    shift and go to state 101
    E                              shift and go to state 89
    TYPE_DATO                      shift and go to state 90

state 65

    (72) SENTENCE_WHILE -> ITERATIVE_DO LKEY . SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (74) SENTENCE_WHILE -> ITERATIVE_DO LKEY . SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (76) SENTENCE_WHILE -> ITERATIVE_DO LKEY . SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (50) SENTENCES -> . SENTENCES SENTENCE
    (51) SENTENCES -> . SENTENCE
    (37) SENTENCES_FUNTION -> . SENTENCES_FUNTION SENTENCE_FUNTION
    (38) SENTENCES_FUNTION -> . SENTENCE_FUNTION
    (25) SENTENCES_METHOD -> . SENTENCES_METHOD SENTENCE_METHOD
    (26) SENTENCES_METHOD -> . SENTENCE_METHOD
    (52) SENTENCE -> . DECLARATIONS
    (53) SENTENCE -> . ASSIGNMENTS
    (54) SENTENCE -> . SENTENCE_IF
    (55) SENTENCE -> . SENTENCE_WHILE
    (56) SENTENCE -> . COMENTLINE
    (57) SENTENCE -> . COMENTMULTYLINE
    (58) SENTENCE -> . BREAK DOT_AN_DCOMMA
    (59) SENTENCE -> . CONTINUE DOT_AN_DCOMMA
    (60) SENTENCE -> . ID LPAREN CALLS RPAREN
    (39) SENTENCE_FUNTION -> . DECLARATIONS
    (40) SENTENCE_FUNTION -> . ASSIGNMENTS
    (41) SENTENCE_FUNTION -> . SENTENCES_IF
    (42) SENTENCE_FUNTION -> . SENTENCES_WHILE
    (43) SENTENCE_FUNTION -> . COMENTLINE
    (44) SENTENCE_FUNTION -> . COMENTMULTYLINE
    (45) SENTENCE_FUNTION -> . BREAK DOT_AN_DCOMMA
    (46) SENTENCE_FUNTION -> . CONTINUE DOT_AN_DCOMMA
    (47) SENTENCE_FUNTION -> . METHOD_RETURN TYPE_DATO DOT_AN_DCOMMA
    (48) SENTENCE_FUNTION -> . METHOD_RETURN ID DOT_AN_DCOMMA
    (49) SENTENCE_FUNTION -> . ID LPAREN CALLS RPAREN
    (27) SENTENCE_METHOD -> . DECLARATIONS
    (28) SENTENCE_METHOD -> . ASSIGNMENTS
    (29) SENTENCE_METHOD -> . SENTENCES_IF
    (30) SENTENCE_METHOD -> . SENTENCES_WHILE
    (31) SENTENCE_METHOD -> . COMENTLINE
    (32) SENTENCE_METHOD -> . COMENTMULTYLINE
    (33) SENTENCE_METHOD -> . BREAK DOT_AN_DCOMMA
    (34) SENTENCE_METHOD -> . CONTINUE DOT_AN_DCOMMA
    (35) SENTENCE_METHOD -> . METHOD_RETURN DOT_AN_DCOMMA
    (36) SENTENCE_METHOD -> . ID LPAREN CALLS RPAREN
    (100) DECLARATIONS -> . DECLARATIONS DECLARATION
    (101) DECLARATIONS -> . DECLARATION
    (107) ASSIGNMENTS -> . ASSIGNMENTS ASSIGNMENT
    (108) ASSIGNMENTS -> . ASSIGNMENT
    (63) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY
    (71) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (72) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (73) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (74) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (75) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (76) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (61) SENTENCES_IF -> . SENTENCES_IF SENTENCE_IF
    (62) SENTENCES_IF -> . SENTENCE_IF
    (69) SENTENCES_WHILE -> . SENTENCES_WHILE SENTENCE_WHILE
    (70) SENTENCES_WHILE -> . SENTENCE_WHILE
    (102) DECLARATION -> . TYPE_INT ID IQUAL INT DOT_AN_DCOMMA
    (103) DECLARATION -> . TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA
    (104) DECLARATION -> . TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA
    (105) DECLARATION -> . TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA
    (106) DECLARATION -> . TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (109) ASSIGNMENT -> . ID IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> . ID IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> . ID IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> . ID IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> . ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> . ID IQUAL EXPRESSIONS DOT_AN_DCOMMA

    COMENTLINE      shift and go to state 112
    COMENTMULTYLINE shift and go to state 113
    BREAK           shift and go to state 114
    CONTINUE        shift and go to state 115
    ID              shift and go to state 116
    METHOD_RETURN   shift and go to state 119
    CONDITIONAL_IF  shift and go to state 28
    ITERATIVE_WHILE shift and go to state 29
    ITERATIVE_DO    shift and go to state 30
    TYPE_INT        shift and go to state 40
    TYPE_DOUBLE     shift and go to state 41
    TYPE_STRING     shift and go to state 42
    TYPE_CHAR       shift and go to state 43
    TYPE_BOOL       shift and go to state 44

    SENTENCES                      shift and go to state 103
    SENTENCES_FUNTION              shift and go to state 104
    SENTENCES_METHOD               shift and go to state 105
    SENTENCE                       shift and go to state 10
    SENTENCE_FUNTION               shift and go to state 106
    SENTENCE_METHOD                shift and go to state 107
    DECLARATIONS                   shift and go to state 108
    ASSIGNMENTS                    shift and go to state 109
    SENTENCE_IF                    shift and go to state 110
    SENTENCE_WHILE                 shift and go to state 111
    SENTENCES_IF                   shift and go to state 117
    SENTENCES_WHILE                shift and go to state 118
    DECLARATION                    shift and go to state 26
    ASSIGNMENT                     shift and go to state 27

state 66

    (21) COUPLER -> ID . LPAREN RPAREN LKEY empty RKEY
    (22) COUPLER -> ID . LPAREN RPAREN LKEY SENTENCES_FUNTION RKEY
    (23) COUPLER -> ID . LPAREN L_PARAMS RPAREN LKEY empty RKEY
    (24) COUPLER -> ID . LPAREN L_PARAMS RPAREN LKEY SENTENCES_FUNTION RKEY

    LPAREN          shift and go to state 92


state 67

    (102) DECLARATION -> TYPE_INT ID . IQUAL INT DOT_AN_DCOMMA

    IQUAL           shift and go to state 91


state 68

    (103) DECLARATION -> TYPE_DOUBLE ID . IQUAL FLOAT DOT_AN_DCOMMA

    IQUAL           shift and go to state 93


state 69

    (104) DECLARATION -> TYPE_STRING ID . IQUAL STRING DOT_AN_DCOMMA

    IQUAL           shift and go to state 94


state 70

    (105) DECLARATION -> TYPE_CHAR ID . IQUAL CHAR DOT_AN_DCOMMA

    IQUAL           shift and go to state 95


state 71

    (106) DECLARATION -> TYPE_BOOL ID . IQUAL DATA_BOOL DOT_AN_DCOMMA

    IQUAL           shift and go to state 96


state 72

    (10) METHOD -> METHOD_VOID ID LPAREN . RPAREN LKEY empty RKEY
    (11) METHOD -> METHOD_VOID ID LPAREN . RPAREN LKEY SENTENCES_METHOD RKEY
    (12) METHOD -> METHOD_VOID ID LPAREN . L_PARAMS RPAREN LKEY empty RKEY
    (13) METHOD -> METHOD_VOID ID LPAREN . L_PARAMS RPAREN LKEY SENTENCES_METHOD RKEY
    (115) L_PARAMS -> . L_PARAMS COMMA PARAM
    (116) L_PARAMS -> . PARAM
    (117) PARAM -> . TYPE_INT ID
    (118) PARAM -> . TYPE_DOUBLE ID
    (119) PARAM -> . TYPE_STRING ID
    (120) PARAM -> . TYPE_CHAR ID
    (121) PARAM -> . TYPE_BOOL ID

    RPAREN          shift and go to state 120
    TYPE_INT        shift and go to state 123
    TYPE_DOUBLE     shift and go to state 124
    TYPE_STRING     shift and go to state 125
    TYPE_CHAR       shift and go to state 126
    TYPE_BOOL       shift and go to state 127

    L_PARAMS                       shift and go to state 121
    PARAM                          shift and go to state 122

state 73

    (125) CALL -> ID .

    RPAREN          reduce using rule 125 (CALL -> ID .)
    COMMA           reduce using rule 125 (CALL -> ID .)


state 74

    (60) SENTENCE -> ID LPAREN CALLS . RPAREN
    (122) CALLS -> CALLS . COMMA CALL

    RPAREN          shift and go to state 128
    COMMA           shift and go to state 129


state 75

    (123) CALLS -> CALL .

    RPAREN          reduce using rule 123 (CALLS -> CALL .)
    COMMA           reduce using rule 123 (CALLS -> CALL .)


state 76

    (124) CALL -> TYPE_DATO .

    RPAREN          reduce using rule 124 (CALL -> TYPE_DATO .)
    COMMA           reduce using rule 124 (CALL -> TYPE_DATO .)


state 77

    (126) TYPE_DATO -> INT .

    RPAREN          reduce using rule 126 (TYPE_DATO -> INT .)
    COMMA           reduce using rule 126 (TYPE_DATO -> INT .)
    PLUS            reduce using rule 126 (TYPE_DATO -> INT .)
    MINUS           reduce using rule 126 (TYPE_DATO -> INT .)
    TIMES           reduce using rule 126 (TYPE_DATO -> INT .)
    DIVIDE          reduce using rule 126 (TYPE_DATO -> INT .)
    REST            reduce using rule 126 (TYPE_DATO -> INT .)
    ID              reduce using rule 126 (TYPE_DATO -> INT .)
    INT             reduce using rule 126 (TYPE_DATO -> INT .)
    FLOAT           reduce using rule 126 (TYPE_DATO -> INT .)
    STRING          reduce using rule 126 (TYPE_DATO -> INT .)
    CHAR            reduce using rule 126 (TYPE_DATO -> INT .)
    DATA_BOOL       reduce using rule 126 (TYPE_DATO -> INT .)
    IQUALS          reduce using rule 126 (TYPE_DATO -> INT .)
    DIFFERENT       reduce using rule 126 (TYPE_DATO -> INT .)
    IQUAL_GREATER   reduce using rule 126 (TYPE_DATO -> INT .)
    IQUAL_LESS      reduce using rule 126 (TYPE_DATO -> INT .)
    GREATER         reduce using rule 126 (TYPE_DATO -> INT .)
    LESS            reduce using rule 126 (TYPE_DATO -> INT .)
    AND             reduce using rule 126 (TYPE_DATO -> INT .)
    OR              reduce using rule 126 (TYPE_DATO -> INT .)
    NOT             reduce using rule 126 (TYPE_DATO -> INT .)
    DOT_AN_DCOMMA   reduce using rule 126 (TYPE_DATO -> INT .)


state 78

    (127) TYPE_DATO -> FLOAT .

    RPAREN          reduce using rule 127 (TYPE_DATO -> FLOAT .)
    COMMA           reduce using rule 127 (TYPE_DATO -> FLOAT .)
    PLUS            reduce using rule 127 (TYPE_DATO -> FLOAT .)
    MINUS           reduce using rule 127 (TYPE_DATO -> FLOAT .)
    TIMES           reduce using rule 127 (TYPE_DATO -> FLOAT .)
    DIVIDE          reduce using rule 127 (TYPE_DATO -> FLOAT .)
    REST            reduce using rule 127 (TYPE_DATO -> FLOAT .)
    ID              reduce using rule 127 (TYPE_DATO -> FLOAT .)
    INT             reduce using rule 127 (TYPE_DATO -> FLOAT .)
    FLOAT           reduce using rule 127 (TYPE_DATO -> FLOAT .)
    STRING          reduce using rule 127 (TYPE_DATO -> FLOAT .)
    CHAR            reduce using rule 127 (TYPE_DATO -> FLOAT .)
    DATA_BOOL       reduce using rule 127 (TYPE_DATO -> FLOAT .)
    IQUALS          reduce using rule 127 (TYPE_DATO -> FLOAT .)
    DIFFERENT       reduce using rule 127 (TYPE_DATO -> FLOAT .)
    IQUAL_GREATER   reduce using rule 127 (TYPE_DATO -> FLOAT .)
    IQUAL_LESS      reduce using rule 127 (TYPE_DATO -> FLOAT .)
    GREATER         reduce using rule 127 (TYPE_DATO -> FLOAT .)
    LESS            reduce using rule 127 (TYPE_DATO -> FLOAT .)
    AND             reduce using rule 127 (TYPE_DATO -> FLOAT .)
    OR              reduce using rule 127 (TYPE_DATO -> FLOAT .)
    NOT             reduce using rule 127 (TYPE_DATO -> FLOAT .)
    DOT_AN_DCOMMA   reduce using rule 127 (TYPE_DATO -> FLOAT .)


state 79

    (128) TYPE_DATO -> STRING .

    RPAREN          reduce using rule 128 (TYPE_DATO -> STRING .)
    COMMA           reduce using rule 128 (TYPE_DATO -> STRING .)
    PLUS            reduce using rule 128 (TYPE_DATO -> STRING .)
    MINUS           reduce using rule 128 (TYPE_DATO -> STRING .)
    TIMES           reduce using rule 128 (TYPE_DATO -> STRING .)
    DIVIDE          reduce using rule 128 (TYPE_DATO -> STRING .)
    REST            reduce using rule 128 (TYPE_DATO -> STRING .)
    ID              reduce using rule 128 (TYPE_DATO -> STRING .)
    INT             reduce using rule 128 (TYPE_DATO -> STRING .)
    FLOAT           reduce using rule 128 (TYPE_DATO -> STRING .)
    STRING          reduce using rule 128 (TYPE_DATO -> STRING .)
    CHAR            reduce using rule 128 (TYPE_DATO -> STRING .)
    DATA_BOOL       reduce using rule 128 (TYPE_DATO -> STRING .)
    IQUALS          reduce using rule 128 (TYPE_DATO -> STRING .)
    DIFFERENT       reduce using rule 128 (TYPE_DATO -> STRING .)
    IQUAL_GREATER   reduce using rule 128 (TYPE_DATO -> STRING .)
    IQUAL_LESS      reduce using rule 128 (TYPE_DATO -> STRING .)
    GREATER         reduce using rule 128 (TYPE_DATO -> STRING .)
    LESS            reduce using rule 128 (TYPE_DATO -> STRING .)
    AND             reduce using rule 128 (TYPE_DATO -> STRING .)
    OR              reduce using rule 128 (TYPE_DATO -> STRING .)
    NOT             reduce using rule 128 (TYPE_DATO -> STRING .)
    DOT_AN_DCOMMA   reduce using rule 128 (TYPE_DATO -> STRING .)


state 80

    (129) TYPE_DATO -> CHAR .

    RPAREN          reduce using rule 129 (TYPE_DATO -> CHAR .)
    COMMA           reduce using rule 129 (TYPE_DATO -> CHAR .)
    PLUS            reduce using rule 129 (TYPE_DATO -> CHAR .)
    MINUS           reduce using rule 129 (TYPE_DATO -> CHAR .)
    TIMES           reduce using rule 129 (TYPE_DATO -> CHAR .)
    DIVIDE          reduce using rule 129 (TYPE_DATO -> CHAR .)
    REST            reduce using rule 129 (TYPE_DATO -> CHAR .)
    ID              reduce using rule 129 (TYPE_DATO -> CHAR .)
    INT             reduce using rule 129 (TYPE_DATO -> CHAR .)
    FLOAT           reduce using rule 129 (TYPE_DATO -> CHAR .)
    STRING          reduce using rule 129 (TYPE_DATO -> CHAR .)
    CHAR            reduce using rule 129 (TYPE_DATO -> CHAR .)
    DATA_BOOL       reduce using rule 129 (TYPE_DATO -> CHAR .)
    IQUALS          reduce using rule 129 (TYPE_DATO -> CHAR .)
    DIFFERENT       reduce using rule 129 (TYPE_DATO -> CHAR .)
    IQUAL_GREATER   reduce using rule 129 (TYPE_DATO -> CHAR .)
    IQUAL_LESS      reduce using rule 129 (TYPE_DATO -> CHAR .)
    GREATER         reduce using rule 129 (TYPE_DATO -> CHAR .)
    LESS            reduce using rule 129 (TYPE_DATO -> CHAR .)
    AND             reduce using rule 129 (TYPE_DATO -> CHAR .)
    OR              reduce using rule 129 (TYPE_DATO -> CHAR .)
    NOT             reduce using rule 129 (TYPE_DATO -> CHAR .)
    DOT_AN_DCOMMA   reduce using rule 129 (TYPE_DATO -> CHAR .)


state 81

    (130) TYPE_DATO -> DATA_BOOL .

    RPAREN          reduce using rule 130 (TYPE_DATO -> DATA_BOOL .)
    COMMA           reduce using rule 130 (TYPE_DATO -> DATA_BOOL .)
    PLUS            reduce using rule 130 (TYPE_DATO -> DATA_BOOL .)
    MINUS           reduce using rule 130 (TYPE_DATO -> DATA_BOOL .)
    TIMES           reduce using rule 130 (TYPE_DATO -> DATA_BOOL .)
    DIVIDE          reduce using rule 130 (TYPE_DATO -> DATA_BOOL .)
    REST            reduce using rule 130 (TYPE_DATO -> DATA_BOOL .)
    ID              reduce using rule 130 (TYPE_DATO -> DATA_BOOL .)
    INT             reduce using rule 130 (TYPE_DATO -> DATA_BOOL .)
    FLOAT           reduce using rule 130 (TYPE_DATO -> DATA_BOOL .)
    STRING          reduce using rule 130 (TYPE_DATO -> DATA_BOOL .)
    CHAR            reduce using rule 130 (TYPE_DATO -> DATA_BOOL .)
    DATA_BOOL       reduce using rule 130 (TYPE_DATO -> DATA_BOOL .)
    IQUALS          reduce using rule 130 (TYPE_DATO -> DATA_BOOL .)
    DIFFERENT       reduce using rule 130 (TYPE_DATO -> DATA_BOOL .)
    IQUAL_GREATER   reduce using rule 130 (TYPE_DATO -> DATA_BOOL .)
    IQUAL_LESS      reduce using rule 130 (TYPE_DATO -> DATA_BOOL .)
    GREATER         reduce using rule 130 (TYPE_DATO -> DATA_BOOL .)
    LESS            reduce using rule 130 (TYPE_DATO -> DATA_BOOL .)
    AND             reduce using rule 130 (TYPE_DATO -> DATA_BOOL .)
    OR              reduce using rule 130 (TYPE_DATO -> DATA_BOOL .)
    NOT             reduce using rule 130 (TYPE_DATO -> DATA_BOOL .)
    DOT_AN_DCOMMA   reduce using rule 130 (TYPE_DATO -> DATA_BOOL .)


state 82

    (98) E -> ID .

    PLUS            reduce using rule 98 (E -> ID .)
    MINUS           reduce using rule 98 (E -> ID .)
    TIMES           reduce using rule 98 (E -> ID .)
    DIVIDE          reduce using rule 98 (E -> ID .)
    REST            reduce using rule 98 (E -> ID .)
    DOT_AN_DCOMMA   reduce using rule 98 (E -> ID .)
    ID              reduce using rule 98 (E -> ID .)
    INT             reduce using rule 98 (E -> ID .)
    FLOAT           reduce using rule 98 (E -> ID .)
    STRING          reduce using rule 98 (E -> ID .)
    CHAR            reduce using rule 98 (E -> ID .)
    DATA_BOOL       reduce using rule 98 (E -> ID .)
    IQUALS          reduce using rule 98 (E -> ID .)
    DIFFERENT       reduce using rule 98 (E -> ID .)
    IQUAL_GREATER   reduce using rule 98 (E -> ID .)
    IQUAL_LESS      reduce using rule 98 (E -> ID .)
    GREATER         reduce using rule 98 (E -> ID .)
    LESS            reduce using rule 98 (E -> ID .)
    AND             reduce using rule 98 (E -> ID .)
    OR              reduce using rule 98 (E -> ID .)
    NOT             reduce using rule 98 (E -> ID .)
    RPAREN          reduce using rule 98 (E -> ID .)


state 83

    (109) ASSIGNMENT -> ID IQUAL INT . DOT_AN_DCOMMA
    (126) TYPE_DATO -> INT .

  ! shift/reduce conflict for DOT_AN_DCOMMA resolved as shift
    DOT_AN_DCOMMA   shift and go to state 130
    PLUS            reduce using rule 126 (TYPE_DATO -> INT .)
    MINUS           reduce using rule 126 (TYPE_DATO -> INT .)
    TIMES           reduce using rule 126 (TYPE_DATO -> INT .)
    DIVIDE          reduce using rule 126 (TYPE_DATO -> INT .)
    REST            reduce using rule 126 (TYPE_DATO -> INT .)
    ID              reduce using rule 126 (TYPE_DATO -> INT .)
    INT             reduce using rule 126 (TYPE_DATO -> INT .)
    FLOAT           reduce using rule 126 (TYPE_DATO -> INT .)
    STRING          reduce using rule 126 (TYPE_DATO -> INT .)
    CHAR            reduce using rule 126 (TYPE_DATO -> INT .)
    DATA_BOOL       reduce using rule 126 (TYPE_DATO -> INT .)

  ! DOT_AN_DCOMMA   [ reduce using rule 126 (TYPE_DATO -> INT .) ]


state 84

    (110) ASSIGNMENT -> ID IQUAL FLOAT . DOT_AN_DCOMMA
    (127) TYPE_DATO -> FLOAT .

  ! shift/reduce conflict for DOT_AN_DCOMMA resolved as shift
    DOT_AN_DCOMMA   shift and go to state 131
    PLUS            reduce using rule 127 (TYPE_DATO -> FLOAT .)
    MINUS           reduce using rule 127 (TYPE_DATO -> FLOAT .)
    TIMES           reduce using rule 127 (TYPE_DATO -> FLOAT .)
    DIVIDE          reduce using rule 127 (TYPE_DATO -> FLOAT .)
    REST            reduce using rule 127 (TYPE_DATO -> FLOAT .)
    ID              reduce using rule 127 (TYPE_DATO -> FLOAT .)
    INT             reduce using rule 127 (TYPE_DATO -> FLOAT .)
    FLOAT           reduce using rule 127 (TYPE_DATO -> FLOAT .)
    STRING          reduce using rule 127 (TYPE_DATO -> FLOAT .)
    CHAR            reduce using rule 127 (TYPE_DATO -> FLOAT .)
    DATA_BOOL       reduce using rule 127 (TYPE_DATO -> FLOAT .)

  ! DOT_AN_DCOMMA   [ reduce using rule 127 (TYPE_DATO -> FLOAT .) ]


state 85

    (111) ASSIGNMENT -> ID IQUAL STRING . DOT_AN_DCOMMA
    (128) TYPE_DATO -> STRING .

  ! shift/reduce conflict for DOT_AN_DCOMMA resolved as shift
    DOT_AN_DCOMMA   shift and go to state 132
    PLUS            reduce using rule 128 (TYPE_DATO -> STRING .)
    MINUS           reduce using rule 128 (TYPE_DATO -> STRING .)
    TIMES           reduce using rule 128 (TYPE_DATO -> STRING .)
    DIVIDE          reduce using rule 128 (TYPE_DATO -> STRING .)
    REST            reduce using rule 128 (TYPE_DATO -> STRING .)
    ID              reduce using rule 128 (TYPE_DATO -> STRING .)
    INT             reduce using rule 128 (TYPE_DATO -> STRING .)
    FLOAT           reduce using rule 128 (TYPE_DATO -> STRING .)
    STRING          reduce using rule 128 (TYPE_DATO -> STRING .)
    CHAR            reduce using rule 128 (TYPE_DATO -> STRING .)
    DATA_BOOL       reduce using rule 128 (TYPE_DATO -> STRING .)

  ! DOT_AN_DCOMMA   [ reduce using rule 128 (TYPE_DATO -> STRING .) ]


state 86

    (112) ASSIGNMENT -> ID IQUAL CHAR . DOT_AN_DCOMMA
    (129) TYPE_DATO -> CHAR .

  ! shift/reduce conflict for DOT_AN_DCOMMA resolved as shift
    DOT_AN_DCOMMA   shift and go to state 133
    PLUS            reduce using rule 129 (TYPE_DATO -> CHAR .)
    MINUS           reduce using rule 129 (TYPE_DATO -> CHAR .)
    TIMES           reduce using rule 129 (TYPE_DATO -> CHAR .)
    DIVIDE          reduce using rule 129 (TYPE_DATO -> CHAR .)
    REST            reduce using rule 129 (TYPE_DATO -> CHAR .)
    ID              reduce using rule 129 (TYPE_DATO -> CHAR .)
    INT             reduce using rule 129 (TYPE_DATO -> CHAR .)
    FLOAT           reduce using rule 129 (TYPE_DATO -> CHAR .)
    STRING          reduce using rule 129 (TYPE_DATO -> CHAR .)
    CHAR            reduce using rule 129 (TYPE_DATO -> CHAR .)
    DATA_BOOL       reduce using rule 129 (TYPE_DATO -> CHAR .)

  ! DOT_AN_DCOMMA   [ reduce using rule 129 (TYPE_DATO -> CHAR .) ]


state 87

    (113) ASSIGNMENT -> ID IQUAL DATA_BOOL . DOT_AN_DCOMMA
    (130) TYPE_DATO -> DATA_BOOL .

  ! shift/reduce conflict for DOT_AN_DCOMMA resolved as shift
    DOT_AN_DCOMMA   shift and go to state 134
    PLUS            reduce using rule 130 (TYPE_DATO -> DATA_BOOL .)
    MINUS           reduce using rule 130 (TYPE_DATO -> DATA_BOOL .)
    TIMES           reduce using rule 130 (TYPE_DATO -> DATA_BOOL .)
    DIVIDE          reduce using rule 130 (TYPE_DATO -> DATA_BOOL .)
    REST            reduce using rule 130 (TYPE_DATO -> DATA_BOOL .)
    ID              reduce using rule 130 (TYPE_DATO -> DATA_BOOL .)
    INT             reduce using rule 130 (TYPE_DATO -> DATA_BOOL .)
    FLOAT           reduce using rule 130 (TYPE_DATO -> DATA_BOOL .)
    STRING          reduce using rule 130 (TYPE_DATO -> DATA_BOOL .)
    CHAR            reduce using rule 130 (TYPE_DATO -> DATA_BOOL .)
    DATA_BOOL       reduce using rule 130 (TYPE_DATO -> DATA_BOOL .)

  ! DOT_AN_DCOMMA   [ reduce using rule 130 (TYPE_DATO -> DATA_BOOL .) ]


state 88

    (114) ASSIGNMENT -> ID IQUAL EXPRESSIONS . DOT_AN_DCOMMA
    (91) EXPRESSIONS -> EXPRESSIONS . E
    (93) E -> . E PLUS E
    (94) E -> . E MINUS E
    (95) E -> . E TIMES E
    (96) E -> . E DIVIDE E
    (97) E -> . E REST E
    (98) E -> . ID
    (99) E -> . TYPE_DATO
    (126) TYPE_DATO -> . INT
    (127) TYPE_DATO -> . FLOAT
    (128) TYPE_DATO -> . STRING
    (129) TYPE_DATO -> . CHAR
    (130) TYPE_DATO -> . DATA_BOOL

    DOT_AN_DCOMMA   shift and go to state 135
    ID              shift and go to state 82
    INT             shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    CHAR            shift and go to state 80
    DATA_BOOL       shift and go to state 81

    E                              shift and go to state 136
    TYPE_DATO                      shift and go to state 90

state 89

    (92) EXPRESSIONS -> E .
    (93) E -> E . PLUS E
    (94) E -> E . MINUS E
    (95) E -> E . TIMES E
    (96) E -> E . DIVIDE E
    (97) E -> E . REST E

    DOT_AN_DCOMMA   reduce using rule 92 (EXPRESSIONS -> E .)
    ID              reduce using rule 92 (EXPRESSIONS -> E .)
    INT             reduce using rule 92 (EXPRESSIONS -> E .)
    FLOAT           reduce using rule 92 (EXPRESSIONS -> E .)
    STRING          reduce using rule 92 (EXPRESSIONS -> E .)
    CHAR            reduce using rule 92 (EXPRESSIONS -> E .)
    DATA_BOOL       reduce using rule 92 (EXPRESSIONS -> E .)
    IQUALS          reduce using rule 92 (EXPRESSIONS -> E .)
    DIFFERENT       reduce using rule 92 (EXPRESSIONS -> E .)
    IQUAL_GREATER   reduce using rule 92 (EXPRESSIONS -> E .)
    IQUAL_LESS      reduce using rule 92 (EXPRESSIONS -> E .)
    GREATER         reduce using rule 92 (EXPRESSIONS -> E .)
    LESS            reduce using rule 92 (EXPRESSIONS -> E .)
    AND             reduce using rule 92 (EXPRESSIONS -> E .)
    OR              reduce using rule 92 (EXPRESSIONS -> E .)
    NOT             reduce using rule 92 (EXPRESSIONS -> E .)
    RPAREN          reduce using rule 92 (EXPRESSIONS -> E .)
    PLUS            shift and go to state 137
    MINUS           shift and go to state 138
    TIMES           shift and go to state 139
    DIVIDE          shift and go to state 140
    REST            shift and go to state 141


state 90

    (99) E -> TYPE_DATO .

    PLUS            reduce using rule 99 (E -> TYPE_DATO .)
    MINUS           reduce using rule 99 (E -> TYPE_DATO .)
    TIMES           reduce using rule 99 (E -> TYPE_DATO .)
    DIVIDE          reduce using rule 99 (E -> TYPE_DATO .)
    REST            reduce using rule 99 (E -> TYPE_DATO .)
    DOT_AN_DCOMMA   reduce using rule 99 (E -> TYPE_DATO .)
    ID              reduce using rule 99 (E -> TYPE_DATO .)
    INT             reduce using rule 99 (E -> TYPE_DATO .)
    FLOAT           reduce using rule 99 (E -> TYPE_DATO .)
    STRING          reduce using rule 99 (E -> TYPE_DATO .)
    CHAR            reduce using rule 99 (E -> TYPE_DATO .)
    DATA_BOOL       reduce using rule 99 (E -> TYPE_DATO .)
    IQUALS          reduce using rule 99 (E -> TYPE_DATO .)
    DIFFERENT       reduce using rule 99 (E -> TYPE_DATO .)
    IQUAL_GREATER   reduce using rule 99 (E -> TYPE_DATO .)
    IQUAL_LESS      reduce using rule 99 (E -> TYPE_DATO .)
    GREATER         reduce using rule 99 (E -> TYPE_DATO .)
    LESS            reduce using rule 99 (E -> TYPE_DATO .)
    AND             reduce using rule 99 (E -> TYPE_DATO .)
    OR              reduce using rule 99 (E -> TYPE_DATO .)
    NOT             reduce using rule 99 (E -> TYPE_DATO .)
    RPAREN          reduce using rule 99 (E -> TYPE_DATO .)


state 91

    (102) DECLARATION -> TYPE_INT ID IQUAL . INT DOT_AN_DCOMMA

    INT             shift and go to state 142


state 92

    (21) COUPLER -> ID LPAREN . RPAREN LKEY empty RKEY
    (22) COUPLER -> ID LPAREN . RPAREN LKEY SENTENCES_FUNTION RKEY
    (23) COUPLER -> ID LPAREN . L_PARAMS RPAREN LKEY empty RKEY
    (24) COUPLER -> ID LPAREN . L_PARAMS RPAREN LKEY SENTENCES_FUNTION RKEY
    (115) L_PARAMS -> . L_PARAMS COMMA PARAM
    (116) L_PARAMS -> . PARAM
    (117) PARAM -> . TYPE_INT ID
    (118) PARAM -> . TYPE_DOUBLE ID
    (119) PARAM -> . TYPE_STRING ID
    (120) PARAM -> . TYPE_CHAR ID
    (121) PARAM -> . TYPE_BOOL ID

    RPAREN          shift and go to state 143
    TYPE_INT        shift and go to state 123
    TYPE_DOUBLE     shift and go to state 124
    TYPE_STRING     shift and go to state 125
    TYPE_CHAR       shift and go to state 126
    TYPE_BOOL       shift and go to state 127

    L_PARAMS                       shift and go to state 144
    PARAM                          shift and go to state 122

state 93

    (103) DECLARATION -> TYPE_DOUBLE ID IQUAL . FLOAT DOT_AN_DCOMMA

    FLOAT           shift and go to state 145


state 94

    (104) DECLARATION -> TYPE_STRING ID IQUAL . STRING DOT_AN_DCOMMA

    STRING          shift and go to state 146


state 95

    (105) DECLARATION -> TYPE_CHAR ID IQUAL . CHAR DOT_AN_DCOMMA

    CHAR            shift and go to state 147


state 96

    (106) DECLARATION -> TYPE_BOOL ID IQUAL . DATA_BOOL DOT_AN_DCOMMA

    DATA_BOOL       shift and go to state 148


state 97

    (63) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS . RPAREN LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS . RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS . RPAREN LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS . RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS . RPAREN LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS . RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY
    (77) INSTRUCTIONS -> INSTRUCTIONS . OPTIONS
    (79) OPTIONS -> . OPTIONS AND OPTIONS
    (80) OPTIONS -> . OPTIONS OR OPTIONS
    (81) OPTIONS -> . OPTIONS NOT OPTIONS
    (82) OPTIONS -> . OPTION
    (83) OPTION -> . OPTION IQUALS OPTION
    (84) OPTION -> . OPTION DIFFERENT OPTION
    (85) OPTION -> . OPTION IQUAL_GREATER OPTION
    (86) OPTION -> . OPTION IQUAL_LESS OPTION
    (87) OPTION -> . OPTION GREATER OPTION
    (88) OPTION -> . OPTION LESS OPTION
    (89) OPTION -> . ID
    (90) OPTION -> . EXPRESSIONS
    (91) EXPRESSIONS -> . EXPRESSIONS E
    (92) EXPRESSIONS -> . E
    (93) E -> . E PLUS E
    (94) E -> . E MINUS E
    (95) E -> . E TIMES E
    (96) E -> . E DIVIDE E
    (97) E -> . E REST E
    (98) E -> . ID
    (99) E -> . TYPE_DATO
    (126) TYPE_DATO -> . INT
    (127) TYPE_DATO -> . FLOAT
    (128) TYPE_DATO -> . STRING
    (129) TYPE_DATO -> . CHAR
    (130) TYPE_DATO -> . DATA_BOOL

    RPAREN          shift and go to state 149
    ID              shift and go to state 100
    INT             shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    CHAR            shift and go to state 80
    DATA_BOOL       shift and go to state 81

    OPTIONS                        shift and go to state 150
    OPTION                         shift and go to state 99
    EXPRESSIONS                    shift and go to state 101
    E                              shift and go to state 89
    TYPE_DATO                      shift and go to state 90

state 98

    (78) INSTRUCTIONS -> OPTIONS .
    (79) OPTIONS -> OPTIONS . AND OPTIONS
    (80) OPTIONS -> OPTIONS . OR OPTIONS
    (81) OPTIONS -> OPTIONS . NOT OPTIONS

    RPAREN          reduce using rule 78 (INSTRUCTIONS -> OPTIONS .)
    ID              reduce using rule 78 (INSTRUCTIONS -> OPTIONS .)
    INT             reduce using rule 78 (INSTRUCTIONS -> OPTIONS .)
    FLOAT           reduce using rule 78 (INSTRUCTIONS -> OPTIONS .)
    STRING          reduce using rule 78 (INSTRUCTIONS -> OPTIONS .)
    CHAR            reduce using rule 78 (INSTRUCTIONS -> OPTIONS .)
    DATA_BOOL       reduce using rule 78 (INSTRUCTIONS -> OPTIONS .)
    AND             shift and go to state 151
    OR              shift and go to state 152
    NOT             shift and go to state 153


state 99

    (82) OPTIONS -> OPTION .
    (83) OPTION -> OPTION . IQUALS OPTION
    (84) OPTION -> OPTION . DIFFERENT OPTION
    (85) OPTION -> OPTION . IQUAL_GREATER OPTION
    (86) OPTION -> OPTION . IQUAL_LESS OPTION
    (87) OPTION -> OPTION . GREATER OPTION
    (88) OPTION -> OPTION . LESS OPTION

    AND             reduce using rule 82 (OPTIONS -> OPTION .)
    OR              reduce using rule 82 (OPTIONS -> OPTION .)
    NOT             reduce using rule 82 (OPTIONS -> OPTION .)
    RPAREN          reduce using rule 82 (OPTIONS -> OPTION .)
    ID              reduce using rule 82 (OPTIONS -> OPTION .)
    INT             reduce using rule 82 (OPTIONS -> OPTION .)
    FLOAT           reduce using rule 82 (OPTIONS -> OPTION .)
    STRING          reduce using rule 82 (OPTIONS -> OPTION .)
    CHAR            reduce using rule 82 (OPTIONS -> OPTION .)
    DATA_BOOL       reduce using rule 82 (OPTIONS -> OPTION .)
    IQUALS          shift and go to state 154
    DIFFERENT       shift and go to state 155
    IQUAL_GREATER   shift and go to state 156
    IQUAL_LESS      shift and go to state 157
    GREATER         shift and go to state 158
    LESS            shift and go to state 159


state 100

    (89) OPTION -> ID .
    (98) E -> ID .

  ! reduce/reduce conflict for ID resolved using rule 89 (OPTION -> ID .)
  ! reduce/reduce conflict for INT resolved using rule 89 (OPTION -> ID .)
  ! reduce/reduce conflict for FLOAT resolved using rule 89 (OPTION -> ID .)
  ! reduce/reduce conflict for STRING resolved using rule 89 (OPTION -> ID .)
  ! reduce/reduce conflict for CHAR resolved using rule 89 (OPTION -> ID .)
  ! reduce/reduce conflict for DATA_BOOL resolved using rule 89 (OPTION -> ID .)
  ! reduce/reduce conflict for IQUALS resolved using rule 89 (OPTION -> ID .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 89 (OPTION -> ID .)
  ! reduce/reduce conflict for IQUAL_GREATER resolved using rule 89 (OPTION -> ID .)
  ! reduce/reduce conflict for IQUAL_LESS resolved using rule 89 (OPTION -> ID .)
  ! reduce/reduce conflict for GREATER resolved using rule 89 (OPTION -> ID .)
  ! reduce/reduce conflict for LESS resolved using rule 89 (OPTION -> ID .)
  ! reduce/reduce conflict for AND resolved using rule 89 (OPTION -> ID .)
  ! reduce/reduce conflict for OR resolved using rule 89 (OPTION -> ID .)
  ! reduce/reduce conflict for NOT resolved using rule 89 (OPTION -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 89 (OPTION -> ID .)
    IQUALS          reduce using rule 89 (OPTION -> ID .)
    DIFFERENT       reduce using rule 89 (OPTION -> ID .)
    IQUAL_GREATER   reduce using rule 89 (OPTION -> ID .)
    IQUAL_LESS      reduce using rule 89 (OPTION -> ID .)
    GREATER         reduce using rule 89 (OPTION -> ID .)
    LESS            reduce using rule 89 (OPTION -> ID .)
    AND             reduce using rule 89 (OPTION -> ID .)
    OR              reduce using rule 89 (OPTION -> ID .)
    NOT             reduce using rule 89 (OPTION -> ID .)
    RPAREN          reduce using rule 89 (OPTION -> ID .)
    ID              reduce using rule 89 (OPTION -> ID .)
    INT             reduce using rule 89 (OPTION -> ID .)
    FLOAT           reduce using rule 89 (OPTION -> ID .)
    STRING          reduce using rule 89 (OPTION -> ID .)
    CHAR            reduce using rule 89 (OPTION -> ID .)
    DATA_BOOL       reduce using rule 89 (OPTION -> ID .)
    PLUS            reduce using rule 98 (E -> ID .)
    MINUS           reduce using rule 98 (E -> ID .)
    TIMES           reduce using rule 98 (E -> ID .)
    DIVIDE          reduce using rule 98 (E -> ID .)
    REST            reduce using rule 98 (E -> ID .)

  ! ID              [ reduce using rule 98 (E -> ID .) ]
  ! INT             [ reduce using rule 98 (E -> ID .) ]
  ! FLOAT           [ reduce using rule 98 (E -> ID .) ]
  ! STRING          [ reduce using rule 98 (E -> ID .) ]
  ! CHAR            [ reduce using rule 98 (E -> ID .) ]
  ! DATA_BOOL       [ reduce using rule 98 (E -> ID .) ]
  ! IQUALS          [ reduce using rule 98 (E -> ID .) ]
  ! DIFFERENT       [ reduce using rule 98 (E -> ID .) ]
  ! IQUAL_GREATER   [ reduce using rule 98 (E -> ID .) ]
  ! IQUAL_LESS      [ reduce using rule 98 (E -> ID .) ]
  ! GREATER         [ reduce using rule 98 (E -> ID .) ]
  ! LESS            [ reduce using rule 98 (E -> ID .) ]
  ! AND             [ reduce using rule 98 (E -> ID .) ]
  ! OR              [ reduce using rule 98 (E -> ID .) ]
  ! NOT             [ reduce using rule 98 (E -> ID .) ]
  ! RPAREN          [ reduce using rule 98 (E -> ID .) ]


state 101

    (90) OPTION -> EXPRESSIONS .
    (91) EXPRESSIONS -> EXPRESSIONS . E
    (93) E -> . E PLUS E
    (94) E -> . E MINUS E
    (95) E -> . E TIMES E
    (96) E -> . E DIVIDE E
    (97) E -> . E REST E
    (98) E -> . ID
    (99) E -> . TYPE_DATO
    (126) TYPE_DATO -> . INT
    (127) TYPE_DATO -> . FLOAT
    (128) TYPE_DATO -> . STRING
    (129) TYPE_DATO -> . CHAR
    (130) TYPE_DATO -> . DATA_BOOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for DATA_BOOL resolved as shift
    IQUALS          reduce using rule 90 (OPTION -> EXPRESSIONS .)
    DIFFERENT       reduce using rule 90 (OPTION -> EXPRESSIONS .)
    IQUAL_GREATER   reduce using rule 90 (OPTION -> EXPRESSIONS .)
    IQUAL_LESS      reduce using rule 90 (OPTION -> EXPRESSIONS .)
    GREATER         reduce using rule 90 (OPTION -> EXPRESSIONS .)
    LESS            reduce using rule 90 (OPTION -> EXPRESSIONS .)
    AND             reduce using rule 90 (OPTION -> EXPRESSIONS .)
    OR              reduce using rule 90 (OPTION -> EXPRESSIONS .)
    NOT             reduce using rule 90 (OPTION -> EXPRESSIONS .)
    RPAREN          reduce using rule 90 (OPTION -> EXPRESSIONS .)
    ID              shift and go to state 82
    INT             shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    CHAR            shift and go to state 80
    DATA_BOOL       shift and go to state 81

  ! ID              [ reduce using rule 90 (OPTION -> EXPRESSIONS .) ]
  ! INT             [ reduce using rule 90 (OPTION -> EXPRESSIONS .) ]
  ! FLOAT           [ reduce using rule 90 (OPTION -> EXPRESSIONS .) ]
  ! STRING          [ reduce using rule 90 (OPTION -> EXPRESSIONS .) ]
  ! CHAR            [ reduce using rule 90 (OPTION -> EXPRESSIONS .) ]
  ! DATA_BOOL       [ reduce using rule 90 (OPTION -> EXPRESSIONS .) ]

    E                              shift and go to state 136
    TYPE_DATO                      shift and go to state 90

state 102

    (71) SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS . RPAREN LKEY SENTENCES RKEY
    (73) SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS . RPAREN LKEY SENTENCES_FUNTION RKEY
    (75) SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS . RPAREN LKEY SENTENCES_METHOD RKEY
    (77) INSTRUCTIONS -> INSTRUCTIONS . OPTIONS
    (79) OPTIONS -> . OPTIONS AND OPTIONS
    (80) OPTIONS -> . OPTIONS OR OPTIONS
    (81) OPTIONS -> . OPTIONS NOT OPTIONS
    (82) OPTIONS -> . OPTION
    (83) OPTION -> . OPTION IQUALS OPTION
    (84) OPTION -> . OPTION DIFFERENT OPTION
    (85) OPTION -> . OPTION IQUAL_GREATER OPTION
    (86) OPTION -> . OPTION IQUAL_LESS OPTION
    (87) OPTION -> . OPTION GREATER OPTION
    (88) OPTION -> . OPTION LESS OPTION
    (89) OPTION -> . ID
    (90) OPTION -> . EXPRESSIONS
    (91) EXPRESSIONS -> . EXPRESSIONS E
    (92) EXPRESSIONS -> . E
    (93) E -> . E PLUS E
    (94) E -> . E MINUS E
    (95) E -> . E TIMES E
    (96) E -> . E DIVIDE E
    (97) E -> . E REST E
    (98) E -> . ID
    (99) E -> . TYPE_DATO
    (126) TYPE_DATO -> . INT
    (127) TYPE_DATO -> . FLOAT
    (128) TYPE_DATO -> . STRING
    (129) TYPE_DATO -> . CHAR
    (130) TYPE_DATO -> . DATA_BOOL

    RPAREN          shift and go to state 160
    ID              shift and go to state 100
    INT             shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    CHAR            shift and go to state 80
    DATA_BOOL       shift and go to state 81

    OPTIONS                        shift and go to state 150
    OPTION                         shift and go to state 99
    EXPRESSIONS                    shift and go to state 101
    E                              shift and go to state 89
    TYPE_DATO                      shift and go to state 90

state 103

    (72) SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES . RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (50) SENTENCES -> SENTENCES . SENTENCE
    (52) SENTENCE -> . DECLARATIONS
    (53) SENTENCE -> . ASSIGNMENTS
    (54) SENTENCE -> . SENTENCE_IF
    (55) SENTENCE -> . SENTENCE_WHILE
    (56) SENTENCE -> . COMENTLINE
    (57) SENTENCE -> . COMENTMULTYLINE
    (58) SENTENCE -> . BREAK DOT_AN_DCOMMA
    (59) SENTENCE -> . CONTINUE DOT_AN_DCOMMA
    (60) SENTENCE -> . ID LPAREN CALLS RPAREN
    (100) DECLARATIONS -> . DECLARATIONS DECLARATION
    (101) DECLARATIONS -> . DECLARATION
    (107) ASSIGNMENTS -> . ASSIGNMENTS ASSIGNMENT
    (108) ASSIGNMENTS -> . ASSIGNMENT
    (63) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY
    (71) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (72) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (73) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (74) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (75) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (76) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (102) DECLARATION -> . TYPE_INT ID IQUAL INT DOT_AN_DCOMMA
    (103) DECLARATION -> . TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA
    (104) DECLARATION -> . TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA
    (105) DECLARATION -> . TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA
    (106) DECLARATION -> . TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (109) ASSIGNMENT -> . ID IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> . ID IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> . ID IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> . ID IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> . ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> . ID IQUAL EXPRESSIONS DOT_AN_DCOMMA

    RKEY            shift and go to state 161
    COMENTLINE      shift and go to state 22
    COMENTMULTYLINE shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    ID              shift and go to state 12
    CONDITIONAL_IF  shift and go to state 28
    ITERATIVE_WHILE shift and go to state 29
    ITERATIVE_DO    shift and go to state 30
    TYPE_INT        shift and go to state 40
    TYPE_DOUBLE     shift and go to state 41
    TYPE_STRING     shift and go to state 42
    TYPE_CHAR       shift and go to state 43
    TYPE_BOOL       shift and go to state 44

    SENTENCE                       shift and go to state 39
    DECLARATIONS                   shift and go to state 18
    ASSIGNMENTS                    shift and go to state 19
    SENTENCE_IF                    shift and go to state 20
    SENTENCE_WHILE                 shift and go to state 21
    DECLARATION                    shift and go to state 26
    ASSIGNMENT                     shift and go to state 27

state 104

    (74) SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_FUNTION . RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (37) SENTENCES_FUNTION -> SENTENCES_FUNTION . SENTENCE_FUNTION
    (39) SENTENCE_FUNTION -> . DECLARATIONS
    (40) SENTENCE_FUNTION -> . ASSIGNMENTS
    (41) SENTENCE_FUNTION -> . SENTENCES_IF
    (42) SENTENCE_FUNTION -> . SENTENCES_WHILE
    (43) SENTENCE_FUNTION -> . COMENTLINE
    (44) SENTENCE_FUNTION -> . COMENTMULTYLINE
    (45) SENTENCE_FUNTION -> . BREAK DOT_AN_DCOMMA
    (46) SENTENCE_FUNTION -> . CONTINUE DOT_AN_DCOMMA
    (47) SENTENCE_FUNTION -> . METHOD_RETURN TYPE_DATO DOT_AN_DCOMMA
    (48) SENTENCE_FUNTION -> . METHOD_RETURN ID DOT_AN_DCOMMA
    (49) SENTENCE_FUNTION -> . ID LPAREN CALLS RPAREN
    (100) DECLARATIONS -> . DECLARATIONS DECLARATION
    (101) DECLARATIONS -> . DECLARATION
    (107) ASSIGNMENTS -> . ASSIGNMENTS ASSIGNMENT
    (108) ASSIGNMENTS -> . ASSIGNMENT
    (61) SENTENCES_IF -> . SENTENCES_IF SENTENCE_IF
    (62) SENTENCES_IF -> . SENTENCE_IF
    (69) SENTENCES_WHILE -> . SENTENCES_WHILE SENTENCE_WHILE
    (70) SENTENCES_WHILE -> . SENTENCE_WHILE
    (102) DECLARATION -> . TYPE_INT ID IQUAL INT DOT_AN_DCOMMA
    (103) DECLARATION -> . TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA
    (104) DECLARATION -> . TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA
    (105) DECLARATION -> . TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA
    (106) DECLARATION -> . TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (109) ASSIGNMENT -> . ID IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> . ID IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> . ID IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> . ID IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> . ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> . ID IQUAL EXPRESSIONS DOT_AN_DCOMMA
    (63) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY
    (71) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (72) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (73) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (74) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (75) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (76) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA

    RKEY            shift and go to state 162
    COMENTLINE      shift and go to state 168
    COMENTMULTYLINE shift and go to state 169
    BREAK           shift and go to state 170
    CONTINUE        shift and go to state 171
    METHOD_RETURN   shift and go to state 172
    ID              shift and go to state 173
    TYPE_INT        shift and go to state 40
    TYPE_DOUBLE     shift and go to state 41
    TYPE_STRING     shift and go to state 42
    TYPE_CHAR       shift and go to state 43
    TYPE_BOOL       shift and go to state 44
    CONDITIONAL_IF  shift and go to state 28
    ITERATIVE_WHILE shift and go to state 29
    ITERATIVE_DO    shift and go to state 30

    SENTENCE_FUNTION               shift and go to state 163
    DECLARATIONS                   shift and go to state 164
    ASSIGNMENTS                    shift and go to state 165
    SENTENCES_IF                   shift and go to state 166
    SENTENCES_WHILE                shift and go to state 167
    DECLARATION                    shift and go to state 26
    ASSIGNMENT                     shift and go to state 27
    SENTENCE_IF                    shift and go to state 174
    SENTENCE_WHILE                 shift and go to state 175

state 105

    (76) SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_METHOD . RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (25) SENTENCES_METHOD -> SENTENCES_METHOD . SENTENCE_METHOD
    (27) SENTENCE_METHOD -> . DECLARATIONS
    (28) SENTENCE_METHOD -> . ASSIGNMENTS
    (29) SENTENCE_METHOD -> . SENTENCES_IF
    (30) SENTENCE_METHOD -> . SENTENCES_WHILE
    (31) SENTENCE_METHOD -> . COMENTLINE
    (32) SENTENCE_METHOD -> . COMENTMULTYLINE
    (33) SENTENCE_METHOD -> . BREAK DOT_AN_DCOMMA
    (34) SENTENCE_METHOD -> . CONTINUE DOT_AN_DCOMMA
    (35) SENTENCE_METHOD -> . METHOD_RETURN DOT_AN_DCOMMA
    (36) SENTENCE_METHOD -> . ID LPAREN CALLS RPAREN
    (100) DECLARATIONS -> . DECLARATIONS DECLARATION
    (101) DECLARATIONS -> . DECLARATION
    (107) ASSIGNMENTS -> . ASSIGNMENTS ASSIGNMENT
    (108) ASSIGNMENTS -> . ASSIGNMENT
    (61) SENTENCES_IF -> . SENTENCES_IF SENTENCE_IF
    (62) SENTENCES_IF -> . SENTENCE_IF
    (69) SENTENCES_WHILE -> . SENTENCES_WHILE SENTENCE_WHILE
    (70) SENTENCES_WHILE -> . SENTENCE_WHILE
    (102) DECLARATION -> . TYPE_INT ID IQUAL INT DOT_AN_DCOMMA
    (103) DECLARATION -> . TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA
    (104) DECLARATION -> . TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA
    (105) DECLARATION -> . TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA
    (106) DECLARATION -> . TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (109) ASSIGNMENT -> . ID IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> . ID IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> . ID IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> . ID IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> . ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> . ID IQUAL EXPRESSIONS DOT_AN_DCOMMA
    (63) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY
    (71) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (72) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (73) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (74) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (75) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (76) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA

    RKEY            shift and go to state 176
    COMENTLINE      shift and go to state 182
    COMENTMULTYLINE shift and go to state 183
    BREAK           shift and go to state 184
    CONTINUE        shift and go to state 185
    METHOD_RETURN   shift and go to state 186
    ID              shift and go to state 187
    TYPE_INT        shift and go to state 40
    TYPE_DOUBLE     shift and go to state 41
    TYPE_STRING     shift and go to state 42
    TYPE_CHAR       shift and go to state 43
    TYPE_BOOL       shift and go to state 44
    CONDITIONAL_IF  shift and go to state 28
    ITERATIVE_WHILE shift and go to state 29
    ITERATIVE_DO    shift and go to state 30

    SENTENCE_METHOD                shift and go to state 177
    DECLARATIONS                   shift and go to state 178
    ASSIGNMENTS                    shift and go to state 179
    SENTENCES_IF                   shift and go to state 180
    SENTENCES_WHILE                shift and go to state 181
    DECLARATION                    shift and go to state 26
    ASSIGNMENT                     shift and go to state 27
    SENTENCE_IF                    shift and go to state 174
    SENTENCE_WHILE                 shift and go to state 175

state 106

    (38) SENTENCES_FUNTION -> SENTENCE_FUNTION .

    RKEY            reduce using rule 38 (SENTENCES_FUNTION -> SENTENCE_FUNTION .)
    COMENTLINE      reduce using rule 38 (SENTENCES_FUNTION -> SENTENCE_FUNTION .)
    COMENTMULTYLINE reduce using rule 38 (SENTENCES_FUNTION -> SENTENCE_FUNTION .)
    BREAK           reduce using rule 38 (SENTENCES_FUNTION -> SENTENCE_FUNTION .)
    CONTINUE        reduce using rule 38 (SENTENCES_FUNTION -> SENTENCE_FUNTION .)
    METHOD_RETURN   reduce using rule 38 (SENTENCES_FUNTION -> SENTENCE_FUNTION .)
    ID              reduce using rule 38 (SENTENCES_FUNTION -> SENTENCE_FUNTION .)
    TYPE_INT        reduce using rule 38 (SENTENCES_FUNTION -> SENTENCE_FUNTION .)
    TYPE_DOUBLE     reduce using rule 38 (SENTENCES_FUNTION -> SENTENCE_FUNTION .)
    TYPE_STRING     reduce using rule 38 (SENTENCES_FUNTION -> SENTENCE_FUNTION .)
    TYPE_CHAR       reduce using rule 38 (SENTENCES_FUNTION -> SENTENCE_FUNTION .)
    TYPE_BOOL       reduce using rule 38 (SENTENCES_FUNTION -> SENTENCE_FUNTION .)
    CONDITIONAL_IF  reduce using rule 38 (SENTENCES_FUNTION -> SENTENCE_FUNTION .)
    ITERATIVE_WHILE reduce using rule 38 (SENTENCES_FUNTION -> SENTENCE_FUNTION .)
    ITERATIVE_DO    reduce using rule 38 (SENTENCES_FUNTION -> SENTENCE_FUNTION .)


state 107

    (26) SENTENCES_METHOD -> SENTENCE_METHOD .

    RKEY            reduce using rule 26 (SENTENCES_METHOD -> SENTENCE_METHOD .)
    COMENTLINE      reduce using rule 26 (SENTENCES_METHOD -> SENTENCE_METHOD .)
    COMENTMULTYLINE reduce using rule 26 (SENTENCES_METHOD -> SENTENCE_METHOD .)
    BREAK           reduce using rule 26 (SENTENCES_METHOD -> SENTENCE_METHOD .)
    CONTINUE        reduce using rule 26 (SENTENCES_METHOD -> SENTENCE_METHOD .)
    METHOD_RETURN   reduce using rule 26 (SENTENCES_METHOD -> SENTENCE_METHOD .)
    ID              reduce using rule 26 (SENTENCES_METHOD -> SENTENCE_METHOD .)
    TYPE_INT        reduce using rule 26 (SENTENCES_METHOD -> SENTENCE_METHOD .)
    TYPE_DOUBLE     reduce using rule 26 (SENTENCES_METHOD -> SENTENCE_METHOD .)
    TYPE_STRING     reduce using rule 26 (SENTENCES_METHOD -> SENTENCE_METHOD .)
    TYPE_CHAR       reduce using rule 26 (SENTENCES_METHOD -> SENTENCE_METHOD .)
    TYPE_BOOL       reduce using rule 26 (SENTENCES_METHOD -> SENTENCE_METHOD .)
    CONDITIONAL_IF  reduce using rule 26 (SENTENCES_METHOD -> SENTENCE_METHOD .)
    ITERATIVE_WHILE reduce using rule 26 (SENTENCES_METHOD -> SENTENCE_METHOD .)
    ITERATIVE_DO    reduce using rule 26 (SENTENCES_METHOD -> SENTENCE_METHOD .)


state 108

    (52) SENTENCE -> DECLARATIONS .
    (39) SENTENCE_FUNTION -> DECLARATIONS .
    (27) SENTENCE_METHOD -> DECLARATIONS .
    (100) DECLARATIONS -> DECLARATIONS . DECLARATION
    (102) DECLARATION -> . TYPE_INT ID IQUAL INT DOT_AN_DCOMMA
    (103) DECLARATION -> . TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA
    (104) DECLARATION -> . TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA
    (105) DECLARATION -> . TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA
    (106) DECLARATION -> . TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA

  ! reduce/reduce conflict for RKEY resolved using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .)
  ! reduce/reduce conflict for COMENTLINE resolved using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .)
  ! reduce/reduce conflict for COMENTMULTYLINE resolved using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .)
  ! reduce/reduce conflict for BREAK resolved using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .)
  ! reduce/reduce conflict for ID resolved using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .)
  ! reduce/reduce conflict for TYPE_INT resolved using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .)
  ! reduce/reduce conflict for TYPE_DOUBLE resolved using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .)
  ! reduce/reduce conflict for TYPE_STRING resolved using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .)
  ! reduce/reduce conflict for TYPE_CHAR resolved using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .)
  ! reduce/reduce conflict for TYPE_BOOL resolved using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .)
  ! reduce/reduce conflict for CONDITIONAL_IF resolved using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .)
  ! reduce/reduce conflict for ITERATIVE_WHILE resolved using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .)
  ! reduce/reduce conflict for ITERATIVE_DO resolved using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .)
  ! reduce/reduce conflict for RKEY resolved using rule 27 (SENTENCE_METHOD -> DECLARATIONS .)
  ! reduce/reduce conflict for COMENTLINE resolved using rule 27 (SENTENCE_METHOD -> DECLARATIONS .)
  ! reduce/reduce conflict for COMENTMULTYLINE resolved using rule 27 (SENTENCE_METHOD -> DECLARATIONS .)
  ! reduce/reduce conflict for BREAK resolved using rule 27 (SENTENCE_METHOD -> DECLARATIONS .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 27 (SENTENCE_METHOD -> DECLARATIONS .)
  ! reduce/reduce conflict for METHOD_RETURN resolved using rule 27 (SENTENCE_METHOD -> DECLARATIONS .)
  ! reduce/reduce conflict for ID resolved using rule 27 (SENTENCE_METHOD -> DECLARATIONS .)
  ! reduce/reduce conflict for TYPE_INT resolved using rule 27 (SENTENCE_METHOD -> DECLARATIONS .)
  ! reduce/reduce conflict for TYPE_DOUBLE resolved using rule 27 (SENTENCE_METHOD -> DECLARATIONS .)
  ! reduce/reduce conflict for TYPE_STRING resolved using rule 27 (SENTENCE_METHOD -> DECLARATIONS .)
  ! reduce/reduce conflict for TYPE_CHAR resolved using rule 27 (SENTENCE_METHOD -> DECLARATIONS .)
  ! reduce/reduce conflict for TYPE_BOOL resolved using rule 27 (SENTENCE_METHOD -> DECLARATIONS .)
  ! reduce/reduce conflict for CONDITIONAL_IF resolved using rule 27 (SENTENCE_METHOD -> DECLARATIONS .)
  ! reduce/reduce conflict for ITERATIVE_WHILE resolved using rule 27 (SENTENCE_METHOD -> DECLARATIONS .)
  ! reduce/reduce conflict for ITERATIVE_DO resolved using rule 27 (SENTENCE_METHOD -> DECLARATIONS .)
  ! shift/reduce conflict for TYPE_INT resolved as shift
  ! shift/reduce conflict for TYPE_DOUBLE resolved as shift
  ! shift/reduce conflict for TYPE_STRING resolved as shift
  ! shift/reduce conflict for TYPE_CHAR resolved as shift
  ! shift/reduce conflict for TYPE_BOOL resolved as shift
    RKEY            reduce using rule 27 (SENTENCE_METHOD -> DECLARATIONS .)
    COMENTLINE      reduce using rule 27 (SENTENCE_METHOD -> DECLARATIONS .)
    COMENTMULTYLINE reduce using rule 27 (SENTENCE_METHOD -> DECLARATIONS .)
    BREAK           reduce using rule 27 (SENTENCE_METHOD -> DECLARATIONS .)
    CONTINUE        reduce using rule 27 (SENTENCE_METHOD -> DECLARATIONS .)
    METHOD_RETURN   reduce using rule 27 (SENTENCE_METHOD -> DECLARATIONS .)
    ID              reduce using rule 27 (SENTENCE_METHOD -> DECLARATIONS .)
    CONDITIONAL_IF  reduce using rule 27 (SENTENCE_METHOD -> DECLARATIONS .)
    ITERATIVE_WHILE reduce using rule 27 (SENTENCE_METHOD -> DECLARATIONS .)
    ITERATIVE_DO    reduce using rule 27 (SENTENCE_METHOD -> DECLARATIONS .)
    TYPE_INT        shift and go to state 40
    TYPE_DOUBLE     shift and go to state 41
    TYPE_STRING     shift and go to state 42
    TYPE_CHAR       shift and go to state 43
    TYPE_BOOL       shift and go to state 44

  ! RKEY            [ reduce using rule 52 (SENTENCE -> DECLARATIONS .) ]
  ! COMENTLINE      [ reduce using rule 52 (SENTENCE -> DECLARATIONS .) ]
  ! COMENTMULTYLINE [ reduce using rule 52 (SENTENCE -> DECLARATIONS .) ]
  ! BREAK           [ reduce using rule 52 (SENTENCE -> DECLARATIONS .) ]
  ! CONTINUE        [ reduce using rule 52 (SENTENCE -> DECLARATIONS .) ]
  ! ID              [ reduce using rule 52 (SENTENCE -> DECLARATIONS .) ]
  ! CONDITIONAL_IF  [ reduce using rule 52 (SENTENCE -> DECLARATIONS .) ]
  ! ITERATIVE_WHILE [ reduce using rule 52 (SENTENCE -> DECLARATIONS .) ]
  ! ITERATIVE_DO    [ reduce using rule 52 (SENTENCE -> DECLARATIONS .) ]
  ! TYPE_INT        [ reduce using rule 52 (SENTENCE -> DECLARATIONS .) ]
  ! TYPE_DOUBLE     [ reduce using rule 52 (SENTENCE -> DECLARATIONS .) ]
  ! TYPE_STRING     [ reduce using rule 52 (SENTENCE -> DECLARATIONS .) ]
  ! TYPE_CHAR       [ reduce using rule 52 (SENTENCE -> DECLARATIONS .) ]
  ! TYPE_BOOL       [ reduce using rule 52 (SENTENCE -> DECLARATIONS .) ]
  ! RKEY            [ reduce using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .) ]
  ! COMENTLINE      [ reduce using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .) ]
  ! COMENTMULTYLINE [ reduce using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .) ]
  ! BREAK           [ reduce using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .) ]
  ! CONTINUE        [ reduce using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .) ]
  ! METHOD_RETURN   [ reduce using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .) ]
  ! ID              [ reduce using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .) ]
  ! TYPE_INT        [ reduce using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .) ]
  ! TYPE_DOUBLE     [ reduce using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .) ]
  ! TYPE_STRING     [ reduce using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .) ]
  ! TYPE_CHAR       [ reduce using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .) ]
  ! TYPE_BOOL       [ reduce using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .) ]
  ! CONDITIONAL_IF  [ reduce using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .) ]
  ! ITERATIVE_WHILE [ reduce using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .) ]
  ! ITERATIVE_DO    [ reduce using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .) ]
  ! TYPE_INT        [ reduce using rule 27 (SENTENCE_METHOD -> DECLARATIONS .) ]
  ! TYPE_DOUBLE     [ reduce using rule 27 (SENTENCE_METHOD -> DECLARATIONS .) ]
  ! TYPE_STRING     [ reduce using rule 27 (SENTENCE_METHOD -> DECLARATIONS .) ]
  ! TYPE_CHAR       [ reduce using rule 27 (SENTENCE_METHOD -> DECLARATIONS .) ]
  ! TYPE_BOOL       [ reduce using rule 27 (SENTENCE_METHOD -> DECLARATIONS .) ]

    DECLARATION                    shift and go to state 58

state 109

    (53) SENTENCE -> ASSIGNMENTS .
    (40) SENTENCE_FUNTION -> ASSIGNMENTS .
    (28) SENTENCE_METHOD -> ASSIGNMENTS .
    (107) ASSIGNMENTS -> ASSIGNMENTS . ASSIGNMENT
    (109) ASSIGNMENT -> . ID IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> . ID IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> . ID IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> . ID IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> . ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> . ID IQUAL EXPRESSIONS DOT_AN_DCOMMA

  ! reduce/reduce conflict for RKEY resolved using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .)
  ! reduce/reduce conflict for COMENTLINE resolved using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .)
  ! reduce/reduce conflict for COMENTMULTYLINE resolved using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .)
  ! reduce/reduce conflict for BREAK resolved using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .)
  ! reduce/reduce conflict for ID resolved using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .)
  ! reduce/reduce conflict for TYPE_INT resolved using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .)
  ! reduce/reduce conflict for TYPE_DOUBLE resolved using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .)
  ! reduce/reduce conflict for TYPE_STRING resolved using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .)
  ! reduce/reduce conflict for TYPE_CHAR resolved using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .)
  ! reduce/reduce conflict for TYPE_BOOL resolved using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .)
  ! reduce/reduce conflict for CONDITIONAL_IF resolved using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .)
  ! reduce/reduce conflict for ITERATIVE_WHILE resolved using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .)
  ! reduce/reduce conflict for ITERATIVE_DO resolved using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .)
  ! reduce/reduce conflict for RKEY resolved using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
  ! reduce/reduce conflict for COMENTLINE resolved using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
  ! reduce/reduce conflict for COMENTMULTYLINE resolved using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
  ! reduce/reduce conflict for BREAK resolved using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
  ! reduce/reduce conflict for METHOD_RETURN resolved using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
  ! reduce/reduce conflict for ID resolved using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
  ! reduce/reduce conflict for TYPE_INT resolved using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
  ! reduce/reduce conflict for TYPE_DOUBLE resolved using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
  ! reduce/reduce conflict for TYPE_STRING resolved using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
  ! reduce/reduce conflict for TYPE_CHAR resolved using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
  ! reduce/reduce conflict for TYPE_BOOL resolved using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
  ! reduce/reduce conflict for CONDITIONAL_IF resolved using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
  ! reduce/reduce conflict for ITERATIVE_WHILE resolved using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
  ! reduce/reduce conflict for ITERATIVE_DO resolved using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
  ! shift/reduce conflict for ID resolved as shift
    RKEY            reduce using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
    COMENTLINE      reduce using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
    COMENTMULTYLINE reduce using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
    BREAK           reduce using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
    CONTINUE        reduce using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
    METHOD_RETURN   reduce using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
    TYPE_INT        reduce using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
    TYPE_DOUBLE     reduce using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
    TYPE_STRING     reduce using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
    TYPE_CHAR       reduce using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
    TYPE_BOOL       reduce using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
    CONDITIONAL_IF  reduce using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
    ITERATIVE_WHILE reduce using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
    ITERATIVE_DO    reduce using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
    ID              shift and go to state 60

  ! RKEY            [ reduce using rule 53 (SENTENCE -> ASSIGNMENTS .) ]
  ! COMENTLINE      [ reduce using rule 53 (SENTENCE -> ASSIGNMENTS .) ]
  ! COMENTMULTYLINE [ reduce using rule 53 (SENTENCE -> ASSIGNMENTS .) ]
  ! BREAK           [ reduce using rule 53 (SENTENCE -> ASSIGNMENTS .) ]
  ! CONTINUE        [ reduce using rule 53 (SENTENCE -> ASSIGNMENTS .) ]
  ! ID              [ reduce using rule 53 (SENTENCE -> ASSIGNMENTS .) ]
  ! CONDITIONAL_IF  [ reduce using rule 53 (SENTENCE -> ASSIGNMENTS .) ]
  ! ITERATIVE_WHILE [ reduce using rule 53 (SENTENCE -> ASSIGNMENTS .) ]
  ! ITERATIVE_DO    [ reduce using rule 53 (SENTENCE -> ASSIGNMENTS .) ]
  ! TYPE_INT        [ reduce using rule 53 (SENTENCE -> ASSIGNMENTS .) ]
  ! TYPE_DOUBLE     [ reduce using rule 53 (SENTENCE -> ASSIGNMENTS .) ]
  ! TYPE_STRING     [ reduce using rule 53 (SENTENCE -> ASSIGNMENTS .) ]
  ! TYPE_CHAR       [ reduce using rule 53 (SENTENCE -> ASSIGNMENTS .) ]
  ! TYPE_BOOL       [ reduce using rule 53 (SENTENCE -> ASSIGNMENTS .) ]
  ! RKEY            [ reduce using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .) ]
  ! COMENTLINE      [ reduce using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .) ]
  ! COMENTMULTYLINE [ reduce using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .) ]
  ! BREAK           [ reduce using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .) ]
  ! CONTINUE        [ reduce using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .) ]
  ! METHOD_RETURN   [ reduce using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .) ]
  ! ID              [ reduce using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .) ]
  ! TYPE_INT        [ reduce using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .) ]
  ! TYPE_DOUBLE     [ reduce using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .) ]
  ! TYPE_STRING     [ reduce using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .) ]
  ! TYPE_CHAR       [ reduce using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .) ]
  ! TYPE_BOOL       [ reduce using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .) ]
  ! CONDITIONAL_IF  [ reduce using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .) ]
  ! ITERATIVE_WHILE [ reduce using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .) ]
  ! ITERATIVE_DO    [ reduce using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .) ]
  ! ID              [ reduce using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .) ]

    ASSIGNMENT                     shift and go to state 59

state 110

    (54) SENTENCE -> SENTENCE_IF .
    (62) SENTENCES_IF -> SENTENCE_IF .

  ! reduce/reduce conflict for CONDITIONAL_IF resolved using rule 54 (SENTENCE -> SENTENCE_IF .)
  ! reduce/reduce conflict for RKEY resolved using rule 54 (SENTENCE -> SENTENCE_IF .)
  ! reduce/reduce conflict for COMENTLINE resolved using rule 54 (SENTENCE -> SENTENCE_IF .)
  ! reduce/reduce conflict for COMENTMULTYLINE resolved using rule 54 (SENTENCE -> SENTENCE_IF .)
  ! reduce/reduce conflict for BREAK resolved using rule 54 (SENTENCE -> SENTENCE_IF .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 54 (SENTENCE -> SENTENCE_IF .)
  ! reduce/reduce conflict for ID resolved using rule 54 (SENTENCE -> SENTENCE_IF .)
  ! reduce/reduce conflict for TYPE_INT resolved using rule 54 (SENTENCE -> SENTENCE_IF .)
  ! reduce/reduce conflict for TYPE_DOUBLE resolved using rule 54 (SENTENCE -> SENTENCE_IF .)
  ! reduce/reduce conflict for TYPE_STRING resolved using rule 54 (SENTENCE -> SENTENCE_IF .)
  ! reduce/reduce conflict for TYPE_CHAR resolved using rule 54 (SENTENCE -> SENTENCE_IF .)
  ! reduce/reduce conflict for TYPE_BOOL resolved using rule 54 (SENTENCE -> SENTENCE_IF .)
  ! reduce/reduce conflict for ITERATIVE_WHILE resolved using rule 54 (SENTENCE -> SENTENCE_IF .)
  ! reduce/reduce conflict for ITERATIVE_DO resolved using rule 54 (SENTENCE -> SENTENCE_IF .)
    RKEY            reduce using rule 54 (SENTENCE -> SENTENCE_IF .)
    COMENTLINE      reduce using rule 54 (SENTENCE -> SENTENCE_IF .)
    COMENTMULTYLINE reduce using rule 54 (SENTENCE -> SENTENCE_IF .)
    BREAK           reduce using rule 54 (SENTENCE -> SENTENCE_IF .)
    CONTINUE        reduce using rule 54 (SENTENCE -> SENTENCE_IF .)
    ID              reduce using rule 54 (SENTENCE -> SENTENCE_IF .)
    CONDITIONAL_IF  reduce using rule 54 (SENTENCE -> SENTENCE_IF .)
    ITERATIVE_WHILE reduce using rule 54 (SENTENCE -> SENTENCE_IF .)
    ITERATIVE_DO    reduce using rule 54 (SENTENCE -> SENTENCE_IF .)
    TYPE_INT        reduce using rule 54 (SENTENCE -> SENTENCE_IF .)
    TYPE_DOUBLE     reduce using rule 54 (SENTENCE -> SENTENCE_IF .)
    TYPE_STRING     reduce using rule 54 (SENTENCE -> SENTENCE_IF .)
    TYPE_CHAR       reduce using rule 54 (SENTENCE -> SENTENCE_IF .)
    TYPE_BOOL       reduce using rule 54 (SENTENCE -> SENTENCE_IF .)
    METHOD_RETURN   reduce using rule 62 (SENTENCES_IF -> SENTENCE_IF .)

  ! CONDITIONAL_IF  [ reduce using rule 62 (SENTENCES_IF -> SENTENCE_IF .) ]
  ! RKEY            [ reduce using rule 62 (SENTENCES_IF -> SENTENCE_IF .) ]
  ! COMENTLINE      [ reduce using rule 62 (SENTENCES_IF -> SENTENCE_IF .) ]
  ! COMENTMULTYLINE [ reduce using rule 62 (SENTENCES_IF -> SENTENCE_IF .) ]
  ! BREAK           [ reduce using rule 62 (SENTENCES_IF -> SENTENCE_IF .) ]
  ! CONTINUE        [ reduce using rule 62 (SENTENCES_IF -> SENTENCE_IF .) ]
  ! ID              [ reduce using rule 62 (SENTENCES_IF -> SENTENCE_IF .) ]
  ! TYPE_INT        [ reduce using rule 62 (SENTENCES_IF -> SENTENCE_IF .) ]
  ! TYPE_DOUBLE     [ reduce using rule 62 (SENTENCES_IF -> SENTENCE_IF .) ]
  ! TYPE_STRING     [ reduce using rule 62 (SENTENCES_IF -> SENTENCE_IF .) ]
  ! TYPE_CHAR       [ reduce using rule 62 (SENTENCES_IF -> SENTENCE_IF .) ]
  ! TYPE_BOOL       [ reduce using rule 62 (SENTENCES_IF -> SENTENCE_IF .) ]
  ! ITERATIVE_WHILE [ reduce using rule 62 (SENTENCES_IF -> SENTENCE_IF .) ]
  ! ITERATIVE_DO    [ reduce using rule 62 (SENTENCES_IF -> SENTENCE_IF .) ]


state 111

    (55) SENTENCE -> SENTENCE_WHILE .
    (70) SENTENCES_WHILE -> SENTENCE_WHILE .

  ! reduce/reduce conflict for ITERATIVE_WHILE resolved using rule 55 (SENTENCE -> SENTENCE_WHILE .)
  ! reduce/reduce conflict for ITERATIVE_DO resolved using rule 55 (SENTENCE -> SENTENCE_WHILE .)
  ! reduce/reduce conflict for RKEY resolved using rule 55 (SENTENCE -> SENTENCE_WHILE .)
  ! reduce/reduce conflict for COMENTLINE resolved using rule 55 (SENTENCE -> SENTENCE_WHILE .)
  ! reduce/reduce conflict for COMENTMULTYLINE resolved using rule 55 (SENTENCE -> SENTENCE_WHILE .)
  ! reduce/reduce conflict for BREAK resolved using rule 55 (SENTENCE -> SENTENCE_WHILE .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 55 (SENTENCE -> SENTENCE_WHILE .)
  ! reduce/reduce conflict for ID resolved using rule 55 (SENTENCE -> SENTENCE_WHILE .)
  ! reduce/reduce conflict for TYPE_INT resolved using rule 55 (SENTENCE -> SENTENCE_WHILE .)
  ! reduce/reduce conflict for TYPE_DOUBLE resolved using rule 55 (SENTENCE -> SENTENCE_WHILE .)
  ! reduce/reduce conflict for TYPE_STRING resolved using rule 55 (SENTENCE -> SENTENCE_WHILE .)
  ! reduce/reduce conflict for TYPE_CHAR resolved using rule 55 (SENTENCE -> SENTENCE_WHILE .)
  ! reduce/reduce conflict for TYPE_BOOL resolved using rule 55 (SENTENCE -> SENTENCE_WHILE .)
  ! reduce/reduce conflict for CONDITIONAL_IF resolved using rule 55 (SENTENCE -> SENTENCE_WHILE .)
    RKEY            reduce using rule 55 (SENTENCE -> SENTENCE_WHILE .)
    COMENTLINE      reduce using rule 55 (SENTENCE -> SENTENCE_WHILE .)
    COMENTMULTYLINE reduce using rule 55 (SENTENCE -> SENTENCE_WHILE .)
    BREAK           reduce using rule 55 (SENTENCE -> SENTENCE_WHILE .)
    CONTINUE        reduce using rule 55 (SENTENCE -> SENTENCE_WHILE .)
    ID              reduce using rule 55 (SENTENCE -> SENTENCE_WHILE .)
    CONDITIONAL_IF  reduce using rule 55 (SENTENCE -> SENTENCE_WHILE .)
    ITERATIVE_WHILE reduce using rule 55 (SENTENCE -> SENTENCE_WHILE .)
    ITERATIVE_DO    reduce using rule 55 (SENTENCE -> SENTENCE_WHILE .)
    TYPE_INT        reduce using rule 55 (SENTENCE -> SENTENCE_WHILE .)
    TYPE_DOUBLE     reduce using rule 55 (SENTENCE -> SENTENCE_WHILE .)
    TYPE_STRING     reduce using rule 55 (SENTENCE -> SENTENCE_WHILE .)
    TYPE_CHAR       reduce using rule 55 (SENTENCE -> SENTENCE_WHILE .)
    TYPE_BOOL       reduce using rule 55 (SENTENCE -> SENTENCE_WHILE .)
    METHOD_RETURN   reduce using rule 70 (SENTENCES_WHILE -> SENTENCE_WHILE .)

  ! ITERATIVE_WHILE [ reduce using rule 70 (SENTENCES_WHILE -> SENTENCE_WHILE .) ]
  ! ITERATIVE_DO    [ reduce using rule 70 (SENTENCES_WHILE -> SENTENCE_WHILE .) ]
  ! RKEY            [ reduce using rule 70 (SENTENCES_WHILE -> SENTENCE_WHILE .) ]
  ! COMENTLINE      [ reduce using rule 70 (SENTENCES_WHILE -> SENTENCE_WHILE .) ]
  ! COMENTMULTYLINE [ reduce using rule 70 (SENTENCES_WHILE -> SENTENCE_WHILE .) ]
  ! BREAK           [ reduce using rule 70 (SENTENCES_WHILE -> SENTENCE_WHILE .) ]
  ! CONTINUE        [ reduce using rule 70 (SENTENCES_WHILE -> SENTENCE_WHILE .) ]
  ! ID              [ reduce using rule 70 (SENTENCES_WHILE -> SENTENCE_WHILE .) ]
  ! TYPE_INT        [ reduce using rule 70 (SENTENCES_WHILE -> SENTENCE_WHILE .) ]
  ! TYPE_DOUBLE     [ reduce using rule 70 (SENTENCES_WHILE -> SENTENCE_WHILE .) ]
  ! TYPE_STRING     [ reduce using rule 70 (SENTENCES_WHILE -> SENTENCE_WHILE .) ]
  ! TYPE_CHAR       [ reduce using rule 70 (SENTENCES_WHILE -> SENTENCE_WHILE .) ]
  ! TYPE_BOOL       [ reduce using rule 70 (SENTENCES_WHILE -> SENTENCE_WHILE .) ]
  ! CONDITIONAL_IF  [ reduce using rule 70 (SENTENCES_WHILE -> SENTENCE_WHILE .) ]


state 112

    (56) SENTENCE -> COMENTLINE .
    (43) SENTENCE_FUNTION -> COMENTLINE .
    (31) SENTENCE_METHOD -> COMENTLINE .

  ! reduce/reduce conflict for RKEY resolved using rule 43 (SENTENCE_FUNTION -> COMENTLINE .)
  ! reduce/reduce conflict for COMENTLINE resolved using rule 43 (SENTENCE_FUNTION -> COMENTLINE .)
  ! reduce/reduce conflict for COMENTMULTYLINE resolved using rule 43 (SENTENCE_FUNTION -> COMENTLINE .)
  ! reduce/reduce conflict for BREAK resolved using rule 43 (SENTENCE_FUNTION -> COMENTLINE .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 43 (SENTENCE_FUNTION -> COMENTLINE .)
  ! reduce/reduce conflict for ID resolved using rule 43 (SENTENCE_FUNTION -> COMENTLINE .)
  ! reduce/reduce conflict for TYPE_INT resolved using rule 43 (SENTENCE_FUNTION -> COMENTLINE .)
  ! reduce/reduce conflict for TYPE_DOUBLE resolved using rule 43 (SENTENCE_FUNTION -> COMENTLINE .)
  ! reduce/reduce conflict for TYPE_STRING resolved using rule 43 (SENTENCE_FUNTION -> COMENTLINE .)
  ! reduce/reduce conflict for TYPE_CHAR resolved using rule 43 (SENTENCE_FUNTION -> COMENTLINE .)
  ! reduce/reduce conflict for TYPE_BOOL resolved using rule 43 (SENTENCE_FUNTION -> COMENTLINE .)
  ! reduce/reduce conflict for CONDITIONAL_IF resolved using rule 43 (SENTENCE_FUNTION -> COMENTLINE .)
  ! reduce/reduce conflict for ITERATIVE_WHILE resolved using rule 43 (SENTENCE_FUNTION -> COMENTLINE .)
  ! reduce/reduce conflict for ITERATIVE_DO resolved using rule 43 (SENTENCE_FUNTION -> COMENTLINE .)
  ! reduce/reduce conflict for RKEY resolved using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
  ! reduce/reduce conflict for COMENTLINE resolved using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
  ! reduce/reduce conflict for COMENTMULTYLINE resolved using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
  ! reduce/reduce conflict for BREAK resolved using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
  ! reduce/reduce conflict for METHOD_RETURN resolved using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
  ! reduce/reduce conflict for ID resolved using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
  ! reduce/reduce conflict for TYPE_INT resolved using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
  ! reduce/reduce conflict for TYPE_DOUBLE resolved using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
  ! reduce/reduce conflict for TYPE_STRING resolved using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
  ! reduce/reduce conflict for TYPE_CHAR resolved using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
  ! reduce/reduce conflict for TYPE_BOOL resolved using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
  ! reduce/reduce conflict for CONDITIONAL_IF resolved using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
  ! reduce/reduce conflict for ITERATIVE_WHILE resolved using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
  ! reduce/reduce conflict for ITERATIVE_DO resolved using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
    RKEY            reduce using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
    COMENTLINE      reduce using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
    COMENTMULTYLINE reduce using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
    BREAK           reduce using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
    CONTINUE        reduce using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
    METHOD_RETURN   reduce using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
    ID              reduce using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
    TYPE_INT        reduce using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
    TYPE_DOUBLE     reduce using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
    TYPE_STRING     reduce using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
    TYPE_CHAR       reduce using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
    TYPE_BOOL       reduce using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
    CONDITIONAL_IF  reduce using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
    ITERATIVE_WHILE reduce using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
    ITERATIVE_DO    reduce using rule 31 (SENTENCE_METHOD -> COMENTLINE .)

  ! RKEY            [ reduce using rule 56 (SENTENCE -> COMENTLINE .) ]
  ! COMENTLINE      [ reduce using rule 56 (SENTENCE -> COMENTLINE .) ]
  ! COMENTMULTYLINE [ reduce using rule 56 (SENTENCE -> COMENTLINE .) ]
  ! BREAK           [ reduce using rule 56 (SENTENCE -> COMENTLINE .) ]
  ! CONTINUE        [ reduce using rule 56 (SENTENCE -> COMENTLINE .) ]
  ! ID              [ reduce using rule 56 (SENTENCE -> COMENTLINE .) ]
  ! CONDITIONAL_IF  [ reduce using rule 56 (SENTENCE -> COMENTLINE .) ]
  ! ITERATIVE_WHILE [ reduce using rule 56 (SENTENCE -> COMENTLINE .) ]
  ! ITERATIVE_DO    [ reduce using rule 56 (SENTENCE -> COMENTLINE .) ]
  ! TYPE_INT        [ reduce using rule 56 (SENTENCE -> COMENTLINE .) ]
  ! TYPE_DOUBLE     [ reduce using rule 56 (SENTENCE -> COMENTLINE .) ]
  ! TYPE_STRING     [ reduce using rule 56 (SENTENCE -> COMENTLINE .) ]
  ! TYPE_CHAR       [ reduce using rule 56 (SENTENCE -> COMENTLINE .) ]
  ! TYPE_BOOL       [ reduce using rule 56 (SENTENCE -> COMENTLINE .) ]
  ! RKEY            [ reduce using rule 43 (SENTENCE_FUNTION -> COMENTLINE .) ]
  ! COMENTLINE      [ reduce using rule 43 (SENTENCE_FUNTION -> COMENTLINE .) ]
  ! COMENTMULTYLINE [ reduce using rule 43 (SENTENCE_FUNTION -> COMENTLINE .) ]
  ! BREAK           [ reduce using rule 43 (SENTENCE_FUNTION -> COMENTLINE .) ]
  ! CONTINUE        [ reduce using rule 43 (SENTENCE_FUNTION -> COMENTLINE .) ]
  ! METHOD_RETURN   [ reduce using rule 43 (SENTENCE_FUNTION -> COMENTLINE .) ]
  ! ID              [ reduce using rule 43 (SENTENCE_FUNTION -> COMENTLINE .) ]
  ! TYPE_INT        [ reduce using rule 43 (SENTENCE_FUNTION -> COMENTLINE .) ]
  ! TYPE_DOUBLE     [ reduce using rule 43 (SENTENCE_FUNTION -> COMENTLINE .) ]
  ! TYPE_STRING     [ reduce using rule 43 (SENTENCE_FUNTION -> COMENTLINE .) ]
  ! TYPE_CHAR       [ reduce using rule 43 (SENTENCE_FUNTION -> COMENTLINE .) ]
  ! TYPE_BOOL       [ reduce using rule 43 (SENTENCE_FUNTION -> COMENTLINE .) ]
  ! CONDITIONAL_IF  [ reduce using rule 43 (SENTENCE_FUNTION -> COMENTLINE .) ]
  ! ITERATIVE_WHILE [ reduce using rule 43 (SENTENCE_FUNTION -> COMENTLINE .) ]
  ! ITERATIVE_DO    [ reduce using rule 43 (SENTENCE_FUNTION -> COMENTLINE .) ]


state 113

    (57) SENTENCE -> COMENTMULTYLINE .
    (44) SENTENCE_FUNTION -> COMENTMULTYLINE .
    (32) SENTENCE_METHOD -> COMENTMULTYLINE .

  ! reduce/reduce conflict for RKEY resolved using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .)
  ! reduce/reduce conflict for COMENTLINE resolved using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .)
  ! reduce/reduce conflict for COMENTMULTYLINE resolved using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .)
  ! reduce/reduce conflict for BREAK resolved using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .)
  ! reduce/reduce conflict for ID resolved using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .)
  ! reduce/reduce conflict for TYPE_INT resolved using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .)
  ! reduce/reduce conflict for TYPE_DOUBLE resolved using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .)
  ! reduce/reduce conflict for TYPE_STRING resolved using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .)
  ! reduce/reduce conflict for TYPE_CHAR resolved using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .)
  ! reduce/reduce conflict for TYPE_BOOL resolved using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .)
  ! reduce/reduce conflict for CONDITIONAL_IF resolved using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .)
  ! reduce/reduce conflict for ITERATIVE_WHILE resolved using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .)
  ! reduce/reduce conflict for ITERATIVE_DO resolved using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .)
  ! reduce/reduce conflict for RKEY resolved using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
  ! reduce/reduce conflict for COMENTLINE resolved using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
  ! reduce/reduce conflict for COMENTMULTYLINE resolved using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
  ! reduce/reduce conflict for BREAK resolved using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
  ! reduce/reduce conflict for METHOD_RETURN resolved using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
  ! reduce/reduce conflict for ID resolved using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
  ! reduce/reduce conflict for TYPE_INT resolved using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
  ! reduce/reduce conflict for TYPE_DOUBLE resolved using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
  ! reduce/reduce conflict for TYPE_STRING resolved using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
  ! reduce/reduce conflict for TYPE_CHAR resolved using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
  ! reduce/reduce conflict for TYPE_BOOL resolved using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
  ! reduce/reduce conflict for CONDITIONAL_IF resolved using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
  ! reduce/reduce conflict for ITERATIVE_WHILE resolved using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
  ! reduce/reduce conflict for ITERATIVE_DO resolved using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
    RKEY            reduce using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
    COMENTLINE      reduce using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
    COMENTMULTYLINE reduce using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
    BREAK           reduce using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
    CONTINUE        reduce using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
    METHOD_RETURN   reduce using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
    ID              reduce using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
    TYPE_INT        reduce using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
    TYPE_DOUBLE     reduce using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
    TYPE_STRING     reduce using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
    TYPE_CHAR       reduce using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
    TYPE_BOOL       reduce using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
    CONDITIONAL_IF  reduce using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
    ITERATIVE_WHILE reduce using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
    ITERATIVE_DO    reduce using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)

  ! RKEY            [ reduce using rule 57 (SENTENCE -> COMENTMULTYLINE .) ]
  ! COMENTLINE      [ reduce using rule 57 (SENTENCE -> COMENTMULTYLINE .) ]
  ! COMENTMULTYLINE [ reduce using rule 57 (SENTENCE -> COMENTMULTYLINE .) ]
  ! BREAK           [ reduce using rule 57 (SENTENCE -> COMENTMULTYLINE .) ]
  ! CONTINUE        [ reduce using rule 57 (SENTENCE -> COMENTMULTYLINE .) ]
  ! ID              [ reduce using rule 57 (SENTENCE -> COMENTMULTYLINE .) ]
  ! CONDITIONAL_IF  [ reduce using rule 57 (SENTENCE -> COMENTMULTYLINE .) ]
  ! ITERATIVE_WHILE [ reduce using rule 57 (SENTENCE -> COMENTMULTYLINE .) ]
  ! ITERATIVE_DO    [ reduce using rule 57 (SENTENCE -> COMENTMULTYLINE .) ]
  ! TYPE_INT        [ reduce using rule 57 (SENTENCE -> COMENTMULTYLINE .) ]
  ! TYPE_DOUBLE     [ reduce using rule 57 (SENTENCE -> COMENTMULTYLINE .) ]
  ! TYPE_STRING     [ reduce using rule 57 (SENTENCE -> COMENTMULTYLINE .) ]
  ! TYPE_CHAR       [ reduce using rule 57 (SENTENCE -> COMENTMULTYLINE .) ]
  ! TYPE_BOOL       [ reduce using rule 57 (SENTENCE -> COMENTMULTYLINE .) ]
  ! RKEY            [ reduce using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .) ]
  ! COMENTLINE      [ reduce using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .) ]
  ! COMENTMULTYLINE [ reduce using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .) ]
  ! BREAK           [ reduce using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .) ]
  ! CONTINUE        [ reduce using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .) ]
  ! METHOD_RETURN   [ reduce using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .) ]
  ! ID              [ reduce using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .) ]
  ! TYPE_INT        [ reduce using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .) ]
  ! TYPE_DOUBLE     [ reduce using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .) ]
  ! TYPE_STRING     [ reduce using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .) ]
  ! TYPE_CHAR       [ reduce using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .) ]
  ! TYPE_BOOL       [ reduce using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .) ]
  ! CONDITIONAL_IF  [ reduce using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .) ]
  ! ITERATIVE_WHILE [ reduce using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .) ]
  ! ITERATIVE_DO    [ reduce using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .) ]


state 114

    (58) SENTENCE -> BREAK . DOT_AN_DCOMMA
    (45) SENTENCE_FUNTION -> BREAK . DOT_AN_DCOMMA
    (33) SENTENCE_METHOD -> BREAK . DOT_AN_DCOMMA

    DOT_AN_DCOMMA   shift and go to state 188


state 115

    (59) SENTENCE -> CONTINUE . DOT_AN_DCOMMA
    (46) SENTENCE_FUNTION -> CONTINUE . DOT_AN_DCOMMA
    (34) SENTENCE_METHOD -> CONTINUE . DOT_AN_DCOMMA

    DOT_AN_DCOMMA   shift and go to state 189


state 116

    (60) SENTENCE -> ID . LPAREN CALLS RPAREN
    (49) SENTENCE_FUNTION -> ID . LPAREN CALLS RPAREN
    (36) SENTENCE_METHOD -> ID . LPAREN CALLS RPAREN
    (109) ASSIGNMENT -> ID . IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> ID . IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> ID . IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> ID . IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> ID . IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> ID . IQUAL EXPRESSIONS DOT_AN_DCOMMA

    LPAREN          shift and go to state 190
    IQUAL           shift and go to state 47


state 117

    (41) SENTENCE_FUNTION -> SENTENCES_IF .
    (29) SENTENCE_METHOD -> SENTENCES_IF .
    (61) SENTENCES_IF -> SENTENCES_IF . SENTENCE_IF
    (63) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY

  ! reduce/reduce conflict for RKEY resolved using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
  ! reduce/reduce conflict for COMENTLINE resolved using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
  ! reduce/reduce conflict for COMENTMULTYLINE resolved using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
  ! reduce/reduce conflict for BREAK resolved using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
  ! reduce/reduce conflict for METHOD_RETURN resolved using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
  ! reduce/reduce conflict for ID resolved using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
  ! reduce/reduce conflict for TYPE_INT resolved using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
  ! reduce/reduce conflict for TYPE_DOUBLE resolved using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
  ! reduce/reduce conflict for TYPE_STRING resolved using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
  ! reduce/reduce conflict for TYPE_CHAR resolved using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
  ! reduce/reduce conflict for TYPE_BOOL resolved using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
  ! reduce/reduce conflict for CONDITIONAL_IF resolved using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
  ! reduce/reduce conflict for ITERATIVE_WHILE resolved using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
  ! reduce/reduce conflict for ITERATIVE_DO resolved using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
  ! shift/reduce conflict for CONDITIONAL_IF resolved as shift
    RKEY            reduce using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
    COMENTLINE      reduce using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
    COMENTMULTYLINE reduce using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
    BREAK           reduce using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
    CONTINUE        reduce using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
    METHOD_RETURN   reduce using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
    ID              reduce using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
    TYPE_INT        reduce using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
    TYPE_DOUBLE     reduce using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
    TYPE_STRING     reduce using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
    TYPE_CHAR       reduce using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
    TYPE_BOOL       reduce using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
    ITERATIVE_WHILE reduce using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
    ITERATIVE_DO    reduce using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
    CONDITIONAL_IF  shift and go to state 28

  ! RKEY            [ reduce using rule 41 (SENTENCE_FUNTION -> SENTENCES_IF .) ]
  ! COMENTLINE      [ reduce using rule 41 (SENTENCE_FUNTION -> SENTENCES_IF .) ]
  ! COMENTMULTYLINE [ reduce using rule 41 (SENTENCE_FUNTION -> SENTENCES_IF .) ]
  ! BREAK           [ reduce using rule 41 (SENTENCE_FUNTION -> SENTENCES_IF .) ]
  ! CONTINUE        [ reduce using rule 41 (SENTENCE_FUNTION -> SENTENCES_IF .) ]
  ! METHOD_RETURN   [ reduce using rule 41 (SENTENCE_FUNTION -> SENTENCES_IF .) ]
  ! ID              [ reduce using rule 41 (SENTENCE_FUNTION -> SENTENCES_IF .) ]
  ! TYPE_INT        [ reduce using rule 41 (SENTENCE_FUNTION -> SENTENCES_IF .) ]
  ! TYPE_DOUBLE     [ reduce using rule 41 (SENTENCE_FUNTION -> SENTENCES_IF .) ]
  ! TYPE_STRING     [ reduce using rule 41 (SENTENCE_FUNTION -> SENTENCES_IF .) ]
  ! TYPE_CHAR       [ reduce using rule 41 (SENTENCE_FUNTION -> SENTENCES_IF .) ]
  ! TYPE_BOOL       [ reduce using rule 41 (SENTENCE_FUNTION -> SENTENCES_IF .) ]
  ! CONDITIONAL_IF  [ reduce using rule 41 (SENTENCE_FUNTION -> SENTENCES_IF .) ]
  ! ITERATIVE_WHILE [ reduce using rule 41 (SENTENCE_FUNTION -> SENTENCES_IF .) ]
  ! ITERATIVE_DO    [ reduce using rule 41 (SENTENCE_FUNTION -> SENTENCES_IF .) ]
  ! CONDITIONAL_IF  [ reduce using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .) ]

    SENTENCE_IF                    shift and go to state 191

state 118

    (42) SENTENCE_FUNTION -> SENTENCES_WHILE .
    (30) SENTENCE_METHOD -> SENTENCES_WHILE .
    (69) SENTENCES_WHILE -> SENTENCES_WHILE . SENTENCE_WHILE
    (71) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (72) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (73) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (74) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (75) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (76) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA

  ! reduce/reduce conflict for RKEY resolved using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
  ! reduce/reduce conflict for COMENTLINE resolved using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
  ! reduce/reduce conflict for COMENTMULTYLINE resolved using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
  ! reduce/reduce conflict for BREAK resolved using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
  ! reduce/reduce conflict for METHOD_RETURN resolved using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
  ! reduce/reduce conflict for ID resolved using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
  ! reduce/reduce conflict for TYPE_INT resolved using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
  ! reduce/reduce conflict for TYPE_DOUBLE resolved using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
  ! reduce/reduce conflict for TYPE_STRING resolved using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
  ! reduce/reduce conflict for TYPE_CHAR resolved using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
  ! reduce/reduce conflict for TYPE_BOOL resolved using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
  ! reduce/reduce conflict for CONDITIONAL_IF resolved using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
  ! reduce/reduce conflict for ITERATIVE_WHILE resolved using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
  ! reduce/reduce conflict for ITERATIVE_DO resolved using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
  ! shift/reduce conflict for ITERATIVE_WHILE resolved as shift
  ! shift/reduce conflict for ITERATIVE_DO resolved as shift
    RKEY            reduce using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
    COMENTLINE      reduce using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
    COMENTMULTYLINE reduce using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
    BREAK           reduce using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
    CONTINUE        reduce using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
    METHOD_RETURN   reduce using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
    ID              reduce using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
    TYPE_INT        reduce using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
    TYPE_DOUBLE     reduce using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
    TYPE_STRING     reduce using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
    TYPE_CHAR       reduce using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
    TYPE_BOOL       reduce using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
    CONDITIONAL_IF  reduce using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
    ITERATIVE_WHILE shift and go to state 29
    ITERATIVE_DO    shift and go to state 30

  ! RKEY            [ reduce using rule 42 (SENTENCE_FUNTION -> SENTENCES_WHILE .) ]
  ! COMENTLINE      [ reduce using rule 42 (SENTENCE_FUNTION -> SENTENCES_WHILE .) ]
  ! COMENTMULTYLINE [ reduce using rule 42 (SENTENCE_FUNTION -> SENTENCES_WHILE .) ]
  ! BREAK           [ reduce using rule 42 (SENTENCE_FUNTION -> SENTENCES_WHILE .) ]
  ! CONTINUE        [ reduce using rule 42 (SENTENCE_FUNTION -> SENTENCES_WHILE .) ]
  ! METHOD_RETURN   [ reduce using rule 42 (SENTENCE_FUNTION -> SENTENCES_WHILE .) ]
  ! ID              [ reduce using rule 42 (SENTENCE_FUNTION -> SENTENCES_WHILE .) ]
  ! TYPE_INT        [ reduce using rule 42 (SENTENCE_FUNTION -> SENTENCES_WHILE .) ]
  ! TYPE_DOUBLE     [ reduce using rule 42 (SENTENCE_FUNTION -> SENTENCES_WHILE .) ]
  ! TYPE_STRING     [ reduce using rule 42 (SENTENCE_FUNTION -> SENTENCES_WHILE .) ]
  ! TYPE_CHAR       [ reduce using rule 42 (SENTENCE_FUNTION -> SENTENCES_WHILE .) ]
  ! TYPE_BOOL       [ reduce using rule 42 (SENTENCE_FUNTION -> SENTENCES_WHILE .) ]
  ! CONDITIONAL_IF  [ reduce using rule 42 (SENTENCE_FUNTION -> SENTENCES_WHILE .) ]
  ! ITERATIVE_WHILE [ reduce using rule 42 (SENTENCE_FUNTION -> SENTENCES_WHILE .) ]
  ! ITERATIVE_DO    [ reduce using rule 42 (SENTENCE_FUNTION -> SENTENCES_WHILE .) ]
  ! ITERATIVE_WHILE [ reduce using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .) ]
  ! ITERATIVE_DO    [ reduce using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .) ]

    SENTENCE_WHILE                 shift and go to state 192

state 119

    (47) SENTENCE_FUNTION -> METHOD_RETURN . TYPE_DATO DOT_AN_DCOMMA
    (48) SENTENCE_FUNTION -> METHOD_RETURN . ID DOT_AN_DCOMMA
    (35) SENTENCE_METHOD -> METHOD_RETURN . DOT_AN_DCOMMA
    (126) TYPE_DATO -> . INT
    (127) TYPE_DATO -> . FLOAT
    (128) TYPE_DATO -> . STRING
    (129) TYPE_DATO -> . CHAR
    (130) TYPE_DATO -> . DATA_BOOL

    ID              shift and go to state 195
    DOT_AN_DCOMMA   shift and go to state 194
    INT             shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    CHAR            shift and go to state 80
    DATA_BOOL       shift and go to state 81

    TYPE_DATO                      shift and go to state 193

state 120

    (10) METHOD -> METHOD_VOID ID LPAREN RPAREN . LKEY empty RKEY
    (11) METHOD -> METHOD_VOID ID LPAREN RPAREN . LKEY SENTENCES_METHOD RKEY

    LKEY            shift and go to state 196


state 121

    (12) METHOD -> METHOD_VOID ID LPAREN L_PARAMS . RPAREN LKEY empty RKEY
    (13) METHOD -> METHOD_VOID ID LPAREN L_PARAMS . RPAREN LKEY SENTENCES_METHOD RKEY
    (115) L_PARAMS -> L_PARAMS . COMMA PARAM

    RPAREN          shift and go to state 197
    COMMA           shift and go to state 198


state 122

    (116) L_PARAMS -> PARAM .

    RPAREN          reduce using rule 116 (L_PARAMS -> PARAM .)
    COMMA           reduce using rule 116 (L_PARAMS -> PARAM .)


state 123

    (117) PARAM -> TYPE_INT . ID

    ID              shift and go to state 199


state 124

    (118) PARAM -> TYPE_DOUBLE . ID

    ID              shift and go to state 200


state 125

    (119) PARAM -> TYPE_STRING . ID

    ID              shift and go to state 201


state 126

    (120) PARAM -> TYPE_CHAR . ID

    ID              shift and go to state 202


state 127

    (121) PARAM -> TYPE_BOOL . ID

    ID              shift and go to state 203


state 128

    (60) SENTENCE -> ID LPAREN CALLS RPAREN .

    COMENTLINE      reduce using rule 60 (SENTENCE -> ID LPAREN CALLS RPAREN .)
    COMENTMULTYLINE reduce using rule 60 (SENTENCE -> ID LPAREN CALLS RPAREN .)
    BREAK           reduce using rule 60 (SENTENCE -> ID LPAREN CALLS RPAREN .)
    CONTINUE        reduce using rule 60 (SENTENCE -> ID LPAREN CALLS RPAREN .)
    ID              reduce using rule 60 (SENTENCE -> ID LPAREN CALLS RPAREN .)
    CONDITIONAL_IF  reduce using rule 60 (SENTENCE -> ID LPAREN CALLS RPAREN .)
    ITERATIVE_WHILE reduce using rule 60 (SENTENCE -> ID LPAREN CALLS RPAREN .)
    ITERATIVE_DO    reduce using rule 60 (SENTENCE -> ID LPAREN CALLS RPAREN .)
    TYPE_INT        reduce using rule 60 (SENTENCE -> ID LPAREN CALLS RPAREN .)
    TYPE_DOUBLE     reduce using rule 60 (SENTENCE -> ID LPAREN CALLS RPAREN .)
    TYPE_STRING     reduce using rule 60 (SENTENCE -> ID LPAREN CALLS RPAREN .)
    TYPE_CHAR       reduce using rule 60 (SENTENCE -> ID LPAREN CALLS RPAREN .)
    TYPE_BOOL       reduce using rule 60 (SENTENCE -> ID LPAREN CALLS RPAREN .)
    METHOD_VOID     reduce using rule 60 (SENTENCE -> ID LPAREN CALLS RPAREN .)
    $end            reduce using rule 60 (SENTENCE -> ID LPAREN CALLS RPAREN .)
    RKEY            reduce using rule 60 (SENTENCE -> ID LPAREN CALLS RPAREN .)


state 129

    (122) CALLS -> CALLS COMMA . CALL
    (124) CALL -> . TYPE_DATO
    (125) CALL -> . ID
    (126) TYPE_DATO -> . INT
    (127) TYPE_DATO -> . FLOAT
    (128) TYPE_DATO -> . STRING
    (129) TYPE_DATO -> . CHAR
    (130) TYPE_DATO -> . DATA_BOOL

    ID              shift and go to state 73
    INT             shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    CHAR            shift and go to state 80
    DATA_BOOL       shift and go to state 81

    CALL                           shift and go to state 204
    TYPE_DATO                      shift and go to state 76

state 130

    (109) ASSIGNMENT -> ID IQUAL INT DOT_AN_DCOMMA .

    ID              reduce using rule 109 (ASSIGNMENT -> ID IQUAL INT DOT_AN_DCOMMA .)
    COMENTLINE      reduce using rule 109 (ASSIGNMENT -> ID IQUAL INT DOT_AN_DCOMMA .)
    COMENTMULTYLINE reduce using rule 109 (ASSIGNMENT -> ID IQUAL INT DOT_AN_DCOMMA .)
    BREAK           reduce using rule 109 (ASSIGNMENT -> ID IQUAL INT DOT_AN_DCOMMA .)
    CONTINUE        reduce using rule 109 (ASSIGNMENT -> ID IQUAL INT DOT_AN_DCOMMA .)
    CONDITIONAL_IF  reduce using rule 109 (ASSIGNMENT -> ID IQUAL INT DOT_AN_DCOMMA .)
    ITERATIVE_WHILE reduce using rule 109 (ASSIGNMENT -> ID IQUAL INT DOT_AN_DCOMMA .)
    ITERATIVE_DO    reduce using rule 109 (ASSIGNMENT -> ID IQUAL INT DOT_AN_DCOMMA .)
    TYPE_INT        reduce using rule 109 (ASSIGNMENT -> ID IQUAL INT DOT_AN_DCOMMA .)
    TYPE_DOUBLE     reduce using rule 109 (ASSIGNMENT -> ID IQUAL INT DOT_AN_DCOMMA .)
    TYPE_STRING     reduce using rule 109 (ASSIGNMENT -> ID IQUAL INT DOT_AN_DCOMMA .)
    TYPE_CHAR       reduce using rule 109 (ASSIGNMENT -> ID IQUAL INT DOT_AN_DCOMMA .)
    TYPE_BOOL       reduce using rule 109 (ASSIGNMENT -> ID IQUAL INT DOT_AN_DCOMMA .)
    METHOD_VOID     reduce using rule 109 (ASSIGNMENT -> ID IQUAL INT DOT_AN_DCOMMA .)
    $end            reduce using rule 109 (ASSIGNMENT -> ID IQUAL INT DOT_AN_DCOMMA .)
    RKEY            reduce using rule 109 (ASSIGNMENT -> ID IQUAL INT DOT_AN_DCOMMA .)
    METHOD_RETURN   reduce using rule 109 (ASSIGNMENT -> ID IQUAL INT DOT_AN_DCOMMA .)


state 131

    (110) ASSIGNMENT -> ID IQUAL FLOAT DOT_AN_DCOMMA .

    ID              reduce using rule 110 (ASSIGNMENT -> ID IQUAL FLOAT DOT_AN_DCOMMA .)
    COMENTLINE      reduce using rule 110 (ASSIGNMENT -> ID IQUAL FLOAT DOT_AN_DCOMMA .)
    COMENTMULTYLINE reduce using rule 110 (ASSIGNMENT -> ID IQUAL FLOAT DOT_AN_DCOMMA .)
    BREAK           reduce using rule 110 (ASSIGNMENT -> ID IQUAL FLOAT DOT_AN_DCOMMA .)
    CONTINUE        reduce using rule 110 (ASSIGNMENT -> ID IQUAL FLOAT DOT_AN_DCOMMA .)
    CONDITIONAL_IF  reduce using rule 110 (ASSIGNMENT -> ID IQUAL FLOAT DOT_AN_DCOMMA .)
    ITERATIVE_WHILE reduce using rule 110 (ASSIGNMENT -> ID IQUAL FLOAT DOT_AN_DCOMMA .)
    ITERATIVE_DO    reduce using rule 110 (ASSIGNMENT -> ID IQUAL FLOAT DOT_AN_DCOMMA .)
    TYPE_INT        reduce using rule 110 (ASSIGNMENT -> ID IQUAL FLOAT DOT_AN_DCOMMA .)
    TYPE_DOUBLE     reduce using rule 110 (ASSIGNMENT -> ID IQUAL FLOAT DOT_AN_DCOMMA .)
    TYPE_STRING     reduce using rule 110 (ASSIGNMENT -> ID IQUAL FLOAT DOT_AN_DCOMMA .)
    TYPE_CHAR       reduce using rule 110 (ASSIGNMENT -> ID IQUAL FLOAT DOT_AN_DCOMMA .)
    TYPE_BOOL       reduce using rule 110 (ASSIGNMENT -> ID IQUAL FLOAT DOT_AN_DCOMMA .)
    METHOD_VOID     reduce using rule 110 (ASSIGNMENT -> ID IQUAL FLOAT DOT_AN_DCOMMA .)
    $end            reduce using rule 110 (ASSIGNMENT -> ID IQUAL FLOAT DOT_AN_DCOMMA .)
    RKEY            reduce using rule 110 (ASSIGNMENT -> ID IQUAL FLOAT DOT_AN_DCOMMA .)
    METHOD_RETURN   reduce using rule 110 (ASSIGNMENT -> ID IQUAL FLOAT DOT_AN_DCOMMA .)


state 132

    (111) ASSIGNMENT -> ID IQUAL STRING DOT_AN_DCOMMA .

    ID              reduce using rule 111 (ASSIGNMENT -> ID IQUAL STRING DOT_AN_DCOMMA .)
    COMENTLINE      reduce using rule 111 (ASSIGNMENT -> ID IQUAL STRING DOT_AN_DCOMMA .)
    COMENTMULTYLINE reduce using rule 111 (ASSIGNMENT -> ID IQUAL STRING DOT_AN_DCOMMA .)
    BREAK           reduce using rule 111 (ASSIGNMENT -> ID IQUAL STRING DOT_AN_DCOMMA .)
    CONTINUE        reduce using rule 111 (ASSIGNMENT -> ID IQUAL STRING DOT_AN_DCOMMA .)
    CONDITIONAL_IF  reduce using rule 111 (ASSIGNMENT -> ID IQUAL STRING DOT_AN_DCOMMA .)
    ITERATIVE_WHILE reduce using rule 111 (ASSIGNMENT -> ID IQUAL STRING DOT_AN_DCOMMA .)
    ITERATIVE_DO    reduce using rule 111 (ASSIGNMENT -> ID IQUAL STRING DOT_AN_DCOMMA .)
    TYPE_INT        reduce using rule 111 (ASSIGNMENT -> ID IQUAL STRING DOT_AN_DCOMMA .)
    TYPE_DOUBLE     reduce using rule 111 (ASSIGNMENT -> ID IQUAL STRING DOT_AN_DCOMMA .)
    TYPE_STRING     reduce using rule 111 (ASSIGNMENT -> ID IQUAL STRING DOT_AN_DCOMMA .)
    TYPE_CHAR       reduce using rule 111 (ASSIGNMENT -> ID IQUAL STRING DOT_AN_DCOMMA .)
    TYPE_BOOL       reduce using rule 111 (ASSIGNMENT -> ID IQUAL STRING DOT_AN_DCOMMA .)
    METHOD_VOID     reduce using rule 111 (ASSIGNMENT -> ID IQUAL STRING DOT_AN_DCOMMA .)
    $end            reduce using rule 111 (ASSIGNMENT -> ID IQUAL STRING DOT_AN_DCOMMA .)
    RKEY            reduce using rule 111 (ASSIGNMENT -> ID IQUAL STRING DOT_AN_DCOMMA .)
    METHOD_RETURN   reduce using rule 111 (ASSIGNMENT -> ID IQUAL STRING DOT_AN_DCOMMA .)


state 133

    (112) ASSIGNMENT -> ID IQUAL CHAR DOT_AN_DCOMMA .

    ID              reduce using rule 112 (ASSIGNMENT -> ID IQUAL CHAR DOT_AN_DCOMMA .)
    COMENTLINE      reduce using rule 112 (ASSIGNMENT -> ID IQUAL CHAR DOT_AN_DCOMMA .)
    COMENTMULTYLINE reduce using rule 112 (ASSIGNMENT -> ID IQUAL CHAR DOT_AN_DCOMMA .)
    BREAK           reduce using rule 112 (ASSIGNMENT -> ID IQUAL CHAR DOT_AN_DCOMMA .)
    CONTINUE        reduce using rule 112 (ASSIGNMENT -> ID IQUAL CHAR DOT_AN_DCOMMA .)
    CONDITIONAL_IF  reduce using rule 112 (ASSIGNMENT -> ID IQUAL CHAR DOT_AN_DCOMMA .)
    ITERATIVE_WHILE reduce using rule 112 (ASSIGNMENT -> ID IQUAL CHAR DOT_AN_DCOMMA .)
    ITERATIVE_DO    reduce using rule 112 (ASSIGNMENT -> ID IQUAL CHAR DOT_AN_DCOMMA .)
    TYPE_INT        reduce using rule 112 (ASSIGNMENT -> ID IQUAL CHAR DOT_AN_DCOMMA .)
    TYPE_DOUBLE     reduce using rule 112 (ASSIGNMENT -> ID IQUAL CHAR DOT_AN_DCOMMA .)
    TYPE_STRING     reduce using rule 112 (ASSIGNMENT -> ID IQUAL CHAR DOT_AN_DCOMMA .)
    TYPE_CHAR       reduce using rule 112 (ASSIGNMENT -> ID IQUAL CHAR DOT_AN_DCOMMA .)
    TYPE_BOOL       reduce using rule 112 (ASSIGNMENT -> ID IQUAL CHAR DOT_AN_DCOMMA .)
    METHOD_VOID     reduce using rule 112 (ASSIGNMENT -> ID IQUAL CHAR DOT_AN_DCOMMA .)
    $end            reduce using rule 112 (ASSIGNMENT -> ID IQUAL CHAR DOT_AN_DCOMMA .)
    RKEY            reduce using rule 112 (ASSIGNMENT -> ID IQUAL CHAR DOT_AN_DCOMMA .)
    METHOD_RETURN   reduce using rule 112 (ASSIGNMENT -> ID IQUAL CHAR DOT_AN_DCOMMA .)


state 134

    (113) ASSIGNMENT -> ID IQUAL DATA_BOOL DOT_AN_DCOMMA .

    ID              reduce using rule 113 (ASSIGNMENT -> ID IQUAL DATA_BOOL DOT_AN_DCOMMA .)
    COMENTLINE      reduce using rule 113 (ASSIGNMENT -> ID IQUAL DATA_BOOL DOT_AN_DCOMMA .)
    COMENTMULTYLINE reduce using rule 113 (ASSIGNMENT -> ID IQUAL DATA_BOOL DOT_AN_DCOMMA .)
    BREAK           reduce using rule 113 (ASSIGNMENT -> ID IQUAL DATA_BOOL DOT_AN_DCOMMA .)
    CONTINUE        reduce using rule 113 (ASSIGNMENT -> ID IQUAL DATA_BOOL DOT_AN_DCOMMA .)
    CONDITIONAL_IF  reduce using rule 113 (ASSIGNMENT -> ID IQUAL DATA_BOOL DOT_AN_DCOMMA .)
    ITERATIVE_WHILE reduce using rule 113 (ASSIGNMENT -> ID IQUAL DATA_BOOL DOT_AN_DCOMMA .)
    ITERATIVE_DO    reduce using rule 113 (ASSIGNMENT -> ID IQUAL DATA_BOOL DOT_AN_DCOMMA .)
    TYPE_INT        reduce using rule 113 (ASSIGNMENT -> ID IQUAL DATA_BOOL DOT_AN_DCOMMA .)
    TYPE_DOUBLE     reduce using rule 113 (ASSIGNMENT -> ID IQUAL DATA_BOOL DOT_AN_DCOMMA .)
    TYPE_STRING     reduce using rule 113 (ASSIGNMENT -> ID IQUAL DATA_BOOL DOT_AN_DCOMMA .)
    TYPE_CHAR       reduce using rule 113 (ASSIGNMENT -> ID IQUAL DATA_BOOL DOT_AN_DCOMMA .)
    TYPE_BOOL       reduce using rule 113 (ASSIGNMENT -> ID IQUAL DATA_BOOL DOT_AN_DCOMMA .)
    METHOD_VOID     reduce using rule 113 (ASSIGNMENT -> ID IQUAL DATA_BOOL DOT_AN_DCOMMA .)
    $end            reduce using rule 113 (ASSIGNMENT -> ID IQUAL DATA_BOOL DOT_AN_DCOMMA .)
    RKEY            reduce using rule 113 (ASSIGNMENT -> ID IQUAL DATA_BOOL DOT_AN_DCOMMA .)
    METHOD_RETURN   reduce using rule 113 (ASSIGNMENT -> ID IQUAL DATA_BOOL DOT_AN_DCOMMA .)


state 135

    (114) ASSIGNMENT -> ID IQUAL EXPRESSIONS DOT_AN_DCOMMA .

    ID              reduce using rule 114 (ASSIGNMENT -> ID IQUAL EXPRESSIONS DOT_AN_DCOMMA .)
    COMENTLINE      reduce using rule 114 (ASSIGNMENT -> ID IQUAL EXPRESSIONS DOT_AN_DCOMMA .)
    COMENTMULTYLINE reduce using rule 114 (ASSIGNMENT -> ID IQUAL EXPRESSIONS DOT_AN_DCOMMA .)
    BREAK           reduce using rule 114 (ASSIGNMENT -> ID IQUAL EXPRESSIONS DOT_AN_DCOMMA .)
    CONTINUE        reduce using rule 114 (ASSIGNMENT -> ID IQUAL EXPRESSIONS DOT_AN_DCOMMA .)
    CONDITIONAL_IF  reduce using rule 114 (ASSIGNMENT -> ID IQUAL EXPRESSIONS DOT_AN_DCOMMA .)
    ITERATIVE_WHILE reduce using rule 114 (ASSIGNMENT -> ID IQUAL EXPRESSIONS DOT_AN_DCOMMA .)
    ITERATIVE_DO    reduce using rule 114 (ASSIGNMENT -> ID IQUAL EXPRESSIONS DOT_AN_DCOMMA .)
    TYPE_INT        reduce using rule 114 (ASSIGNMENT -> ID IQUAL EXPRESSIONS DOT_AN_DCOMMA .)
    TYPE_DOUBLE     reduce using rule 114 (ASSIGNMENT -> ID IQUAL EXPRESSIONS DOT_AN_DCOMMA .)
    TYPE_STRING     reduce using rule 114 (ASSIGNMENT -> ID IQUAL EXPRESSIONS DOT_AN_DCOMMA .)
    TYPE_CHAR       reduce using rule 114 (ASSIGNMENT -> ID IQUAL EXPRESSIONS DOT_AN_DCOMMA .)
    TYPE_BOOL       reduce using rule 114 (ASSIGNMENT -> ID IQUAL EXPRESSIONS DOT_AN_DCOMMA .)
    METHOD_VOID     reduce using rule 114 (ASSIGNMENT -> ID IQUAL EXPRESSIONS DOT_AN_DCOMMA .)
    $end            reduce using rule 114 (ASSIGNMENT -> ID IQUAL EXPRESSIONS DOT_AN_DCOMMA .)
    RKEY            reduce using rule 114 (ASSIGNMENT -> ID IQUAL EXPRESSIONS DOT_AN_DCOMMA .)
    METHOD_RETURN   reduce using rule 114 (ASSIGNMENT -> ID IQUAL EXPRESSIONS DOT_AN_DCOMMA .)


state 136

    (91) EXPRESSIONS -> EXPRESSIONS E .
    (93) E -> E . PLUS E
    (94) E -> E . MINUS E
    (95) E -> E . TIMES E
    (96) E -> E . DIVIDE E
    (97) E -> E . REST E

    DOT_AN_DCOMMA   reduce using rule 91 (EXPRESSIONS -> EXPRESSIONS E .)
    ID              reduce using rule 91 (EXPRESSIONS -> EXPRESSIONS E .)
    INT             reduce using rule 91 (EXPRESSIONS -> EXPRESSIONS E .)
    FLOAT           reduce using rule 91 (EXPRESSIONS -> EXPRESSIONS E .)
    STRING          reduce using rule 91 (EXPRESSIONS -> EXPRESSIONS E .)
    CHAR            reduce using rule 91 (EXPRESSIONS -> EXPRESSIONS E .)
    DATA_BOOL       reduce using rule 91 (EXPRESSIONS -> EXPRESSIONS E .)
    IQUALS          reduce using rule 91 (EXPRESSIONS -> EXPRESSIONS E .)
    DIFFERENT       reduce using rule 91 (EXPRESSIONS -> EXPRESSIONS E .)
    IQUAL_GREATER   reduce using rule 91 (EXPRESSIONS -> EXPRESSIONS E .)
    IQUAL_LESS      reduce using rule 91 (EXPRESSIONS -> EXPRESSIONS E .)
    GREATER         reduce using rule 91 (EXPRESSIONS -> EXPRESSIONS E .)
    LESS            reduce using rule 91 (EXPRESSIONS -> EXPRESSIONS E .)
    AND             reduce using rule 91 (EXPRESSIONS -> EXPRESSIONS E .)
    OR              reduce using rule 91 (EXPRESSIONS -> EXPRESSIONS E .)
    NOT             reduce using rule 91 (EXPRESSIONS -> EXPRESSIONS E .)
    RPAREN          reduce using rule 91 (EXPRESSIONS -> EXPRESSIONS E .)
    PLUS            shift and go to state 137
    MINUS           shift and go to state 138
    TIMES           shift and go to state 139
    DIVIDE          shift and go to state 140
    REST            shift and go to state 141


state 137

    (93) E -> E PLUS . E
    (93) E -> . E PLUS E
    (94) E -> . E MINUS E
    (95) E -> . E TIMES E
    (96) E -> . E DIVIDE E
    (97) E -> . E REST E
    (98) E -> . ID
    (99) E -> . TYPE_DATO
    (126) TYPE_DATO -> . INT
    (127) TYPE_DATO -> . FLOAT
    (128) TYPE_DATO -> . STRING
    (129) TYPE_DATO -> . CHAR
    (130) TYPE_DATO -> . DATA_BOOL

    ID              shift and go to state 82
    INT             shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    CHAR            shift and go to state 80
    DATA_BOOL       shift and go to state 81

    E                              shift and go to state 205
    TYPE_DATO                      shift and go to state 90

state 138

    (94) E -> E MINUS . E
    (93) E -> . E PLUS E
    (94) E -> . E MINUS E
    (95) E -> . E TIMES E
    (96) E -> . E DIVIDE E
    (97) E -> . E REST E
    (98) E -> . ID
    (99) E -> . TYPE_DATO
    (126) TYPE_DATO -> . INT
    (127) TYPE_DATO -> . FLOAT
    (128) TYPE_DATO -> . STRING
    (129) TYPE_DATO -> . CHAR
    (130) TYPE_DATO -> . DATA_BOOL

    ID              shift and go to state 82
    INT             shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    CHAR            shift and go to state 80
    DATA_BOOL       shift and go to state 81

    E                              shift and go to state 206
    TYPE_DATO                      shift and go to state 90

state 139

    (95) E -> E TIMES . E
    (93) E -> . E PLUS E
    (94) E -> . E MINUS E
    (95) E -> . E TIMES E
    (96) E -> . E DIVIDE E
    (97) E -> . E REST E
    (98) E -> . ID
    (99) E -> . TYPE_DATO
    (126) TYPE_DATO -> . INT
    (127) TYPE_DATO -> . FLOAT
    (128) TYPE_DATO -> . STRING
    (129) TYPE_DATO -> . CHAR
    (130) TYPE_DATO -> . DATA_BOOL

    ID              shift and go to state 82
    INT             shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    CHAR            shift and go to state 80
    DATA_BOOL       shift and go to state 81

    E                              shift and go to state 207
    TYPE_DATO                      shift and go to state 90

state 140

    (96) E -> E DIVIDE . E
    (93) E -> . E PLUS E
    (94) E -> . E MINUS E
    (95) E -> . E TIMES E
    (96) E -> . E DIVIDE E
    (97) E -> . E REST E
    (98) E -> . ID
    (99) E -> . TYPE_DATO
    (126) TYPE_DATO -> . INT
    (127) TYPE_DATO -> . FLOAT
    (128) TYPE_DATO -> . STRING
    (129) TYPE_DATO -> . CHAR
    (130) TYPE_DATO -> . DATA_BOOL

    ID              shift and go to state 82
    INT             shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    CHAR            shift and go to state 80
    DATA_BOOL       shift and go to state 81

    E                              shift and go to state 208
    TYPE_DATO                      shift and go to state 90

state 141

    (97) E -> E REST . E
    (93) E -> . E PLUS E
    (94) E -> . E MINUS E
    (95) E -> . E TIMES E
    (96) E -> . E DIVIDE E
    (97) E -> . E REST E
    (98) E -> . ID
    (99) E -> . TYPE_DATO
    (126) TYPE_DATO -> . INT
    (127) TYPE_DATO -> . FLOAT
    (128) TYPE_DATO -> . STRING
    (129) TYPE_DATO -> . CHAR
    (130) TYPE_DATO -> . DATA_BOOL

    ID              shift and go to state 82
    INT             shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    CHAR            shift and go to state 80
    DATA_BOOL       shift and go to state 81

    E                              shift and go to state 209
    TYPE_DATO                      shift and go to state 90

state 142

    (102) DECLARATION -> TYPE_INT ID IQUAL INT . DOT_AN_DCOMMA

    DOT_AN_DCOMMA   shift and go to state 210


state 143

    (21) COUPLER -> ID LPAREN RPAREN . LKEY empty RKEY
    (22) COUPLER -> ID LPAREN RPAREN . LKEY SENTENCES_FUNTION RKEY

    LKEY            shift and go to state 211


state 144

    (23) COUPLER -> ID LPAREN L_PARAMS . RPAREN LKEY empty RKEY
    (24) COUPLER -> ID LPAREN L_PARAMS . RPAREN LKEY SENTENCES_FUNTION RKEY
    (115) L_PARAMS -> L_PARAMS . COMMA PARAM

    RPAREN          shift and go to state 212
    COMMA           shift and go to state 198


state 145

    (103) DECLARATION -> TYPE_DOUBLE ID IQUAL FLOAT . DOT_AN_DCOMMA

    DOT_AN_DCOMMA   shift and go to state 213


state 146

    (104) DECLARATION -> TYPE_STRING ID IQUAL STRING . DOT_AN_DCOMMA

    DOT_AN_DCOMMA   shift and go to state 214


state 147

    (105) DECLARATION -> TYPE_CHAR ID IQUAL CHAR . DOT_AN_DCOMMA

    DOT_AN_DCOMMA   shift and go to state 215


state 148

    (106) DECLARATION -> TYPE_BOOL ID IQUAL DATA_BOOL . DOT_AN_DCOMMA

    DOT_AN_DCOMMA   shift and go to state 216


state 149

    (63) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN . LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN . LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN . LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN . LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN . LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN . LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY

    LKEY            shift and go to state 217


state 150

    (77) INSTRUCTIONS -> INSTRUCTIONS OPTIONS .
    (79) OPTIONS -> OPTIONS . AND OPTIONS
    (80) OPTIONS -> OPTIONS . OR OPTIONS
    (81) OPTIONS -> OPTIONS . NOT OPTIONS

    RPAREN          reduce using rule 77 (INSTRUCTIONS -> INSTRUCTIONS OPTIONS .)
    ID              reduce using rule 77 (INSTRUCTIONS -> INSTRUCTIONS OPTIONS .)
    INT             reduce using rule 77 (INSTRUCTIONS -> INSTRUCTIONS OPTIONS .)
    FLOAT           reduce using rule 77 (INSTRUCTIONS -> INSTRUCTIONS OPTIONS .)
    STRING          reduce using rule 77 (INSTRUCTIONS -> INSTRUCTIONS OPTIONS .)
    CHAR            reduce using rule 77 (INSTRUCTIONS -> INSTRUCTIONS OPTIONS .)
    DATA_BOOL       reduce using rule 77 (INSTRUCTIONS -> INSTRUCTIONS OPTIONS .)
    AND             shift and go to state 151
    OR              shift and go to state 152
    NOT             shift and go to state 153


state 151

    (79) OPTIONS -> OPTIONS AND . OPTIONS
    (79) OPTIONS -> . OPTIONS AND OPTIONS
    (80) OPTIONS -> . OPTIONS OR OPTIONS
    (81) OPTIONS -> . OPTIONS NOT OPTIONS
    (82) OPTIONS -> . OPTION
    (83) OPTION -> . OPTION IQUALS OPTION
    (84) OPTION -> . OPTION DIFFERENT OPTION
    (85) OPTION -> . OPTION IQUAL_GREATER OPTION
    (86) OPTION -> . OPTION IQUAL_LESS OPTION
    (87) OPTION -> . OPTION GREATER OPTION
    (88) OPTION -> . OPTION LESS OPTION
    (89) OPTION -> . ID
    (90) OPTION -> . EXPRESSIONS
    (91) EXPRESSIONS -> . EXPRESSIONS E
    (92) EXPRESSIONS -> . E
    (93) E -> . E PLUS E
    (94) E -> . E MINUS E
    (95) E -> . E TIMES E
    (96) E -> . E DIVIDE E
    (97) E -> . E REST E
    (98) E -> . ID
    (99) E -> . TYPE_DATO
    (126) TYPE_DATO -> . INT
    (127) TYPE_DATO -> . FLOAT
    (128) TYPE_DATO -> . STRING
    (129) TYPE_DATO -> . CHAR
    (130) TYPE_DATO -> . DATA_BOOL

    ID              shift and go to state 100
    INT             shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    CHAR            shift and go to state 80
    DATA_BOOL       shift and go to state 81

    OPTIONS                        shift and go to state 218
    OPTION                         shift and go to state 99
    EXPRESSIONS                    shift and go to state 101
    E                              shift and go to state 89
    TYPE_DATO                      shift and go to state 90

state 152

    (80) OPTIONS -> OPTIONS OR . OPTIONS
    (79) OPTIONS -> . OPTIONS AND OPTIONS
    (80) OPTIONS -> . OPTIONS OR OPTIONS
    (81) OPTIONS -> . OPTIONS NOT OPTIONS
    (82) OPTIONS -> . OPTION
    (83) OPTION -> . OPTION IQUALS OPTION
    (84) OPTION -> . OPTION DIFFERENT OPTION
    (85) OPTION -> . OPTION IQUAL_GREATER OPTION
    (86) OPTION -> . OPTION IQUAL_LESS OPTION
    (87) OPTION -> . OPTION GREATER OPTION
    (88) OPTION -> . OPTION LESS OPTION
    (89) OPTION -> . ID
    (90) OPTION -> . EXPRESSIONS
    (91) EXPRESSIONS -> . EXPRESSIONS E
    (92) EXPRESSIONS -> . E
    (93) E -> . E PLUS E
    (94) E -> . E MINUS E
    (95) E -> . E TIMES E
    (96) E -> . E DIVIDE E
    (97) E -> . E REST E
    (98) E -> . ID
    (99) E -> . TYPE_DATO
    (126) TYPE_DATO -> . INT
    (127) TYPE_DATO -> . FLOAT
    (128) TYPE_DATO -> . STRING
    (129) TYPE_DATO -> . CHAR
    (130) TYPE_DATO -> . DATA_BOOL

    ID              shift and go to state 100
    INT             shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    CHAR            shift and go to state 80
    DATA_BOOL       shift and go to state 81

    OPTIONS                        shift and go to state 219
    OPTION                         shift and go to state 99
    EXPRESSIONS                    shift and go to state 101
    E                              shift and go to state 89
    TYPE_DATO                      shift and go to state 90

state 153

    (81) OPTIONS -> OPTIONS NOT . OPTIONS
    (79) OPTIONS -> . OPTIONS AND OPTIONS
    (80) OPTIONS -> . OPTIONS OR OPTIONS
    (81) OPTIONS -> . OPTIONS NOT OPTIONS
    (82) OPTIONS -> . OPTION
    (83) OPTION -> . OPTION IQUALS OPTION
    (84) OPTION -> . OPTION DIFFERENT OPTION
    (85) OPTION -> . OPTION IQUAL_GREATER OPTION
    (86) OPTION -> . OPTION IQUAL_LESS OPTION
    (87) OPTION -> . OPTION GREATER OPTION
    (88) OPTION -> . OPTION LESS OPTION
    (89) OPTION -> . ID
    (90) OPTION -> . EXPRESSIONS
    (91) EXPRESSIONS -> . EXPRESSIONS E
    (92) EXPRESSIONS -> . E
    (93) E -> . E PLUS E
    (94) E -> . E MINUS E
    (95) E -> . E TIMES E
    (96) E -> . E DIVIDE E
    (97) E -> . E REST E
    (98) E -> . ID
    (99) E -> . TYPE_DATO
    (126) TYPE_DATO -> . INT
    (127) TYPE_DATO -> . FLOAT
    (128) TYPE_DATO -> . STRING
    (129) TYPE_DATO -> . CHAR
    (130) TYPE_DATO -> . DATA_BOOL

    ID              shift and go to state 100
    INT             shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    CHAR            shift and go to state 80
    DATA_BOOL       shift and go to state 81

    OPTIONS                        shift and go to state 220
    OPTION                         shift and go to state 99
    EXPRESSIONS                    shift and go to state 101
    E                              shift and go to state 89
    TYPE_DATO                      shift and go to state 90

state 154

    (83) OPTION -> OPTION IQUALS . OPTION
    (83) OPTION -> . OPTION IQUALS OPTION
    (84) OPTION -> . OPTION DIFFERENT OPTION
    (85) OPTION -> . OPTION IQUAL_GREATER OPTION
    (86) OPTION -> . OPTION IQUAL_LESS OPTION
    (87) OPTION -> . OPTION GREATER OPTION
    (88) OPTION -> . OPTION LESS OPTION
    (89) OPTION -> . ID
    (90) OPTION -> . EXPRESSIONS
    (91) EXPRESSIONS -> . EXPRESSIONS E
    (92) EXPRESSIONS -> . E
    (93) E -> . E PLUS E
    (94) E -> . E MINUS E
    (95) E -> . E TIMES E
    (96) E -> . E DIVIDE E
    (97) E -> . E REST E
    (98) E -> . ID
    (99) E -> . TYPE_DATO
    (126) TYPE_DATO -> . INT
    (127) TYPE_DATO -> . FLOAT
    (128) TYPE_DATO -> . STRING
    (129) TYPE_DATO -> . CHAR
    (130) TYPE_DATO -> . DATA_BOOL

    ID              shift and go to state 100
    INT             shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    CHAR            shift and go to state 80
    DATA_BOOL       shift and go to state 81

    OPTION                         shift and go to state 221
    EXPRESSIONS                    shift and go to state 101
    E                              shift and go to state 89
    TYPE_DATO                      shift and go to state 90

state 155

    (84) OPTION -> OPTION DIFFERENT . OPTION
    (83) OPTION -> . OPTION IQUALS OPTION
    (84) OPTION -> . OPTION DIFFERENT OPTION
    (85) OPTION -> . OPTION IQUAL_GREATER OPTION
    (86) OPTION -> . OPTION IQUAL_LESS OPTION
    (87) OPTION -> . OPTION GREATER OPTION
    (88) OPTION -> . OPTION LESS OPTION
    (89) OPTION -> . ID
    (90) OPTION -> . EXPRESSIONS
    (91) EXPRESSIONS -> . EXPRESSIONS E
    (92) EXPRESSIONS -> . E
    (93) E -> . E PLUS E
    (94) E -> . E MINUS E
    (95) E -> . E TIMES E
    (96) E -> . E DIVIDE E
    (97) E -> . E REST E
    (98) E -> . ID
    (99) E -> . TYPE_DATO
    (126) TYPE_DATO -> . INT
    (127) TYPE_DATO -> . FLOAT
    (128) TYPE_DATO -> . STRING
    (129) TYPE_DATO -> . CHAR
    (130) TYPE_DATO -> . DATA_BOOL

    ID              shift and go to state 100
    INT             shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    CHAR            shift and go to state 80
    DATA_BOOL       shift and go to state 81

    OPTION                         shift and go to state 222
    EXPRESSIONS                    shift and go to state 101
    E                              shift and go to state 89
    TYPE_DATO                      shift and go to state 90

state 156

    (85) OPTION -> OPTION IQUAL_GREATER . OPTION
    (83) OPTION -> . OPTION IQUALS OPTION
    (84) OPTION -> . OPTION DIFFERENT OPTION
    (85) OPTION -> . OPTION IQUAL_GREATER OPTION
    (86) OPTION -> . OPTION IQUAL_LESS OPTION
    (87) OPTION -> . OPTION GREATER OPTION
    (88) OPTION -> . OPTION LESS OPTION
    (89) OPTION -> . ID
    (90) OPTION -> . EXPRESSIONS
    (91) EXPRESSIONS -> . EXPRESSIONS E
    (92) EXPRESSIONS -> . E
    (93) E -> . E PLUS E
    (94) E -> . E MINUS E
    (95) E -> . E TIMES E
    (96) E -> . E DIVIDE E
    (97) E -> . E REST E
    (98) E -> . ID
    (99) E -> . TYPE_DATO
    (126) TYPE_DATO -> . INT
    (127) TYPE_DATO -> . FLOAT
    (128) TYPE_DATO -> . STRING
    (129) TYPE_DATO -> . CHAR
    (130) TYPE_DATO -> . DATA_BOOL

    ID              shift and go to state 100
    INT             shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    CHAR            shift and go to state 80
    DATA_BOOL       shift and go to state 81

    OPTION                         shift and go to state 223
    EXPRESSIONS                    shift and go to state 101
    E                              shift and go to state 89
    TYPE_DATO                      shift and go to state 90

state 157

    (86) OPTION -> OPTION IQUAL_LESS . OPTION
    (83) OPTION -> . OPTION IQUALS OPTION
    (84) OPTION -> . OPTION DIFFERENT OPTION
    (85) OPTION -> . OPTION IQUAL_GREATER OPTION
    (86) OPTION -> . OPTION IQUAL_LESS OPTION
    (87) OPTION -> . OPTION GREATER OPTION
    (88) OPTION -> . OPTION LESS OPTION
    (89) OPTION -> . ID
    (90) OPTION -> . EXPRESSIONS
    (91) EXPRESSIONS -> . EXPRESSIONS E
    (92) EXPRESSIONS -> . E
    (93) E -> . E PLUS E
    (94) E -> . E MINUS E
    (95) E -> . E TIMES E
    (96) E -> . E DIVIDE E
    (97) E -> . E REST E
    (98) E -> . ID
    (99) E -> . TYPE_DATO
    (126) TYPE_DATO -> . INT
    (127) TYPE_DATO -> . FLOAT
    (128) TYPE_DATO -> . STRING
    (129) TYPE_DATO -> . CHAR
    (130) TYPE_DATO -> . DATA_BOOL

    ID              shift and go to state 100
    INT             shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    CHAR            shift and go to state 80
    DATA_BOOL       shift and go to state 81

    OPTION                         shift and go to state 224
    EXPRESSIONS                    shift and go to state 101
    E                              shift and go to state 89
    TYPE_DATO                      shift and go to state 90

state 158

    (87) OPTION -> OPTION GREATER . OPTION
    (83) OPTION -> . OPTION IQUALS OPTION
    (84) OPTION -> . OPTION DIFFERENT OPTION
    (85) OPTION -> . OPTION IQUAL_GREATER OPTION
    (86) OPTION -> . OPTION IQUAL_LESS OPTION
    (87) OPTION -> . OPTION GREATER OPTION
    (88) OPTION -> . OPTION LESS OPTION
    (89) OPTION -> . ID
    (90) OPTION -> . EXPRESSIONS
    (91) EXPRESSIONS -> . EXPRESSIONS E
    (92) EXPRESSIONS -> . E
    (93) E -> . E PLUS E
    (94) E -> . E MINUS E
    (95) E -> . E TIMES E
    (96) E -> . E DIVIDE E
    (97) E -> . E REST E
    (98) E -> . ID
    (99) E -> . TYPE_DATO
    (126) TYPE_DATO -> . INT
    (127) TYPE_DATO -> . FLOAT
    (128) TYPE_DATO -> . STRING
    (129) TYPE_DATO -> . CHAR
    (130) TYPE_DATO -> . DATA_BOOL

    ID              shift and go to state 100
    INT             shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    CHAR            shift and go to state 80
    DATA_BOOL       shift and go to state 81

    OPTION                         shift and go to state 225
    EXPRESSIONS                    shift and go to state 101
    E                              shift and go to state 89
    TYPE_DATO                      shift and go to state 90

state 159

    (88) OPTION -> OPTION LESS . OPTION
    (83) OPTION -> . OPTION IQUALS OPTION
    (84) OPTION -> . OPTION DIFFERENT OPTION
    (85) OPTION -> . OPTION IQUAL_GREATER OPTION
    (86) OPTION -> . OPTION IQUAL_LESS OPTION
    (87) OPTION -> . OPTION GREATER OPTION
    (88) OPTION -> . OPTION LESS OPTION
    (89) OPTION -> . ID
    (90) OPTION -> . EXPRESSIONS
    (91) EXPRESSIONS -> . EXPRESSIONS E
    (92) EXPRESSIONS -> . E
    (93) E -> . E PLUS E
    (94) E -> . E MINUS E
    (95) E -> . E TIMES E
    (96) E -> . E DIVIDE E
    (97) E -> . E REST E
    (98) E -> . ID
    (99) E -> . TYPE_DATO
    (126) TYPE_DATO -> . INT
    (127) TYPE_DATO -> . FLOAT
    (128) TYPE_DATO -> . STRING
    (129) TYPE_DATO -> . CHAR
    (130) TYPE_DATO -> . DATA_BOOL

    ID              shift and go to state 100
    INT             shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    CHAR            shift and go to state 80
    DATA_BOOL       shift and go to state 81

    OPTION                         shift and go to state 226
    EXPRESSIONS                    shift and go to state 101
    E                              shift and go to state 89
    TYPE_DATO                      shift and go to state 90

state 160

    (71) SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN . LKEY SENTENCES RKEY
    (73) SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN . LKEY SENTENCES_FUNTION RKEY
    (75) SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN . LKEY SENTENCES_METHOD RKEY

    LKEY            shift and go to state 227


state 161

    (72) SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES RKEY . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA

    ITERATIVE_WHILE shift and go to state 228


state 162

    (74) SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA

    ITERATIVE_WHILE shift and go to state 229


state 163

    (37) SENTENCES_FUNTION -> SENTENCES_FUNTION SENTENCE_FUNTION .

    RKEY            reduce using rule 37 (SENTENCES_FUNTION -> SENTENCES_FUNTION SENTENCE_FUNTION .)
    COMENTLINE      reduce using rule 37 (SENTENCES_FUNTION -> SENTENCES_FUNTION SENTENCE_FUNTION .)
    COMENTMULTYLINE reduce using rule 37 (SENTENCES_FUNTION -> SENTENCES_FUNTION SENTENCE_FUNTION .)
    BREAK           reduce using rule 37 (SENTENCES_FUNTION -> SENTENCES_FUNTION SENTENCE_FUNTION .)
    CONTINUE        reduce using rule 37 (SENTENCES_FUNTION -> SENTENCES_FUNTION SENTENCE_FUNTION .)
    METHOD_RETURN   reduce using rule 37 (SENTENCES_FUNTION -> SENTENCES_FUNTION SENTENCE_FUNTION .)
    ID              reduce using rule 37 (SENTENCES_FUNTION -> SENTENCES_FUNTION SENTENCE_FUNTION .)
    TYPE_INT        reduce using rule 37 (SENTENCES_FUNTION -> SENTENCES_FUNTION SENTENCE_FUNTION .)
    TYPE_DOUBLE     reduce using rule 37 (SENTENCES_FUNTION -> SENTENCES_FUNTION SENTENCE_FUNTION .)
    TYPE_STRING     reduce using rule 37 (SENTENCES_FUNTION -> SENTENCES_FUNTION SENTENCE_FUNTION .)
    TYPE_CHAR       reduce using rule 37 (SENTENCES_FUNTION -> SENTENCES_FUNTION SENTENCE_FUNTION .)
    TYPE_BOOL       reduce using rule 37 (SENTENCES_FUNTION -> SENTENCES_FUNTION SENTENCE_FUNTION .)
    CONDITIONAL_IF  reduce using rule 37 (SENTENCES_FUNTION -> SENTENCES_FUNTION SENTENCE_FUNTION .)
    ITERATIVE_WHILE reduce using rule 37 (SENTENCES_FUNTION -> SENTENCES_FUNTION SENTENCE_FUNTION .)
    ITERATIVE_DO    reduce using rule 37 (SENTENCES_FUNTION -> SENTENCES_FUNTION SENTENCE_FUNTION .)


state 164

    (39) SENTENCE_FUNTION -> DECLARATIONS .
    (100) DECLARATIONS -> DECLARATIONS . DECLARATION
    (102) DECLARATION -> . TYPE_INT ID IQUAL INT DOT_AN_DCOMMA
    (103) DECLARATION -> . TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA
    (104) DECLARATION -> . TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA
    (105) DECLARATION -> . TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA
    (106) DECLARATION -> . TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA

  ! shift/reduce conflict for TYPE_INT resolved as shift
  ! shift/reduce conflict for TYPE_DOUBLE resolved as shift
  ! shift/reduce conflict for TYPE_STRING resolved as shift
  ! shift/reduce conflict for TYPE_CHAR resolved as shift
  ! shift/reduce conflict for TYPE_BOOL resolved as shift
    RKEY            reduce using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .)
    COMENTLINE      reduce using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .)
    COMENTMULTYLINE reduce using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .)
    BREAK           reduce using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .)
    CONTINUE        reduce using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .)
    METHOD_RETURN   reduce using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .)
    ID              reduce using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .)
    CONDITIONAL_IF  reduce using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .)
    ITERATIVE_WHILE reduce using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .)
    ITERATIVE_DO    reduce using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .)
    TYPE_INT        shift and go to state 40
    TYPE_DOUBLE     shift and go to state 41
    TYPE_STRING     shift and go to state 42
    TYPE_CHAR       shift and go to state 43
    TYPE_BOOL       shift and go to state 44

  ! TYPE_INT        [ reduce using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .) ]
  ! TYPE_DOUBLE     [ reduce using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .) ]
  ! TYPE_STRING     [ reduce using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .) ]
  ! TYPE_CHAR       [ reduce using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .) ]
  ! TYPE_BOOL       [ reduce using rule 39 (SENTENCE_FUNTION -> DECLARATIONS .) ]

    DECLARATION                    shift and go to state 58

state 165

    (40) SENTENCE_FUNTION -> ASSIGNMENTS .
    (107) ASSIGNMENTS -> ASSIGNMENTS . ASSIGNMENT
    (109) ASSIGNMENT -> . ID IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> . ID IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> . ID IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> . ID IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> . ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> . ID IQUAL EXPRESSIONS DOT_AN_DCOMMA

  ! shift/reduce conflict for ID resolved as shift
    RKEY            reduce using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .)
    COMENTLINE      reduce using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .)
    COMENTMULTYLINE reduce using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .)
    BREAK           reduce using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .)
    CONTINUE        reduce using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .)
    METHOD_RETURN   reduce using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .)
    TYPE_INT        reduce using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .)
    TYPE_DOUBLE     reduce using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .)
    TYPE_STRING     reduce using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .)
    TYPE_CHAR       reduce using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .)
    TYPE_BOOL       reduce using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .)
    CONDITIONAL_IF  reduce using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .)
    ITERATIVE_WHILE reduce using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .)
    ITERATIVE_DO    reduce using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .)
    ID              shift and go to state 60

  ! ID              [ reduce using rule 40 (SENTENCE_FUNTION -> ASSIGNMENTS .) ]

    ASSIGNMENT                     shift and go to state 59

state 166

    (41) SENTENCE_FUNTION -> SENTENCES_IF .
    (61) SENTENCES_IF -> SENTENCES_IF . SENTENCE_IF
    (63) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY

  ! shift/reduce conflict for CONDITIONAL_IF resolved as shift
    RKEY            reduce using rule 41 (SENTENCE_FUNTION -> SENTENCES_IF .)
    COMENTLINE      reduce using rule 41 (SENTENCE_FUNTION -> SENTENCES_IF .)
    COMENTMULTYLINE reduce using rule 41 (SENTENCE_FUNTION -> SENTENCES_IF .)
    BREAK           reduce using rule 41 (SENTENCE_FUNTION -> SENTENCES_IF .)
    CONTINUE        reduce using rule 41 (SENTENCE_FUNTION -> SENTENCES_IF .)
    METHOD_RETURN   reduce using rule 41 (SENTENCE_FUNTION -> SENTENCES_IF .)
    ID              reduce using rule 41 (SENTENCE_FUNTION -> SENTENCES_IF .)
    TYPE_INT        reduce using rule 41 (SENTENCE_FUNTION -> SENTENCES_IF .)
    TYPE_DOUBLE     reduce using rule 41 (SENTENCE_FUNTION -> SENTENCES_IF .)
    TYPE_STRING     reduce using rule 41 (SENTENCE_FUNTION -> SENTENCES_IF .)
    TYPE_CHAR       reduce using rule 41 (SENTENCE_FUNTION -> SENTENCES_IF .)
    TYPE_BOOL       reduce using rule 41 (SENTENCE_FUNTION -> SENTENCES_IF .)
    ITERATIVE_WHILE reduce using rule 41 (SENTENCE_FUNTION -> SENTENCES_IF .)
    ITERATIVE_DO    reduce using rule 41 (SENTENCE_FUNTION -> SENTENCES_IF .)
    CONDITIONAL_IF  shift and go to state 28

  ! CONDITIONAL_IF  [ reduce using rule 41 (SENTENCE_FUNTION -> SENTENCES_IF .) ]

    SENTENCE_IF                    shift and go to state 191

state 167

    (42) SENTENCE_FUNTION -> SENTENCES_WHILE .
    (69) SENTENCES_WHILE -> SENTENCES_WHILE . SENTENCE_WHILE
    (71) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (72) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (73) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (74) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (75) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (76) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA

  ! shift/reduce conflict for ITERATIVE_WHILE resolved as shift
  ! shift/reduce conflict for ITERATIVE_DO resolved as shift
    RKEY            reduce using rule 42 (SENTENCE_FUNTION -> SENTENCES_WHILE .)
    COMENTLINE      reduce using rule 42 (SENTENCE_FUNTION -> SENTENCES_WHILE .)
    COMENTMULTYLINE reduce using rule 42 (SENTENCE_FUNTION -> SENTENCES_WHILE .)
    BREAK           reduce using rule 42 (SENTENCE_FUNTION -> SENTENCES_WHILE .)
    CONTINUE        reduce using rule 42 (SENTENCE_FUNTION -> SENTENCES_WHILE .)
    METHOD_RETURN   reduce using rule 42 (SENTENCE_FUNTION -> SENTENCES_WHILE .)
    ID              reduce using rule 42 (SENTENCE_FUNTION -> SENTENCES_WHILE .)
    TYPE_INT        reduce using rule 42 (SENTENCE_FUNTION -> SENTENCES_WHILE .)
    TYPE_DOUBLE     reduce using rule 42 (SENTENCE_FUNTION -> SENTENCES_WHILE .)
    TYPE_STRING     reduce using rule 42 (SENTENCE_FUNTION -> SENTENCES_WHILE .)
    TYPE_CHAR       reduce using rule 42 (SENTENCE_FUNTION -> SENTENCES_WHILE .)
    TYPE_BOOL       reduce using rule 42 (SENTENCE_FUNTION -> SENTENCES_WHILE .)
    CONDITIONAL_IF  reduce using rule 42 (SENTENCE_FUNTION -> SENTENCES_WHILE .)
    ITERATIVE_WHILE shift and go to state 29
    ITERATIVE_DO    shift and go to state 30

  ! ITERATIVE_WHILE [ reduce using rule 42 (SENTENCE_FUNTION -> SENTENCES_WHILE .) ]
  ! ITERATIVE_DO    [ reduce using rule 42 (SENTENCE_FUNTION -> SENTENCES_WHILE .) ]

    SENTENCE_WHILE                 shift and go to state 192

state 168

    (43) SENTENCE_FUNTION -> COMENTLINE .

    RKEY            reduce using rule 43 (SENTENCE_FUNTION -> COMENTLINE .)
    COMENTLINE      reduce using rule 43 (SENTENCE_FUNTION -> COMENTLINE .)
    COMENTMULTYLINE reduce using rule 43 (SENTENCE_FUNTION -> COMENTLINE .)
    BREAK           reduce using rule 43 (SENTENCE_FUNTION -> COMENTLINE .)
    CONTINUE        reduce using rule 43 (SENTENCE_FUNTION -> COMENTLINE .)
    METHOD_RETURN   reduce using rule 43 (SENTENCE_FUNTION -> COMENTLINE .)
    ID              reduce using rule 43 (SENTENCE_FUNTION -> COMENTLINE .)
    TYPE_INT        reduce using rule 43 (SENTENCE_FUNTION -> COMENTLINE .)
    TYPE_DOUBLE     reduce using rule 43 (SENTENCE_FUNTION -> COMENTLINE .)
    TYPE_STRING     reduce using rule 43 (SENTENCE_FUNTION -> COMENTLINE .)
    TYPE_CHAR       reduce using rule 43 (SENTENCE_FUNTION -> COMENTLINE .)
    TYPE_BOOL       reduce using rule 43 (SENTENCE_FUNTION -> COMENTLINE .)
    CONDITIONAL_IF  reduce using rule 43 (SENTENCE_FUNTION -> COMENTLINE .)
    ITERATIVE_WHILE reduce using rule 43 (SENTENCE_FUNTION -> COMENTLINE .)
    ITERATIVE_DO    reduce using rule 43 (SENTENCE_FUNTION -> COMENTLINE .)


state 169

    (44) SENTENCE_FUNTION -> COMENTMULTYLINE .

    RKEY            reduce using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .)
    COMENTLINE      reduce using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .)
    COMENTMULTYLINE reduce using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .)
    BREAK           reduce using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .)
    CONTINUE        reduce using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .)
    METHOD_RETURN   reduce using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .)
    ID              reduce using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .)
    TYPE_INT        reduce using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .)
    TYPE_DOUBLE     reduce using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .)
    TYPE_STRING     reduce using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .)
    TYPE_CHAR       reduce using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .)
    TYPE_BOOL       reduce using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .)
    CONDITIONAL_IF  reduce using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .)
    ITERATIVE_WHILE reduce using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .)
    ITERATIVE_DO    reduce using rule 44 (SENTENCE_FUNTION -> COMENTMULTYLINE .)


state 170

    (45) SENTENCE_FUNTION -> BREAK . DOT_AN_DCOMMA

    DOT_AN_DCOMMA   shift and go to state 230


state 171

    (46) SENTENCE_FUNTION -> CONTINUE . DOT_AN_DCOMMA

    DOT_AN_DCOMMA   shift and go to state 231


state 172

    (47) SENTENCE_FUNTION -> METHOD_RETURN . TYPE_DATO DOT_AN_DCOMMA
    (48) SENTENCE_FUNTION -> METHOD_RETURN . ID DOT_AN_DCOMMA
    (126) TYPE_DATO -> . INT
    (127) TYPE_DATO -> . FLOAT
    (128) TYPE_DATO -> . STRING
    (129) TYPE_DATO -> . CHAR
    (130) TYPE_DATO -> . DATA_BOOL

    ID              shift and go to state 195
    INT             shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    CHAR            shift and go to state 80
    DATA_BOOL       shift and go to state 81

    TYPE_DATO                      shift and go to state 193

state 173

    (49) SENTENCE_FUNTION -> ID . LPAREN CALLS RPAREN
    (109) ASSIGNMENT -> ID . IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> ID . IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> ID . IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> ID . IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> ID . IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> ID . IQUAL EXPRESSIONS DOT_AN_DCOMMA

    LPAREN          shift and go to state 232
    IQUAL           shift and go to state 47


state 174

    (62) SENTENCES_IF -> SENTENCE_IF .

    CONDITIONAL_IF  reduce using rule 62 (SENTENCES_IF -> SENTENCE_IF .)
    RKEY            reduce using rule 62 (SENTENCES_IF -> SENTENCE_IF .)
    COMENTLINE      reduce using rule 62 (SENTENCES_IF -> SENTENCE_IF .)
    COMENTMULTYLINE reduce using rule 62 (SENTENCES_IF -> SENTENCE_IF .)
    BREAK           reduce using rule 62 (SENTENCES_IF -> SENTENCE_IF .)
    CONTINUE        reduce using rule 62 (SENTENCES_IF -> SENTENCE_IF .)
    METHOD_RETURN   reduce using rule 62 (SENTENCES_IF -> SENTENCE_IF .)
    ID              reduce using rule 62 (SENTENCES_IF -> SENTENCE_IF .)
    TYPE_INT        reduce using rule 62 (SENTENCES_IF -> SENTENCE_IF .)
    TYPE_DOUBLE     reduce using rule 62 (SENTENCES_IF -> SENTENCE_IF .)
    TYPE_STRING     reduce using rule 62 (SENTENCES_IF -> SENTENCE_IF .)
    TYPE_CHAR       reduce using rule 62 (SENTENCES_IF -> SENTENCE_IF .)
    TYPE_BOOL       reduce using rule 62 (SENTENCES_IF -> SENTENCE_IF .)
    ITERATIVE_WHILE reduce using rule 62 (SENTENCES_IF -> SENTENCE_IF .)
    ITERATIVE_DO    reduce using rule 62 (SENTENCES_IF -> SENTENCE_IF .)


state 175

    (70) SENTENCES_WHILE -> SENTENCE_WHILE .

    ITERATIVE_WHILE reduce using rule 70 (SENTENCES_WHILE -> SENTENCE_WHILE .)
    ITERATIVE_DO    reduce using rule 70 (SENTENCES_WHILE -> SENTENCE_WHILE .)
    RKEY            reduce using rule 70 (SENTENCES_WHILE -> SENTENCE_WHILE .)
    COMENTLINE      reduce using rule 70 (SENTENCES_WHILE -> SENTENCE_WHILE .)
    COMENTMULTYLINE reduce using rule 70 (SENTENCES_WHILE -> SENTENCE_WHILE .)
    BREAK           reduce using rule 70 (SENTENCES_WHILE -> SENTENCE_WHILE .)
    CONTINUE        reduce using rule 70 (SENTENCES_WHILE -> SENTENCE_WHILE .)
    METHOD_RETURN   reduce using rule 70 (SENTENCES_WHILE -> SENTENCE_WHILE .)
    ID              reduce using rule 70 (SENTENCES_WHILE -> SENTENCE_WHILE .)
    TYPE_INT        reduce using rule 70 (SENTENCES_WHILE -> SENTENCE_WHILE .)
    TYPE_DOUBLE     reduce using rule 70 (SENTENCES_WHILE -> SENTENCE_WHILE .)
    TYPE_STRING     reduce using rule 70 (SENTENCES_WHILE -> SENTENCE_WHILE .)
    TYPE_CHAR       reduce using rule 70 (SENTENCES_WHILE -> SENTENCE_WHILE .)
    TYPE_BOOL       reduce using rule 70 (SENTENCES_WHILE -> SENTENCE_WHILE .)
    CONDITIONAL_IF  reduce using rule 70 (SENTENCES_WHILE -> SENTENCE_WHILE .)


state 176

    (76) SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_METHOD RKEY . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA

    ITERATIVE_WHILE shift and go to state 233


state 177

    (25) SENTENCES_METHOD -> SENTENCES_METHOD SENTENCE_METHOD .

    RKEY            reduce using rule 25 (SENTENCES_METHOD -> SENTENCES_METHOD SENTENCE_METHOD .)
    COMENTLINE      reduce using rule 25 (SENTENCES_METHOD -> SENTENCES_METHOD SENTENCE_METHOD .)
    COMENTMULTYLINE reduce using rule 25 (SENTENCES_METHOD -> SENTENCES_METHOD SENTENCE_METHOD .)
    BREAK           reduce using rule 25 (SENTENCES_METHOD -> SENTENCES_METHOD SENTENCE_METHOD .)
    CONTINUE        reduce using rule 25 (SENTENCES_METHOD -> SENTENCES_METHOD SENTENCE_METHOD .)
    METHOD_RETURN   reduce using rule 25 (SENTENCES_METHOD -> SENTENCES_METHOD SENTENCE_METHOD .)
    ID              reduce using rule 25 (SENTENCES_METHOD -> SENTENCES_METHOD SENTENCE_METHOD .)
    TYPE_INT        reduce using rule 25 (SENTENCES_METHOD -> SENTENCES_METHOD SENTENCE_METHOD .)
    TYPE_DOUBLE     reduce using rule 25 (SENTENCES_METHOD -> SENTENCES_METHOD SENTENCE_METHOD .)
    TYPE_STRING     reduce using rule 25 (SENTENCES_METHOD -> SENTENCES_METHOD SENTENCE_METHOD .)
    TYPE_CHAR       reduce using rule 25 (SENTENCES_METHOD -> SENTENCES_METHOD SENTENCE_METHOD .)
    TYPE_BOOL       reduce using rule 25 (SENTENCES_METHOD -> SENTENCES_METHOD SENTENCE_METHOD .)
    CONDITIONAL_IF  reduce using rule 25 (SENTENCES_METHOD -> SENTENCES_METHOD SENTENCE_METHOD .)
    ITERATIVE_WHILE reduce using rule 25 (SENTENCES_METHOD -> SENTENCES_METHOD SENTENCE_METHOD .)
    ITERATIVE_DO    reduce using rule 25 (SENTENCES_METHOD -> SENTENCES_METHOD SENTENCE_METHOD .)


state 178

    (27) SENTENCE_METHOD -> DECLARATIONS .
    (100) DECLARATIONS -> DECLARATIONS . DECLARATION
    (102) DECLARATION -> . TYPE_INT ID IQUAL INT DOT_AN_DCOMMA
    (103) DECLARATION -> . TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA
    (104) DECLARATION -> . TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA
    (105) DECLARATION -> . TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA
    (106) DECLARATION -> . TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA

  ! shift/reduce conflict for TYPE_INT resolved as shift
  ! shift/reduce conflict for TYPE_DOUBLE resolved as shift
  ! shift/reduce conflict for TYPE_STRING resolved as shift
  ! shift/reduce conflict for TYPE_CHAR resolved as shift
  ! shift/reduce conflict for TYPE_BOOL resolved as shift
    RKEY            reduce using rule 27 (SENTENCE_METHOD -> DECLARATIONS .)
    COMENTLINE      reduce using rule 27 (SENTENCE_METHOD -> DECLARATIONS .)
    COMENTMULTYLINE reduce using rule 27 (SENTENCE_METHOD -> DECLARATIONS .)
    BREAK           reduce using rule 27 (SENTENCE_METHOD -> DECLARATIONS .)
    CONTINUE        reduce using rule 27 (SENTENCE_METHOD -> DECLARATIONS .)
    METHOD_RETURN   reduce using rule 27 (SENTENCE_METHOD -> DECLARATIONS .)
    ID              reduce using rule 27 (SENTENCE_METHOD -> DECLARATIONS .)
    CONDITIONAL_IF  reduce using rule 27 (SENTENCE_METHOD -> DECLARATIONS .)
    ITERATIVE_WHILE reduce using rule 27 (SENTENCE_METHOD -> DECLARATIONS .)
    ITERATIVE_DO    reduce using rule 27 (SENTENCE_METHOD -> DECLARATIONS .)
    TYPE_INT        shift and go to state 40
    TYPE_DOUBLE     shift and go to state 41
    TYPE_STRING     shift and go to state 42
    TYPE_CHAR       shift and go to state 43
    TYPE_BOOL       shift and go to state 44

  ! TYPE_INT        [ reduce using rule 27 (SENTENCE_METHOD -> DECLARATIONS .) ]
  ! TYPE_DOUBLE     [ reduce using rule 27 (SENTENCE_METHOD -> DECLARATIONS .) ]
  ! TYPE_STRING     [ reduce using rule 27 (SENTENCE_METHOD -> DECLARATIONS .) ]
  ! TYPE_CHAR       [ reduce using rule 27 (SENTENCE_METHOD -> DECLARATIONS .) ]
  ! TYPE_BOOL       [ reduce using rule 27 (SENTENCE_METHOD -> DECLARATIONS .) ]

    DECLARATION                    shift and go to state 58

state 179

    (28) SENTENCE_METHOD -> ASSIGNMENTS .
    (107) ASSIGNMENTS -> ASSIGNMENTS . ASSIGNMENT
    (109) ASSIGNMENT -> . ID IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> . ID IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> . ID IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> . ID IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> . ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> . ID IQUAL EXPRESSIONS DOT_AN_DCOMMA

  ! shift/reduce conflict for ID resolved as shift
    RKEY            reduce using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
    COMENTLINE      reduce using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
    COMENTMULTYLINE reduce using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
    BREAK           reduce using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
    CONTINUE        reduce using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
    METHOD_RETURN   reduce using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
    TYPE_INT        reduce using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
    TYPE_DOUBLE     reduce using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
    TYPE_STRING     reduce using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
    TYPE_CHAR       reduce using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
    TYPE_BOOL       reduce using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
    CONDITIONAL_IF  reduce using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
    ITERATIVE_WHILE reduce using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
    ITERATIVE_DO    reduce using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .)
    ID              shift and go to state 60

  ! ID              [ reduce using rule 28 (SENTENCE_METHOD -> ASSIGNMENTS .) ]

    ASSIGNMENT                     shift and go to state 59

state 180

    (29) SENTENCE_METHOD -> SENTENCES_IF .
    (61) SENTENCES_IF -> SENTENCES_IF . SENTENCE_IF
    (63) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY

  ! shift/reduce conflict for CONDITIONAL_IF resolved as shift
    RKEY            reduce using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
    COMENTLINE      reduce using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
    COMENTMULTYLINE reduce using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
    BREAK           reduce using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
    CONTINUE        reduce using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
    METHOD_RETURN   reduce using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
    ID              reduce using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
    TYPE_INT        reduce using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
    TYPE_DOUBLE     reduce using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
    TYPE_STRING     reduce using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
    TYPE_CHAR       reduce using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
    TYPE_BOOL       reduce using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
    ITERATIVE_WHILE reduce using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
    ITERATIVE_DO    reduce using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .)
    CONDITIONAL_IF  shift and go to state 28

  ! CONDITIONAL_IF  [ reduce using rule 29 (SENTENCE_METHOD -> SENTENCES_IF .) ]

    SENTENCE_IF                    shift and go to state 191

state 181

    (30) SENTENCE_METHOD -> SENTENCES_WHILE .
    (69) SENTENCES_WHILE -> SENTENCES_WHILE . SENTENCE_WHILE
    (71) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (72) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (73) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (74) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (75) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (76) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA

  ! shift/reduce conflict for ITERATIVE_WHILE resolved as shift
  ! shift/reduce conflict for ITERATIVE_DO resolved as shift
    RKEY            reduce using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
    COMENTLINE      reduce using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
    COMENTMULTYLINE reduce using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
    BREAK           reduce using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
    CONTINUE        reduce using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
    METHOD_RETURN   reduce using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
    ID              reduce using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
    TYPE_INT        reduce using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
    TYPE_DOUBLE     reduce using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
    TYPE_STRING     reduce using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
    TYPE_CHAR       reduce using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
    TYPE_BOOL       reduce using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
    CONDITIONAL_IF  reduce using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .)
    ITERATIVE_WHILE shift and go to state 29
    ITERATIVE_DO    shift and go to state 30

  ! ITERATIVE_WHILE [ reduce using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .) ]
  ! ITERATIVE_DO    [ reduce using rule 30 (SENTENCE_METHOD -> SENTENCES_WHILE .) ]

    SENTENCE_WHILE                 shift and go to state 192

state 182

    (31) SENTENCE_METHOD -> COMENTLINE .

    RKEY            reduce using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
    COMENTLINE      reduce using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
    COMENTMULTYLINE reduce using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
    BREAK           reduce using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
    CONTINUE        reduce using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
    METHOD_RETURN   reduce using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
    ID              reduce using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
    TYPE_INT        reduce using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
    TYPE_DOUBLE     reduce using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
    TYPE_STRING     reduce using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
    TYPE_CHAR       reduce using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
    TYPE_BOOL       reduce using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
    CONDITIONAL_IF  reduce using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
    ITERATIVE_WHILE reduce using rule 31 (SENTENCE_METHOD -> COMENTLINE .)
    ITERATIVE_DO    reduce using rule 31 (SENTENCE_METHOD -> COMENTLINE .)


state 183

    (32) SENTENCE_METHOD -> COMENTMULTYLINE .

    RKEY            reduce using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
    COMENTLINE      reduce using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
    COMENTMULTYLINE reduce using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
    BREAK           reduce using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
    CONTINUE        reduce using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
    METHOD_RETURN   reduce using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
    ID              reduce using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
    TYPE_INT        reduce using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
    TYPE_DOUBLE     reduce using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
    TYPE_STRING     reduce using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
    TYPE_CHAR       reduce using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
    TYPE_BOOL       reduce using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
    CONDITIONAL_IF  reduce using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
    ITERATIVE_WHILE reduce using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)
    ITERATIVE_DO    reduce using rule 32 (SENTENCE_METHOD -> COMENTMULTYLINE .)


state 184

    (33) SENTENCE_METHOD -> BREAK . DOT_AN_DCOMMA

    DOT_AN_DCOMMA   shift and go to state 234


state 185

    (34) SENTENCE_METHOD -> CONTINUE . DOT_AN_DCOMMA

    DOT_AN_DCOMMA   shift and go to state 235


state 186

    (35) SENTENCE_METHOD -> METHOD_RETURN . DOT_AN_DCOMMA

    DOT_AN_DCOMMA   shift and go to state 194


state 187

    (36) SENTENCE_METHOD -> ID . LPAREN CALLS RPAREN
    (109) ASSIGNMENT -> ID . IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> ID . IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> ID . IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> ID . IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> ID . IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> ID . IQUAL EXPRESSIONS DOT_AN_DCOMMA

    LPAREN          shift and go to state 236
    IQUAL           shift and go to state 47


state 188

    (58) SENTENCE -> BREAK DOT_AN_DCOMMA .
    (45) SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .
    (33) SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .

  ! reduce/reduce conflict for RKEY resolved using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for COMENTLINE resolved using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for COMENTMULTYLINE resolved using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for BREAK resolved using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for ID resolved using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for TYPE_INT resolved using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for TYPE_DOUBLE resolved using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for TYPE_STRING resolved using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for TYPE_CHAR resolved using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for TYPE_BOOL resolved using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for CONDITIONAL_IF resolved using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for ITERATIVE_WHILE resolved using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for ITERATIVE_DO resolved using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for RKEY resolved using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for COMENTLINE resolved using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for COMENTMULTYLINE resolved using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for BREAK resolved using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for METHOD_RETURN resolved using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for ID resolved using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for TYPE_INT resolved using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for TYPE_DOUBLE resolved using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for TYPE_STRING resolved using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for TYPE_CHAR resolved using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for TYPE_BOOL resolved using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for CONDITIONAL_IF resolved using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for ITERATIVE_WHILE resolved using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for ITERATIVE_DO resolved using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
    RKEY            reduce using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
    COMENTLINE      reduce using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
    COMENTMULTYLINE reduce using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
    BREAK           reduce using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
    CONTINUE        reduce using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
    METHOD_RETURN   reduce using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
    ID              reduce using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
    TYPE_INT        reduce using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
    TYPE_DOUBLE     reduce using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
    TYPE_STRING     reduce using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
    TYPE_CHAR       reduce using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
    TYPE_BOOL       reduce using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
    CONDITIONAL_IF  reduce using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
    ITERATIVE_WHILE reduce using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
    ITERATIVE_DO    reduce using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)

  ! RKEY            [ reduce using rule 58 (SENTENCE -> BREAK DOT_AN_DCOMMA .) ]
  ! COMENTLINE      [ reduce using rule 58 (SENTENCE -> BREAK DOT_AN_DCOMMA .) ]
  ! COMENTMULTYLINE [ reduce using rule 58 (SENTENCE -> BREAK DOT_AN_DCOMMA .) ]
  ! BREAK           [ reduce using rule 58 (SENTENCE -> BREAK DOT_AN_DCOMMA .) ]
  ! CONTINUE        [ reduce using rule 58 (SENTENCE -> BREAK DOT_AN_DCOMMA .) ]
  ! ID              [ reduce using rule 58 (SENTENCE -> BREAK DOT_AN_DCOMMA .) ]
  ! CONDITIONAL_IF  [ reduce using rule 58 (SENTENCE -> BREAK DOT_AN_DCOMMA .) ]
  ! ITERATIVE_WHILE [ reduce using rule 58 (SENTENCE -> BREAK DOT_AN_DCOMMA .) ]
  ! ITERATIVE_DO    [ reduce using rule 58 (SENTENCE -> BREAK DOT_AN_DCOMMA .) ]
  ! TYPE_INT        [ reduce using rule 58 (SENTENCE -> BREAK DOT_AN_DCOMMA .) ]
  ! TYPE_DOUBLE     [ reduce using rule 58 (SENTENCE -> BREAK DOT_AN_DCOMMA .) ]
  ! TYPE_STRING     [ reduce using rule 58 (SENTENCE -> BREAK DOT_AN_DCOMMA .) ]
  ! TYPE_CHAR       [ reduce using rule 58 (SENTENCE -> BREAK DOT_AN_DCOMMA .) ]
  ! TYPE_BOOL       [ reduce using rule 58 (SENTENCE -> BREAK DOT_AN_DCOMMA .) ]
  ! RKEY            [ reduce using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .) ]
  ! COMENTLINE      [ reduce using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .) ]
  ! COMENTMULTYLINE [ reduce using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .) ]
  ! BREAK           [ reduce using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .) ]
  ! CONTINUE        [ reduce using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .) ]
  ! METHOD_RETURN   [ reduce using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .) ]
  ! ID              [ reduce using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .) ]
  ! TYPE_INT        [ reduce using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .) ]
  ! TYPE_DOUBLE     [ reduce using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .) ]
  ! TYPE_STRING     [ reduce using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .) ]
  ! TYPE_CHAR       [ reduce using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .) ]
  ! TYPE_BOOL       [ reduce using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .) ]
  ! CONDITIONAL_IF  [ reduce using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .) ]
  ! ITERATIVE_WHILE [ reduce using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .) ]
  ! ITERATIVE_DO    [ reduce using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .) ]


state 189

    (59) SENTENCE -> CONTINUE DOT_AN_DCOMMA .
    (46) SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .
    (34) SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .

  ! reduce/reduce conflict for RKEY resolved using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for COMENTLINE resolved using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for COMENTMULTYLINE resolved using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for BREAK resolved using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for ID resolved using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for TYPE_INT resolved using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for TYPE_DOUBLE resolved using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for TYPE_STRING resolved using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for TYPE_CHAR resolved using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for TYPE_BOOL resolved using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for CONDITIONAL_IF resolved using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for ITERATIVE_WHILE resolved using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for ITERATIVE_DO resolved using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for RKEY resolved using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for COMENTLINE resolved using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for COMENTMULTYLINE resolved using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for BREAK resolved using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for METHOD_RETURN resolved using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for ID resolved using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for TYPE_INT resolved using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for TYPE_DOUBLE resolved using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for TYPE_STRING resolved using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for TYPE_CHAR resolved using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for TYPE_BOOL resolved using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for CONDITIONAL_IF resolved using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for ITERATIVE_WHILE resolved using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
  ! reduce/reduce conflict for ITERATIVE_DO resolved using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
    RKEY            reduce using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
    COMENTLINE      reduce using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
    COMENTMULTYLINE reduce using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
    BREAK           reduce using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
    CONTINUE        reduce using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
    METHOD_RETURN   reduce using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
    ID              reduce using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
    TYPE_INT        reduce using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
    TYPE_DOUBLE     reduce using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
    TYPE_STRING     reduce using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
    TYPE_CHAR       reduce using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
    TYPE_BOOL       reduce using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
    CONDITIONAL_IF  reduce using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
    ITERATIVE_WHILE reduce using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
    ITERATIVE_DO    reduce using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)

  ! RKEY            [ reduce using rule 59 (SENTENCE -> CONTINUE DOT_AN_DCOMMA .) ]
  ! COMENTLINE      [ reduce using rule 59 (SENTENCE -> CONTINUE DOT_AN_DCOMMA .) ]
  ! COMENTMULTYLINE [ reduce using rule 59 (SENTENCE -> CONTINUE DOT_AN_DCOMMA .) ]
  ! BREAK           [ reduce using rule 59 (SENTENCE -> CONTINUE DOT_AN_DCOMMA .) ]
  ! CONTINUE        [ reduce using rule 59 (SENTENCE -> CONTINUE DOT_AN_DCOMMA .) ]
  ! ID              [ reduce using rule 59 (SENTENCE -> CONTINUE DOT_AN_DCOMMA .) ]
  ! CONDITIONAL_IF  [ reduce using rule 59 (SENTENCE -> CONTINUE DOT_AN_DCOMMA .) ]
  ! ITERATIVE_WHILE [ reduce using rule 59 (SENTENCE -> CONTINUE DOT_AN_DCOMMA .) ]
  ! ITERATIVE_DO    [ reduce using rule 59 (SENTENCE -> CONTINUE DOT_AN_DCOMMA .) ]
  ! TYPE_INT        [ reduce using rule 59 (SENTENCE -> CONTINUE DOT_AN_DCOMMA .) ]
  ! TYPE_DOUBLE     [ reduce using rule 59 (SENTENCE -> CONTINUE DOT_AN_DCOMMA .) ]
  ! TYPE_STRING     [ reduce using rule 59 (SENTENCE -> CONTINUE DOT_AN_DCOMMA .) ]
  ! TYPE_CHAR       [ reduce using rule 59 (SENTENCE -> CONTINUE DOT_AN_DCOMMA .) ]
  ! TYPE_BOOL       [ reduce using rule 59 (SENTENCE -> CONTINUE DOT_AN_DCOMMA .) ]
  ! RKEY            [ reduce using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .) ]
  ! COMENTLINE      [ reduce using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .) ]
  ! COMENTMULTYLINE [ reduce using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .) ]
  ! BREAK           [ reduce using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .) ]
  ! CONTINUE        [ reduce using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .) ]
  ! METHOD_RETURN   [ reduce using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .) ]
  ! ID              [ reduce using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .) ]
  ! TYPE_INT        [ reduce using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .) ]
  ! TYPE_DOUBLE     [ reduce using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .) ]
  ! TYPE_STRING     [ reduce using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .) ]
  ! TYPE_CHAR       [ reduce using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .) ]
  ! TYPE_BOOL       [ reduce using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .) ]
  ! CONDITIONAL_IF  [ reduce using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .) ]
  ! ITERATIVE_WHILE [ reduce using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .) ]
  ! ITERATIVE_DO    [ reduce using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .) ]


state 190

    (60) SENTENCE -> ID LPAREN . CALLS RPAREN
    (49) SENTENCE_FUNTION -> ID LPAREN . CALLS RPAREN
    (36) SENTENCE_METHOD -> ID LPAREN . CALLS RPAREN
    (122) CALLS -> . CALLS COMMA CALL
    (123) CALLS -> . CALL
    (124) CALL -> . TYPE_DATO
    (125) CALL -> . ID
    (126) TYPE_DATO -> . INT
    (127) TYPE_DATO -> . FLOAT
    (128) TYPE_DATO -> . STRING
    (129) TYPE_DATO -> . CHAR
    (130) TYPE_DATO -> . DATA_BOOL

    ID              shift and go to state 73
    INT             shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    CHAR            shift and go to state 80
    DATA_BOOL       shift and go to state 81

    CALLS                          shift and go to state 237
    CALL                           shift and go to state 75
    TYPE_DATO                      shift and go to state 76

state 191

    (61) SENTENCES_IF -> SENTENCES_IF SENTENCE_IF .

    CONDITIONAL_IF  reduce using rule 61 (SENTENCES_IF -> SENTENCES_IF SENTENCE_IF .)
    RKEY            reduce using rule 61 (SENTENCES_IF -> SENTENCES_IF SENTENCE_IF .)
    COMENTLINE      reduce using rule 61 (SENTENCES_IF -> SENTENCES_IF SENTENCE_IF .)
    COMENTMULTYLINE reduce using rule 61 (SENTENCES_IF -> SENTENCES_IF SENTENCE_IF .)
    BREAK           reduce using rule 61 (SENTENCES_IF -> SENTENCES_IF SENTENCE_IF .)
    CONTINUE        reduce using rule 61 (SENTENCES_IF -> SENTENCES_IF SENTENCE_IF .)
    METHOD_RETURN   reduce using rule 61 (SENTENCES_IF -> SENTENCES_IF SENTENCE_IF .)
    ID              reduce using rule 61 (SENTENCES_IF -> SENTENCES_IF SENTENCE_IF .)
    TYPE_INT        reduce using rule 61 (SENTENCES_IF -> SENTENCES_IF SENTENCE_IF .)
    TYPE_DOUBLE     reduce using rule 61 (SENTENCES_IF -> SENTENCES_IF SENTENCE_IF .)
    TYPE_STRING     reduce using rule 61 (SENTENCES_IF -> SENTENCES_IF SENTENCE_IF .)
    TYPE_CHAR       reduce using rule 61 (SENTENCES_IF -> SENTENCES_IF SENTENCE_IF .)
    TYPE_BOOL       reduce using rule 61 (SENTENCES_IF -> SENTENCES_IF SENTENCE_IF .)
    ITERATIVE_WHILE reduce using rule 61 (SENTENCES_IF -> SENTENCES_IF SENTENCE_IF .)
    ITERATIVE_DO    reduce using rule 61 (SENTENCES_IF -> SENTENCES_IF SENTENCE_IF .)


state 192

    (69) SENTENCES_WHILE -> SENTENCES_WHILE SENTENCE_WHILE .

    ITERATIVE_WHILE reduce using rule 69 (SENTENCES_WHILE -> SENTENCES_WHILE SENTENCE_WHILE .)
    ITERATIVE_DO    reduce using rule 69 (SENTENCES_WHILE -> SENTENCES_WHILE SENTENCE_WHILE .)
    RKEY            reduce using rule 69 (SENTENCES_WHILE -> SENTENCES_WHILE SENTENCE_WHILE .)
    COMENTLINE      reduce using rule 69 (SENTENCES_WHILE -> SENTENCES_WHILE SENTENCE_WHILE .)
    COMENTMULTYLINE reduce using rule 69 (SENTENCES_WHILE -> SENTENCES_WHILE SENTENCE_WHILE .)
    BREAK           reduce using rule 69 (SENTENCES_WHILE -> SENTENCES_WHILE SENTENCE_WHILE .)
    CONTINUE        reduce using rule 69 (SENTENCES_WHILE -> SENTENCES_WHILE SENTENCE_WHILE .)
    METHOD_RETURN   reduce using rule 69 (SENTENCES_WHILE -> SENTENCES_WHILE SENTENCE_WHILE .)
    ID              reduce using rule 69 (SENTENCES_WHILE -> SENTENCES_WHILE SENTENCE_WHILE .)
    TYPE_INT        reduce using rule 69 (SENTENCES_WHILE -> SENTENCES_WHILE SENTENCE_WHILE .)
    TYPE_DOUBLE     reduce using rule 69 (SENTENCES_WHILE -> SENTENCES_WHILE SENTENCE_WHILE .)
    TYPE_STRING     reduce using rule 69 (SENTENCES_WHILE -> SENTENCES_WHILE SENTENCE_WHILE .)
    TYPE_CHAR       reduce using rule 69 (SENTENCES_WHILE -> SENTENCES_WHILE SENTENCE_WHILE .)
    TYPE_BOOL       reduce using rule 69 (SENTENCES_WHILE -> SENTENCES_WHILE SENTENCE_WHILE .)
    CONDITIONAL_IF  reduce using rule 69 (SENTENCES_WHILE -> SENTENCES_WHILE SENTENCE_WHILE .)


state 193

    (47) SENTENCE_FUNTION -> METHOD_RETURN TYPE_DATO . DOT_AN_DCOMMA

    DOT_AN_DCOMMA   shift and go to state 238


state 194

    (35) SENTENCE_METHOD -> METHOD_RETURN DOT_AN_DCOMMA .

    RKEY            reduce using rule 35 (SENTENCE_METHOD -> METHOD_RETURN DOT_AN_DCOMMA .)
    COMENTLINE      reduce using rule 35 (SENTENCE_METHOD -> METHOD_RETURN DOT_AN_DCOMMA .)
    COMENTMULTYLINE reduce using rule 35 (SENTENCE_METHOD -> METHOD_RETURN DOT_AN_DCOMMA .)
    BREAK           reduce using rule 35 (SENTENCE_METHOD -> METHOD_RETURN DOT_AN_DCOMMA .)
    CONTINUE        reduce using rule 35 (SENTENCE_METHOD -> METHOD_RETURN DOT_AN_DCOMMA .)
    METHOD_RETURN   reduce using rule 35 (SENTENCE_METHOD -> METHOD_RETURN DOT_AN_DCOMMA .)
    ID              reduce using rule 35 (SENTENCE_METHOD -> METHOD_RETURN DOT_AN_DCOMMA .)
    TYPE_INT        reduce using rule 35 (SENTENCE_METHOD -> METHOD_RETURN DOT_AN_DCOMMA .)
    TYPE_DOUBLE     reduce using rule 35 (SENTENCE_METHOD -> METHOD_RETURN DOT_AN_DCOMMA .)
    TYPE_STRING     reduce using rule 35 (SENTENCE_METHOD -> METHOD_RETURN DOT_AN_DCOMMA .)
    TYPE_CHAR       reduce using rule 35 (SENTENCE_METHOD -> METHOD_RETURN DOT_AN_DCOMMA .)
    TYPE_BOOL       reduce using rule 35 (SENTENCE_METHOD -> METHOD_RETURN DOT_AN_DCOMMA .)
    CONDITIONAL_IF  reduce using rule 35 (SENTENCE_METHOD -> METHOD_RETURN DOT_AN_DCOMMA .)
    ITERATIVE_WHILE reduce using rule 35 (SENTENCE_METHOD -> METHOD_RETURN DOT_AN_DCOMMA .)
    ITERATIVE_DO    reduce using rule 35 (SENTENCE_METHOD -> METHOD_RETURN DOT_AN_DCOMMA .)


state 195

    (48) SENTENCE_FUNTION -> METHOD_RETURN ID . DOT_AN_DCOMMA

    DOT_AN_DCOMMA   shift and go to state 239


state 196

    (10) METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY . empty RKEY
    (11) METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY . SENTENCES_METHOD RKEY
    (131) empty -> .
    (25) SENTENCES_METHOD -> . SENTENCES_METHOD SENTENCE_METHOD
    (26) SENTENCES_METHOD -> . SENTENCE_METHOD
    (27) SENTENCE_METHOD -> . DECLARATIONS
    (28) SENTENCE_METHOD -> . ASSIGNMENTS
    (29) SENTENCE_METHOD -> . SENTENCES_IF
    (30) SENTENCE_METHOD -> . SENTENCES_WHILE
    (31) SENTENCE_METHOD -> . COMENTLINE
    (32) SENTENCE_METHOD -> . COMENTMULTYLINE
    (33) SENTENCE_METHOD -> . BREAK DOT_AN_DCOMMA
    (34) SENTENCE_METHOD -> . CONTINUE DOT_AN_DCOMMA
    (35) SENTENCE_METHOD -> . METHOD_RETURN DOT_AN_DCOMMA
    (36) SENTENCE_METHOD -> . ID LPAREN CALLS RPAREN
    (100) DECLARATIONS -> . DECLARATIONS DECLARATION
    (101) DECLARATIONS -> . DECLARATION
    (107) ASSIGNMENTS -> . ASSIGNMENTS ASSIGNMENT
    (108) ASSIGNMENTS -> . ASSIGNMENT
    (61) SENTENCES_IF -> . SENTENCES_IF SENTENCE_IF
    (62) SENTENCES_IF -> . SENTENCE_IF
    (69) SENTENCES_WHILE -> . SENTENCES_WHILE SENTENCE_WHILE
    (70) SENTENCES_WHILE -> . SENTENCE_WHILE
    (102) DECLARATION -> . TYPE_INT ID IQUAL INT DOT_AN_DCOMMA
    (103) DECLARATION -> . TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA
    (104) DECLARATION -> . TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA
    (105) DECLARATION -> . TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA
    (106) DECLARATION -> . TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (109) ASSIGNMENT -> . ID IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> . ID IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> . ID IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> . ID IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> . ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> . ID IQUAL EXPRESSIONS DOT_AN_DCOMMA
    (63) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY
    (71) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (72) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (73) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (74) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (75) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (76) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA

    RKEY            reduce using rule 131 (empty -> .)
    COMENTLINE      shift and go to state 182
    COMENTMULTYLINE shift and go to state 183
    BREAK           shift and go to state 184
    CONTINUE        shift and go to state 185
    METHOD_RETURN   shift and go to state 186
    ID              shift and go to state 187
    TYPE_INT        shift and go to state 40
    TYPE_DOUBLE     shift and go to state 41
    TYPE_STRING     shift and go to state 42
    TYPE_CHAR       shift and go to state 43
    TYPE_BOOL       shift and go to state 44
    CONDITIONAL_IF  shift and go to state 28
    ITERATIVE_WHILE shift and go to state 29
    ITERATIVE_DO    shift and go to state 30

    empty                          shift and go to state 240
    SENTENCES_METHOD               shift and go to state 241
    SENTENCE_METHOD                shift and go to state 107
    DECLARATIONS                   shift and go to state 178
    ASSIGNMENTS                    shift and go to state 179
    SENTENCES_IF                   shift and go to state 180
    SENTENCES_WHILE                shift and go to state 181
    DECLARATION                    shift and go to state 26
    ASSIGNMENT                     shift and go to state 27
    SENTENCE_IF                    shift and go to state 174
    SENTENCE_WHILE                 shift and go to state 175

state 197

    (12) METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN . LKEY empty RKEY
    (13) METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN . LKEY SENTENCES_METHOD RKEY

    LKEY            shift and go to state 242


state 198

    (115) L_PARAMS -> L_PARAMS COMMA . PARAM
    (117) PARAM -> . TYPE_INT ID
    (118) PARAM -> . TYPE_DOUBLE ID
    (119) PARAM -> . TYPE_STRING ID
    (120) PARAM -> . TYPE_CHAR ID
    (121) PARAM -> . TYPE_BOOL ID

    TYPE_INT        shift and go to state 123
    TYPE_DOUBLE     shift and go to state 124
    TYPE_STRING     shift and go to state 125
    TYPE_CHAR       shift and go to state 126
    TYPE_BOOL       shift and go to state 127

    PARAM                          shift and go to state 243

state 199

    (117) PARAM -> TYPE_INT ID .

    RPAREN          reduce using rule 117 (PARAM -> TYPE_INT ID .)
    COMMA           reduce using rule 117 (PARAM -> TYPE_INT ID .)


state 200

    (118) PARAM -> TYPE_DOUBLE ID .

    RPAREN          reduce using rule 118 (PARAM -> TYPE_DOUBLE ID .)
    COMMA           reduce using rule 118 (PARAM -> TYPE_DOUBLE ID .)


state 201

    (119) PARAM -> TYPE_STRING ID .

    RPAREN          reduce using rule 119 (PARAM -> TYPE_STRING ID .)
    COMMA           reduce using rule 119 (PARAM -> TYPE_STRING ID .)


state 202

    (120) PARAM -> TYPE_CHAR ID .

    RPAREN          reduce using rule 120 (PARAM -> TYPE_CHAR ID .)
    COMMA           reduce using rule 120 (PARAM -> TYPE_CHAR ID .)


state 203

    (121) PARAM -> TYPE_BOOL ID .

    RPAREN          reduce using rule 121 (PARAM -> TYPE_BOOL ID .)
    COMMA           reduce using rule 121 (PARAM -> TYPE_BOOL ID .)


state 204

    (122) CALLS -> CALLS COMMA CALL .

    RPAREN          reduce using rule 122 (CALLS -> CALLS COMMA CALL .)
    COMMA           reduce using rule 122 (CALLS -> CALLS COMMA CALL .)


state 205

    (93) E -> E PLUS E .
    (93) E -> E . PLUS E
    (94) E -> E . MINUS E
    (95) E -> E . TIMES E
    (96) E -> E . DIVIDE E
    (97) E -> E . REST E

    PLUS            reduce using rule 93 (E -> E PLUS E .)
    MINUS           reduce using rule 93 (E -> E PLUS E .)
    DOT_AN_DCOMMA   reduce using rule 93 (E -> E PLUS E .)
    ID              reduce using rule 93 (E -> E PLUS E .)
    INT             reduce using rule 93 (E -> E PLUS E .)
    FLOAT           reduce using rule 93 (E -> E PLUS E .)
    STRING          reduce using rule 93 (E -> E PLUS E .)
    CHAR            reduce using rule 93 (E -> E PLUS E .)
    DATA_BOOL       reduce using rule 93 (E -> E PLUS E .)
    IQUALS          reduce using rule 93 (E -> E PLUS E .)
    DIFFERENT       reduce using rule 93 (E -> E PLUS E .)
    IQUAL_GREATER   reduce using rule 93 (E -> E PLUS E .)
    IQUAL_LESS      reduce using rule 93 (E -> E PLUS E .)
    GREATER         reduce using rule 93 (E -> E PLUS E .)
    LESS            reduce using rule 93 (E -> E PLUS E .)
    AND             reduce using rule 93 (E -> E PLUS E .)
    OR              reduce using rule 93 (E -> E PLUS E .)
    NOT             reduce using rule 93 (E -> E PLUS E .)
    RPAREN          reduce using rule 93 (E -> E PLUS E .)
    TIMES           shift and go to state 139
    DIVIDE          shift and go to state 140
    REST            shift and go to state 141

  ! TIMES           [ reduce using rule 93 (E -> E PLUS E .) ]
  ! DIVIDE          [ reduce using rule 93 (E -> E PLUS E .) ]
  ! REST            [ reduce using rule 93 (E -> E PLUS E .) ]
  ! PLUS            [ shift and go to state 137 ]
  ! MINUS           [ shift and go to state 138 ]


state 206

    (94) E -> E MINUS E .
    (93) E -> E . PLUS E
    (94) E -> E . MINUS E
    (95) E -> E . TIMES E
    (96) E -> E . DIVIDE E
    (97) E -> E . REST E

    PLUS            reduce using rule 94 (E -> E MINUS E .)
    MINUS           reduce using rule 94 (E -> E MINUS E .)
    DOT_AN_DCOMMA   reduce using rule 94 (E -> E MINUS E .)
    ID              reduce using rule 94 (E -> E MINUS E .)
    INT             reduce using rule 94 (E -> E MINUS E .)
    FLOAT           reduce using rule 94 (E -> E MINUS E .)
    STRING          reduce using rule 94 (E -> E MINUS E .)
    CHAR            reduce using rule 94 (E -> E MINUS E .)
    DATA_BOOL       reduce using rule 94 (E -> E MINUS E .)
    IQUALS          reduce using rule 94 (E -> E MINUS E .)
    DIFFERENT       reduce using rule 94 (E -> E MINUS E .)
    IQUAL_GREATER   reduce using rule 94 (E -> E MINUS E .)
    IQUAL_LESS      reduce using rule 94 (E -> E MINUS E .)
    GREATER         reduce using rule 94 (E -> E MINUS E .)
    LESS            reduce using rule 94 (E -> E MINUS E .)
    AND             reduce using rule 94 (E -> E MINUS E .)
    OR              reduce using rule 94 (E -> E MINUS E .)
    NOT             reduce using rule 94 (E -> E MINUS E .)
    RPAREN          reduce using rule 94 (E -> E MINUS E .)
    TIMES           shift and go to state 139
    DIVIDE          shift and go to state 140
    REST            shift and go to state 141

  ! TIMES           [ reduce using rule 94 (E -> E MINUS E .) ]
  ! DIVIDE          [ reduce using rule 94 (E -> E MINUS E .) ]
  ! REST            [ reduce using rule 94 (E -> E MINUS E .) ]
  ! PLUS            [ shift and go to state 137 ]
  ! MINUS           [ shift and go to state 138 ]


state 207

    (95) E -> E TIMES E .
    (93) E -> E . PLUS E
    (94) E -> E . MINUS E
    (95) E -> E . TIMES E
    (96) E -> E . DIVIDE E
    (97) E -> E . REST E

    PLUS            reduce using rule 95 (E -> E TIMES E .)
    MINUS           reduce using rule 95 (E -> E TIMES E .)
    TIMES           reduce using rule 95 (E -> E TIMES E .)
    DIVIDE          reduce using rule 95 (E -> E TIMES E .)
    REST            reduce using rule 95 (E -> E TIMES E .)
    DOT_AN_DCOMMA   reduce using rule 95 (E -> E TIMES E .)
    ID              reduce using rule 95 (E -> E TIMES E .)
    INT             reduce using rule 95 (E -> E TIMES E .)
    FLOAT           reduce using rule 95 (E -> E TIMES E .)
    STRING          reduce using rule 95 (E -> E TIMES E .)
    CHAR            reduce using rule 95 (E -> E TIMES E .)
    DATA_BOOL       reduce using rule 95 (E -> E TIMES E .)
    IQUALS          reduce using rule 95 (E -> E TIMES E .)
    DIFFERENT       reduce using rule 95 (E -> E TIMES E .)
    IQUAL_GREATER   reduce using rule 95 (E -> E TIMES E .)
    IQUAL_LESS      reduce using rule 95 (E -> E TIMES E .)
    GREATER         reduce using rule 95 (E -> E TIMES E .)
    LESS            reduce using rule 95 (E -> E TIMES E .)
    AND             reduce using rule 95 (E -> E TIMES E .)
    OR              reduce using rule 95 (E -> E TIMES E .)
    NOT             reduce using rule 95 (E -> E TIMES E .)
    RPAREN          reduce using rule 95 (E -> E TIMES E .)

  ! PLUS            [ shift and go to state 137 ]
  ! MINUS           [ shift and go to state 138 ]
  ! TIMES           [ shift and go to state 139 ]
  ! DIVIDE          [ shift and go to state 140 ]
  ! REST            [ shift and go to state 141 ]


state 208

    (96) E -> E DIVIDE E .
    (93) E -> E . PLUS E
    (94) E -> E . MINUS E
    (95) E -> E . TIMES E
    (96) E -> E . DIVIDE E
    (97) E -> E . REST E

    PLUS            reduce using rule 96 (E -> E DIVIDE E .)
    MINUS           reduce using rule 96 (E -> E DIVIDE E .)
    TIMES           reduce using rule 96 (E -> E DIVIDE E .)
    DIVIDE          reduce using rule 96 (E -> E DIVIDE E .)
    REST            reduce using rule 96 (E -> E DIVIDE E .)
    DOT_AN_DCOMMA   reduce using rule 96 (E -> E DIVIDE E .)
    ID              reduce using rule 96 (E -> E DIVIDE E .)
    INT             reduce using rule 96 (E -> E DIVIDE E .)
    FLOAT           reduce using rule 96 (E -> E DIVIDE E .)
    STRING          reduce using rule 96 (E -> E DIVIDE E .)
    CHAR            reduce using rule 96 (E -> E DIVIDE E .)
    DATA_BOOL       reduce using rule 96 (E -> E DIVIDE E .)
    IQUALS          reduce using rule 96 (E -> E DIVIDE E .)
    DIFFERENT       reduce using rule 96 (E -> E DIVIDE E .)
    IQUAL_GREATER   reduce using rule 96 (E -> E DIVIDE E .)
    IQUAL_LESS      reduce using rule 96 (E -> E DIVIDE E .)
    GREATER         reduce using rule 96 (E -> E DIVIDE E .)
    LESS            reduce using rule 96 (E -> E DIVIDE E .)
    AND             reduce using rule 96 (E -> E DIVIDE E .)
    OR              reduce using rule 96 (E -> E DIVIDE E .)
    NOT             reduce using rule 96 (E -> E DIVIDE E .)
    RPAREN          reduce using rule 96 (E -> E DIVIDE E .)

  ! PLUS            [ shift and go to state 137 ]
  ! MINUS           [ shift and go to state 138 ]
  ! TIMES           [ shift and go to state 139 ]
  ! DIVIDE          [ shift and go to state 140 ]
  ! REST            [ shift and go to state 141 ]


state 209

    (97) E -> E REST E .
    (93) E -> E . PLUS E
    (94) E -> E . MINUS E
    (95) E -> E . TIMES E
    (96) E -> E . DIVIDE E
    (97) E -> E . REST E

    PLUS            reduce using rule 97 (E -> E REST E .)
    MINUS           reduce using rule 97 (E -> E REST E .)
    TIMES           reduce using rule 97 (E -> E REST E .)
    DIVIDE          reduce using rule 97 (E -> E REST E .)
    REST            reduce using rule 97 (E -> E REST E .)
    DOT_AN_DCOMMA   reduce using rule 97 (E -> E REST E .)
    ID              reduce using rule 97 (E -> E REST E .)
    INT             reduce using rule 97 (E -> E REST E .)
    FLOAT           reduce using rule 97 (E -> E REST E .)
    STRING          reduce using rule 97 (E -> E REST E .)
    CHAR            reduce using rule 97 (E -> E REST E .)
    DATA_BOOL       reduce using rule 97 (E -> E REST E .)
    IQUALS          reduce using rule 97 (E -> E REST E .)
    DIFFERENT       reduce using rule 97 (E -> E REST E .)
    IQUAL_GREATER   reduce using rule 97 (E -> E REST E .)
    IQUAL_LESS      reduce using rule 97 (E -> E REST E .)
    GREATER         reduce using rule 97 (E -> E REST E .)
    LESS            reduce using rule 97 (E -> E REST E .)
    AND             reduce using rule 97 (E -> E REST E .)
    OR              reduce using rule 97 (E -> E REST E .)
    NOT             reduce using rule 97 (E -> E REST E .)
    RPAREN          reduce using rule 97 (E -> E REST E .)

  ! PLUS            [ shift and go to state 137 ]
  ! MINUS           [ shift and go to state 138 ]
  ! TIMES           [ shift and go to state 139 ]
  ! DIVIDE          [ shift and go to state 140 ]
  ! REST            [ shift and go to state 141 ]


state 210

    (102) DECLARATION -> TYPE_INT ID IQUAL INT DOT_AN_DCOMMA .

    TYPE_INT        reduce using rule 102 (DECLARATION -> TYPE_INT ID IQUAL INT DOT_AN_DCOMMA .)
    TYPE_DOUBLE     reduce using rule 102 (DECLARATION -> TYPE_INT ID IQUAL INT DOT_AN_DCOMMA .)
    TYPE_STRING     reduce using rule 102 (DECLARATION -> TYPE_INT ID IQUAL INT DOT_AN_DCOMMA .)
    TYPE_CHAR       reduce using rule 102 (DECLARATION -> TYPE_INT ID IQUAL INT DOT_AN_DCOMMA .)
    TYPE_BOOL       reduce using rule 102 (DECLARATION -> TYPE_INT ID IQUAL INT DOT_AN_DCOMMA .)
    COMENTLINE      reduce using rule 102 (DECLARATION -> TYPE_INT ID IQUAL INT DOT_AN_DCOMMA .)
    COMENTMULTYLINE reduce using rule 102 (DECLARATION -> TYPE_INT ID IQUAL INT DOT_AN_DCOMMA .)
    BREAK           reduce using rule 102 (DECLARATION -> TYPE_INT ID IQUAL INT DOT_AN_DCOMMA .)
    CONTINUE        reduce using rule 102 (DECLARATION -> TYPE_INT ID IQUAL INT DOT_AN_DCOMMA .)
    ID              reduce using rule 102 (DECLARATION -> TYPE_INT ID IQUAL INT DOT_AN_DCOMMA .)
    CONDITIONAL_IF  reduce using rule 102 (DECLARATION -> TYPE_INT ID IQUAL INT DOT_AN_DCOMMA .)
    ITERATIVE_WHILE reduce using rule 102 (DECLARATION -> TYPE_INT ID IQUAL INT DOT_AN_DCOMMA .)
    ITERATIVE_DO    reduce using rule 102 (DECLARATION -> TYPE_INT ID IQUAL INT DOT_AN_DCOMMA .)
    METHOD_VOID     reduce using rule 102 (DECLARATION -> TYPE_INT ID IQUAL INT DOT_AN_DCOMMA .)
    $end            reduce using rule 102 (DECLARATION -> TYPE_INT ID IQUAL INT DOT_AN_DCOMMA .)
    RKEY            reduce using rule 102 (DECLARATION -> TYPE_INT ID IQUAL INT DOT_AN_DCOMMA .)
    METHOD_RETURN   reduce using rule 102 (DECLARATION -> TYPE_INT ID IQUAL INT DOT_AN_DCOMMA .)


state 211

    (21) COUPLER -> ID LPAREN RPAREN LKEY . empty RKEY
    (22) COUPLER -> ID LPAREN RPAREN LKEY . SENTENCES_FUNTION RKEY
    (131) empty -> .
    (37) SENTENCES_FUNTION -> . SENTENCES_FUNTION SENTENCE_FUNTION
    (38) SENTENCES_FUNTION -> . SENTENCE_FUNTION
    (39) SENTENCE_FUNTION -> . DECLARATIONS
    (40) SENTENCE_FUNTION -> . ASSIGNMENTS
    (41) SENTENCE_FUNTION -> . SENTENCES_IF
    (42) SENTENCE_FUNTION -> . SENTENCES_WHILE
    (43) SENTENCE_FUNTION -> . COMENTLINE
    (44) SENTENCE_FUNTION -> . COMENTMULTYLINE
    (45) SENTENCE_FUNTION -> . BREAK DOT_AN_DCOMMA
    (46) SENTENCE_FUNTION -> . CONTINUE DOT_AN_DCOMMA
    (47) SENTENCE_FUNTION -> . METHOD_RETURN TYPE_DATO DOT_AN_DCOMMA
    (48) SENTENCE_FUNTION -> . METHOD_RETURN ID DOT_AN_DCOMMA
    (49) SENTENCE_FUNTION -> . ID LPAREN CALLS RPAREN
    (100) DECLARATIONS -> . DECLARATIONS DECLARATION
    (101) DECLARATIONS -> . DECLARATION
    (107) ASSIGNMENTS -> . ASSIGNMENTS ASSIGNMENT
    (108) ASSIGNMENTS -> . ASSIGNMENT
    (61) SENTENCES_IF -> . SENTENCES_IF SENTENCE_IF
    (62) SENTENCES_IF -> . SENTENCE_IF
    (69) SENTENCES_WHILE -> . SENTENCES_WHILE SENTENCE_WHILE
    (70) SENTENCES_WHILE -> . SENTENCE_WHILE
    (102) DECLARATION -> . TYPE_INT ID IQUAL INT DOT_AN_DCOMMA
    (103) DECLARATION -> . TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA
    (104) DECLARATION -> . TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA
    (105) DECLARATION -> . TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA
    (106) DECLARATION -> . TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (109) ASSIGNMENT -> . ID IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> . ID IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> . ID IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> . ID IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> . ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> . ID IQUAL EXPRESSIONS DOT_AN_DCOMMA
    (63) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY
    (71) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (72) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (73) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (74) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (75) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (76) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA

    RKEY            reduce using rule 131 (empty -> .)
    COMENTLINE      shift and go to state 168
    COMENTMULTYLINE shift and go to state 169
    BREAK           shift and go to state 170
    CONTINUE        shift and go to state 171
    METHOD_RETURN   shift and go to state 172
    ID              shift and go to state 173
    TYPE_INT        shift and go to state 40
    TYPE_DOUBLE     shift and go to state 41
    TYPE_STRING     shift and go to state 42
    TYPE_CHAR       shift and go to state 43
    TYPE_BOOL       shift and go to state 44
    CONDITIONAL_IF  shift and go to state 28
    ITERATIVE_WHILE shift and go to state 29
    ITERATIVE_DO    shift and go to state 30

    empty                          shift and go to state 244
    SENTENCES_FUNTION              shift and go to state 245
    SENTENCE_FUNTION               shift and go to state 106
    DECLARATIONS                   shift and go to state 164
    ASSIGNMENTS                    shift and go to state 165
    SENTENCES_IF                   shift and go to state 166
    SENTENCES_WHILE                shift and go to state 167
    DECLARATION                    shift and go to state 26
    ASSIGNMENT                     shift and go to state 27
    SENTENCE_IF                    shift and go to state 174
    SENTENCE_WHILE                 shift and go to state 175

state 212

    (23) COUPLER -> ID LPAREN L_PARAMS RPAREN . LKEY empty RKEY
    (24) COUPLER -> ID LPAREN L_PARAMS RPAREN . LKEY SENTENCES_FUNTION RKEY

    LKEY            shift and go to state 246


state 213

    (103) DECLARATION -> TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA .

    TYPE_INT        reduce using rule 103 (DECLARATION -> TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA .)
    TYPE_DOUBLE     reduce using rule 103 (DECLARATION -> TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA .)
    TYPE_STRING     reduce using rule 103 (DECLARATION -> TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA .)
    TYPE_CHAR       reduce using rule 103 (DECLARATION -> TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA .)
    TYPE_BOOL       reduce using rule 103 (DECLARATION -> TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA .)
    COMENTLINE      reduce using rule 103 (DECLARATION -> TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA .)
    COMENTMULTYLINE reduce using rule 103 (DECLARATION -> TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA .)
    BREAK           reduce using rule 103 (DECLARATION -> TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA .)
    CONTINUE        reduce using rule 103 (DECLARATION -> TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA .)
    ID              reduce using rule 103 (DECLARATION -> TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA .)
    CONDITIONAL_IF  reduce using rule 103 (DECLARATION -> TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA .)
    ITERATIVE_WHILE reduce using rule 103 (DECLARATION -> TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA .)
    ITERATIVE_DO    reduce using rule 103 (DECLARATION -> TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA .)
    METHOD_VOID     reduce using rule 103 (DECLARATION -> TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA .)
    $end            reduce using rule 103 (DECLARATION -> TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA .)
    RKEY            reduce using rule 103 (DECLARATION -> TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA .)
    METHOD_RETURN   reduce using rule 103 (DECLARATION -> TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA .)


state 214

    (104) DECLARATION -> TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA .

    TYPE_INT        reduce using rule 104 (DECLARATION -> TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA .)
    TYPE_DOUBLE     reduce using rule 104 (DECLARATION -> TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA .)
    TYPE_STRING     reduce using rule 104 (DECLARATION -> TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA .)
    TYPE_CHAR       reduce using rule 104 (DECLARATION -> TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA .)
    TYPE_BOOL       reduce using rule 104 (DECLARATION -> TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA .)
    COMENTLINE      reduce using rule 104 (DECLARATION -> TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA .)
    COMENTMULTYLINE reduce using rule 104 (DECLARATION -> TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA .)
    BREAK           reduce using rule 104 (DECLARATION -> TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA .)
    CONTINUE        reduce using rule 104 (DECLARATION -> TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA .)
    ID              reduce using rule 104 (DECLARATION -> TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA .)
    CONDITIONAL_IF  reduce using rule 104 (DECLARATION -> TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA .)
    ITERATIVE_WHILE reduce using rule 104 (DECLARATION -> TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA .)
    ITERATIVE_DO    reduce using rule 104 (DECLARATION -> TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA .)
    METHOD_VOID     reduce using rule 104 (DECLARATION -> TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA .)
    $end            reduce using rule 104 (DECLARATION -> TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA .)
    RKEY            reduce using rule 104 (DECLARATION -> TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA .)
    METHOD_RETURN   reduce using rule 104 (DECLARATION -> TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA .)


state 215

    (105) DECLARATION -> TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA .

    TYPE_INT        reduce using rule 105 (DECLARATION -> TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA .)
    TYPE_DOUBLE     reduce using rule 105 (DECLARATION -> TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA .)
    TYPE_STRING     reduce using rule 105 (DECLARATION -> TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA .)
    TYPE_CHAR       reduce using rule 105 (DECLARATION -> TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA .)
    TYPE_BOOL       reduce using rule 105 (DECLARATION -> TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA .)
    COMENTLINE      reduce using rule 105 (DECLARATION -> TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA .)
    COMENTMULTYLINE reduce using rule 105 (DECLARATION -> TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA .)
    BREAK           reduce using rule 105 (DECLARATION -> TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA .)
    CONTINUE        reduce using rule 105 (DECLARATION -> TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA .)
    ID              reduce using rule 105 (DECLARATION -> TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA .)
    CONDITIONAL_IF  reduce using rule 105 (DECLARATION -> TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA .)
    ITERATIVE_WHILE reduce using rule 105 (DECLARATION -> TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA .)
    ITERATIVE_DO    reduce using rule 105 (DECLARATION -> TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA .)
    METHOD_VOID     reduce using rule 105 (DECLARATION -> TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA .)
    $end            reduce using rule 105 (DECLARATION -> TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA .)
    RKEY            reduce using rule 105 (DECLARATION -> TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA .)
    METHOD_RETURN   reduce using rule 105 (DECLARATION -> TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA .)


state 216

    (106) DECLARATION -> TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA .

    TYPE_INT        reduce using rule 106 (DECLARATION -> TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA .)
    TYPE_DOUBLE     reduce using rule 106 (DECLARATION -> TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA .)
    TYPE_STRING     reduce using rule 106 (DECLARATION -> TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA .)
    TYPE_CHAR       reduce using rule 106 (DECLARATION -> TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA .)
    TYPE_BOOL       reduce using rule 106 (DECLARATION -> TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA .)
    COMENTLINE      reduce using rule 106 (DECLARATION -> TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA .)
    COMENTMULTYLINE reduce using rule 106 (DECLARATION -> TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA .)
    BREAK           reduce using rule 106 (DECLARATION -> TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA .)
    CONTINUE        reduce using rule 106 (DECLARATION -> TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA .)
    ID              reduce using rule 106 (DECLARATION -> TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA .)
    CONDITIONAL_IF  reduce using rule 106 (DECLARATION -> TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA .)
    ITERATIVE_WHILE reduce using rule 106 (DECLARATION -> TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA .)
    ITERATIVE_DO    reduce using rule 106 (DECLARATION -> TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA .)
    METHOD_VOID     reduce using rule 106 (DECLARATION -> TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA .)
    $end            reduce using rule 106 (DECLARATION -> TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA .)
    RKEY            reduce using rule 106 (DECLARATION -> TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA .)
    METHOD_RETURN   reduce using rule 106 (DECLARATION -> TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA .)


state 217

    (63) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY . SENTENCES RKEY
    (64) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY . SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY . SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY . SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY . SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY . SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY
    (50) SENTENCES -> . SENTENCES SENTENCE
    (51) SENTENCES -> . SENTENCE
    (37) SENTENCES_FUNTION -> . SENTENCES_FUNTION SENTENCE_FUNTION
    (38) SENTENCES_FUNTION -> . SENTENCE_FUNTION
    (25) SENTENCES_METHOD -> . SENTENCES_METHOD SENTENCE_METHOD
    (26) SENTENCES_METHOD -> . SENTENCE_METHOD
    (52) SENTENCE -> . DECLARATIONS
    (53) SENTENCE -> . ASSIGNMENTS
    (54) SENTENCE -> . SENTENCE_IF
    (55) SENTENCE -> . SENTENCE_WHILE
    (56) SENTENCE -> . COMENTLINE
    (57) SENTENCE -> . COMENTMULTYLINE
    (58) SENTENCE -> . BREAK DOT_AN_DCOMMA
    (59) SENTENCE -> . CONTINUE DOT_AN_DCOMMA
    (60) SENTENCE -> . ID LPAREN CALLS RPAREN
    (39) SENTENCE_FUNTION -> . DECLARATIONS
    (40) SENTENCE_FUNTION -> . ASSIGNMENTS
    (41) SENTENCE_FUNTION -> . SENTENCES_IF
    (42) SENTENCE_FUNTION -> . SENTENCES_WHILE
    (43) SENTENCE_FUNTION -> . COMENTLINE
    (44) SENTENCE_FUNTION -> . COMENTMULTYLINE
    (45) SENTENCE_FUNTION -> . BREAK DOT_AN_DCOMMA
    (46) SENTENCE_FUNTION -> . CONTINUE DOT_AN_DCOMMA
    (47) SENTENCE_FUNTION -> . METHOD_RETURN TYPE_DATO DOT_AN_DCOMMA
    (48) SENTENCE_FUNTION -> . METHOD_RETURN ID DOT_AN_DCOMMA
    (49) SENTENCE_FUNTION -> . ID LPAREN CALLS RPAREN
    (27) SENTENCE_METHOD -> . DECLARATIONS
    (28) SENTENCE_METHOD -> . ASSIGNMENTS
    (29) SENTENCE_METHOD -> . SENTENCES_IF
    (30) SENTENCE_METHOD -> . SENTENCES_WHILE
    (31) SENTENCE_METHOD -> . COMENTLINE
    (32) SENTENCE_METHOD -> . COMENTMULTYLINE
    (33) SENTENCE_METHOD -> . BREAK DOT_AN_DCOMMA
    (34) SENTENCE_METHOD -> . CONTINUE DOT_AN_DCOMMA
    (35) SENTENCE_METHOD -> . METHOD_RETURN DOT_AN_DCOMMA
    (36) SENTENCE_METHOD -> . ID LPAREN CALLS RPAREN
    (100) DECLARATIONS -> . DECLARATIONS DECLARATION
    (101) DECLARATIONS -> . DECLARATION
    (107) ASSIGNMENTS -> . ASSIGNMENTS ASSIGNMENT
    (108) ASSIGNMENTS -> . ASSIGNMENT
    (63) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY
    (71) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (72) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (73) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (74) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (75) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (76) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (61) SENTENCES_IF -> . SENTENCES_IF SENTENCE_IF
    (62) SENTENCES_IF -> . SENTENCE_IF
    (69) SENTENCES_WHILE -> . SENTENCES_WHILE SENTENCE_WHILE
    (70) SENTENCES_WHILE -> . SENTENCE_WHILE
    (102) DECLARATION -> . TYPE_INT ID IQUAL INT DOT_AN_DCOMMA
    (103) DECLARATION -> . TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA
    (104) DECLARATION -> . TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA
    (105) DECLARATION -> . TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA
    (106) DECLARATION -> . TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (109) ASSIGNMENT -> . ID IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> . ID IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> . ID IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> . ID IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> . ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> . ID IQUAL EXPRESSIONS DOT_AN_DCOMMA

    COMENTLINE      shift and go to state 112
    COMENTMULTYLINE shift and go to state 113
    BREAK           shift and go to state 114
    CONTINUE        shift and go to state 115
    ID              shift and go to state 116
    METHOD_RETURN   shift and go to state 119
    CONDITIONAL_IF  shift and go to state 28
    ITERATIVE_WHILE shift and go to state 29
    ITERATIVE_DO    shift and go to state 30
    TYPE_INT        shift and go to state 40
    TYPE_DOUBLE     shift and go to state 41
    TYPE_STRING     shift and go to state 42
    TYPE_CHAR       shift and go to state 43
    TYPE_BOOL       shift and go to state 44

    SENTENCES                      shift and go to state 247
    SENTENCES_FUNTION              shift and go to state 248
    SENTENCES_METHOD               shift and go to state 249
    SENTENCE                       shift and go to state 10
    SENTENCE_FUNTION               shift and go to state 106
    SENTENCE_METHOD                shift and go to state 107
    DECLARATIONS                   shift and go to state 108
    ASSIGNMENTS                    shift and go to state 109
    SENTENCE_IF                    shift and go to state 110
    SENTENCE_WHILE                 shift and go to state 111
    SENTENCES_IF                   shift and go to state 117
    SENTENCES_WHILE                shift and go to state 118
    DECLARATION                    shift and go to state 26
    ASSIGNMENT                     shift and go to state 27

state 218

    (79) OPTIONS -> OPTIONS AND OPTIONS .
    (79) OPTIONS -> OPTIONS . AND OPTIONS
    (80) OPTIONS -> OPTIONS . OR OPTIONS
    (81) OPTIONS -> OPTIONS . NOT OPTIONS

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    RPAREN          reduce using rule 79 (OPTIONS -> OPTIONS AND OPTIONS .)
    ID              reduce using rule 79 (OPTIONS -> OPTIONS AND OPTIONS .)
    INT             reduce using rule 79 (OPTIONS -> OPTIONS AND OPTIONS .)
    FLOAT           reduce using rule 79 (OPTIONS -> OPTIONS AND OPTIONS .)
    STRING          reduce using rule 79 (OPTIONS -> OPTIONS AND OPTIONS .)
    CHAR            reduce using rule 79 (OPTIONS -> OPTIONS AND OPTIONS .)
    DATA_BOOL       reduce using rule 79 (OPTIONS -> OPTIONS AND OPTIONS .)
    AND             shift and go to state 151
    OR              shift and go to state 152
    NOT             shift and go to state 153

  ! AND             [ reduce using rule 79 (OPTIONS -> OPTIONS AND OPTIONS .) ]
  ! OR              [ reduce using rule 79 (OPTIONS -> OPTIONS AND OPTIONS .) ]
  ! NOT             [ reduce using rule 79 (OPTIONS -> OPTIONS AND OPTIONS .) ]


state 219

    (80) OPTIONS -> OPTIONS OR OPTIONS .
    (79) OPTIONS -> OPTIONS . AND OPTIONS
    (80) OPTIONS -> OPTIONS . OR OPTIONS
    (81) OPTIONS -> OPTIONS . NOT OPTIONS

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    RPAREN          reduce using rule 80 (OPTIONS -> OPTIONS OR OPTIONS .)
    ID              reduce using rule 80 (OPTIONS -> OPTIONS OR OPTIONS .)
    INT             reduce using rule 80 (OPTIONS -> OPTIONS OR OPTIONS .)
    FLOAT           reduce using rule 80 (OPTIONS -> OPTIONS OR OPTIONS .)
    STRING          reduce using rule 80 (OPTIONS -> OPTIONS OR OPTIONS .)
    CHAR            reduce using rule 80 (OPTIONS -> OPTIONS OR OPTIONS .)
    DATA_BOOL       reduce using rule 80 (OPTIONS -> OPTIONS OR OPTIONS .)
    AND             shift and go to state 151
    OR              shift and go to state 152
    NOT             shift and go to state 153

  ! AND             [ reduce using rule 80 (OPTIONS -> OPTIONS OR OPTIONS .) ]
  ! OR              [ reduce using rule 80 (OPTIONS -> OPTIONS OR OPTIONS .) ]
  ! NOT             [ reduce using rule 80 (OPTIONS -> OPTIONS OR OPTIONS .) ]


state 220

    (81) OPTIONS -> OPTIONS NOT OPTIONS .
    (79) OPTIONS -> OPTIONS . AND OPTIONS
    (80) OPTIONS -> OPTIONS . OR OPTIONS
    (81) OPTIONS -> OPTIONS . NOT OPTIONS

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    RPAREN          reduce using rule 81 (OPTIONS -> OPTIONS NOT OPTIONS .)
    ID              reduce using rule 81 (OPTIONS -> OPTIONS NOT OPTIONS .)
    INT             reduce using rule 81 (OPTIONS -> OPTIONS NOT OPTIONS .)
    FLOAT           reduce using rule 81 (OPTIONS -> OPTIONS NOT OPTIONS .)
    STRING          reduce using rule 81 (OPTIONS -> OPTIONS NOT OPTIONS .)
    CHAR            reduce using rule 81 (OPTIONS -> OPTIONS NOT OPTIONS .)
    DATA_BOOL       reduce using rule 81 (OPTIONS -> OPTIONS NOT OPTIONS .)
    AND             shift and go to state 151
    OR              shift and go to state 152
    NOT             shift and go to state 153

  ! AND             [ reduce using rule 81 (OPTIONS -> OPTIONS NOT OPTIONS .) ]
  ! OR              [ reduce using rule 81 (OPTIONS -> OPTIONS NOT OPTIONS .) ]
  ! NOT             [ reduce using rule 81 (OPTIONS -> OPTIONS NOT OPTIONS .) ]


state 221

    (83) OPTION -> OPTION IQUALS OPTION .
    (83) OPTION -> OPTION . IQUALS OPTION
    (84) OPTION -> OPTION . DIFFERENT OPTION
    (85) OPTION -> OPTION . IQUAL_GREATER OPTION
    (86) OPTION -> OPTION . IQUAL_LESS OPTION
    (87) OPTION -> OPTION . GREATER OPTION
    (88) OPTION -> OPTION . LESS OPTION

  ! shift/reduce conflict for IQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
  ! shift/reduce conflict for IQUAL_GREATER resolved as shift
  ! shift/reduce conflict for IQUAL_LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    AND             reduce using rule 83 (OPTION -> OPTION IQUALS OPTION .)
    OR              reduce using rule 83 (OPTION -> OPTION IQUALS OPTION .)
    NOT             reduce using rule 83 (OPTION -> OPTION IQUALS OPTION .)
    RPAREN          reduce using rule 83 (OPTION -> OPTION IQUALS OPTION .)
    ID              reduce using rule 83 (OPTION -> OPTION IQUALS OPTION .)
    INT             reduce using rule 83 (OPTION -> OPTION IQUALS OPTION .)
    FLOAT           reduce using rule 83 (OPTION -> OPTION IQUALS OPTION .)
    STRING          reduce using rule 83 (OPTION -> OPTION IQUALS OPTION .)
    CHAR            reduce using rule 83 (OPTION -> OPTION IQUALS OPTION .)
    DATA_BOOL       reduce using rule 83 (OPTION -> OPTION IQUALS OPTION .)
    IQUALS          shift and go to state 154
    DIFFERENT       shift and go to state 155
    IQUAL_GREATER   shift and go to state 156
    IQUAL_LESS      shift and go to state 157
    GREATER         shift and go to state 158
    LESS            shift and go to state 159

  ! IQUALS          [ reduce using rule 83 (OPTION -> OPTION IQUALS OPTION .) ]
  ! DIFFERENT       [ reduce using rule 83 (OPTION -> OPTION IQUALS OPTION .) ]
  ! IQUAL_GREATER   [ reduce using rule 83 (OPTION -> OPTION IQUALS OPTION .) ]
  ! IQUAL_LESS      [ reduce using rule 83 (OPTION -> OPTION IQUALS OPTION .) ]
  ! GREATER         [ reduce using rule 83 (OPTION -> OPTION IQUALS OPTION .) ]
  ! LESS            [ reduce using rule 83 (OPTION -> OPTION IQUALS OPTION .) ]


state 222

    (84) OPTION -> OPTION DIFFERENT OPTION .
    (83) OPTION -> OPTION . IQUALS OPTION
    (84) OPTION -> OPTION . DIFFERENT OPTION
    (85) OPTION -> OPTION . IQUAL_GREATER OPTION
    (86) OPTION -> OPTION . IQUAL_LESS OPTION
    (87) OPTION -> OPTION . GREATER OPTION
    (88) OPTION -> OPTION . LESS OPTION

  ! shift/reduce conflict for IQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
  ! shift/reduce conflict for IQUAL_GREATER resolved as shift
  ! shift/reduce conflict for IQUAL_LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    AND             reduce using rule 84 (OPTION -> OPTION DIFFERENT OPTION .)
    OR              reduce using rule 84 (OPTION -> OPTION DIFFERENT OPTION .)
    NOT             reduce using rule 84 (OPTION -> OPTION DIFFERENT OPTION .)
    RPAREN          reduce using rule 84 (OPTION -> OPTION DIFFERENT OPTION .)
    ID              reduce using rule 84 (OPTION -> OPTION DIFFERENT OPTION .)
    INT             reduce using rule 84 (OPTION -> OPTION DIFFERENT OPTION .)
    FLOAT           reduce using rule 84 (OPTION -> OPTION DIFFERENT OPTION .)
    STRING          reduce using rule 84 (OPTION -> OPTION DIFFERENT OPTION .)
    CHAR            reduce using rule 84 (OPTION -> OPTION DIFFERENT OPTION .)
    DATA_BOOL       reduce using rule 84 (OPTION -> OPTION DIFFERENT OPTION .)
    IQUALS          shift and go to state 154
    DIFFERENT       shift and go to state 155
    IQUAL_GREATER   shift and go to state 156
    IQUAL_LESS      shift and go to state 157
    GREATER         shift and go to state 158
    LESS            shift and go to state 159

  ! IQUALS          [ reduce using rule 84 (OPTION -> OPTION DIFFERENT OPTION .) ]
  ! DIFFERENT       [ reduce using rule 84 (OPTION -> OPTION DIFFERENT OPTION .) ]
  ! IQUAL_GREATER   [ reduce using rule 84 (OPTION -> OPTION DIFFERENT OPTION .) ]
  ! IQUAL_LESS      [ reduce using rule 84 (OPTION -> OPTION DIFFERENT OPTION .) ]
  ! GREATER         [ reduce using rule 84 (OPTION -> OPTION DIFFERENT OPTION .) ]
  ! LESS            [ reduce using rule 84 (OPTION -> OPTION DIFFERENT OPTION .) ]


state 223

    (85) OPTION -> OPTION IQUAL_GREATER OPTION .
    (83) OPTION -> OPTION . IQUALS OPTION
    (84) OPTION -> OPTION . DIFFERENT OPTION
    (85) OPTION -> OPTION . IQUAL_GREATER OPTION
    (86) OPTION -> OPTION . IQUAL_LESS OPTION
    (87) OPTION -> OPTION . GREATER OPTION
    (88) OPTION -> OPTION . LESS OPTION

  ! shift/reduce conflict for IQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
  ! shift/reduce conflict for IQUAL_GREATER resolved as shift
  ! shift/reduce conflict for IQUAL_LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    AND             reduce using rule 85 (OPTION -> OPTION IQUAL_GREATER OPTION .)
    OR              reduce using rule 85 (OPTION -> OPTION IQUAL_GREATER OPTION .)
    NOT             reduce using rule 85 (OPTION -> OPTION IQUAL_GREATER OPTION .)
    RPAREN          reduce using rule 85 (OPTION -> OPTION IQUAL_GREATER OPTION .)
    ID              reduce using rule 85 (OPTION -> OPTION IQUAL_GREATER OPTION .)
    INT             reduce using rule 85 (OPTION -> OPTION IQUAL_GREATER OPTION .)
    FLOAT           reduce using rule 85 (OPTION -> OPTION IQUAL_GREATER OPTION .)
    STRING          reduce using rule 85 (OPTION -> OPTION IQUAL_GREATER OPTION .)
    CHAR            reduce using rule 85 (OPTION -> OPTION IQUAL_GREATER OPTION .)
    DATA_BOOL       reduce using rule 85 (OPTION -> OPTION IQUAL_GREATER OPTION .)
    IQUALS          shift and go to state 154
    DIFFERENT       shift and go to state 155
    IQUAL_GREATER   shift and go to state 156
    IQUAL_LESS      shift and go to state 157
    GREATER         shift and go to state 158
    LESS            shift and go to state 159

  ! IQUALS          [ reduce using rule 85 (OPTION -> OPTION IQUAL_GREATER OPTION .) ]
  ! DIFFERENT       [ reduce using rule 85 (OPTION -> OPTION IQUAL_GREATER OPTION .) ]
  ! IQUAL_GREATER   [ reduce using rule 85 (OPTION -> OPTION IQUAL_GREATER OPTION .) ]
  ! IQUAL_LESS      [ reduce using rule 85 (OPTION -> OPTION IQUAL_GREATER OPTION .) ]
  ! GREATER         [ reduce using rule 85 (OPTION -> OPTION IQUAL_GREATER OPTION .) ]
  ! LESS            [ reduce using rule 85 (OPTION -> OPTION IQUAL_GREATER OPTION .) ]


state 224

    (86) OPTION -> OPTION IQUAL_LESS OPTION .
    (83) OPTION -> OPTION . IQUALS OPTION
    (84) OPTION -> OPTION . DIFFERENT OPTION
    (85) OPTION -> OPTION . IQUAL_GREATER OPTION
    (86) OPTION -> OPTION . IQUAL_LESS OPTION
    (87) OPTION -> OPTION . GREATER OPTION
    (88) OPTION -> OPTION . LESS OPTION

  ! shift/reduce conflict for IQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
  ! shift/reduce conflict for IQUAL_GREATER resolved as shift
  ! shift/reduce conflict for IQUAL_LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    AND             reduce using rule 86 (OPTION -> OPTION IQUAL_LESS OPTION .)
    OR              reduce using rule 86 (OPTION -> OPTION IQUAL_LESS OPTION .)
    NOT             reduce using rule 86 (OPTION -> OPTION IQUAL_LESS OPTION .)
    RPAREN          reduce using rule 86 (OPTION -> OPTION IQUAL_LESS OPTION .)
    ID              reduce using rule 86 (OPTION -> OPTION IQUAL_LESS OPTION .)
    INT             reduce using rule 86 (OPTION -> OPTION IQUAL_LESS OPTION .)
    FLOAT           reduce using rule 86 (OPTION -> OPTION IQUAL_LESS OPTION .)
    STRING          reduce using rule 86 (OPTION -> OPTION IQUAL_LESS OPTION .)
    CHAR            reduce using rule 86 (OPTION -> OPTION IQUAL_LESS OPTION .)
    DATA_BOOL       reduce using rule 86 (OPTION -> OPTION IQUAL_LESS OPTION .)
    IQUALS          shift and go to state 154
    DIFFERENT       shift and go to state 155
    IQUAL_GREATER   shift and go to state 156
    IQUAL_LESS      shift and go to state 157
    GREATER         shift and go to state 158
    LESS            shift and go to state 159

  ! IQUALS          [ reduce using rule 86 (OPTION -> OPTION IQUAL_LESS OPTION .) ]
  ! DIFFERENT       [ reduce using rule 86 (OPTION -> OPTION IQUAL_LESS OPTION .) ]
  ! IQUAL_GREATER   [ reduce using rule 86 (OPTION -> OPTION IQUAL_LESS OPTION .) ]
  ! IQUAL_LESS      [ reduce using rule 86 (OPTION -> OPTION IQUAL_LESS OPTION .) ]
  ! GREATER         [ reduce using rule 86 (OPTION -> OPTION IQUAL_LESS OPTION .) ]
  ! LESS            [ reduce using rule 86 (OPTION -> OPTION IQUAL_LESS OPTION .) ]


state 225

    (87) OPTION -> OPTION GREATER OPTION .
    (83) OPTION -> OPTION . IQUALS OPTION
    (84) OPTION -> OPTION . DIFFERENT OPTION
    (85) OPTION -> OPTION . IQUAL_GREATER OPTION
    (86) OPTION -> OPTION . IQUAL_LESS OPTION
    (87) OPTION -> OPTION . GREATER OPTION
    (88) OPTION -> OPTION . LESS OPTION

  ! shift/reduce conflict for IQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
  ! shift/reduce conflict for IQUAL_GREATER resolved as shift
  ! shift/reduce conflict for IQUAL_LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    AND             reduce using rule 87 (OPTION -> OPTION GREATER OPTION .)
    OR              reduce using rule 87 (OPTION -> OPTION GREATER OPTION .)
    NOT             reduce using rule 87 (OPTION -> OPTION GREATER OPTION .)
    RPAREN          reduce using rule 87 (OPTION -> OPTION GREATER OPTION .)
    ID              reduce using rule 87 (OPTION -> OPTION GREATER OPTION .)
    INT             reduce using rule 87 (OPTION -> OPTION GREATER OPTION .)
    FLOAT           reduce using rule 87 (OPTION -> OPTION GREATER OPTION .)
    STRING          reduce using rule 87 (OPTION -> OPTION GREATER OPTION .)
    CHAR            reduce using rule 87 (OPTION -> OPTION GREATER OPTION .)
    DATA_BOOL       reduce using rule 87 (OPTION -> OPTION GREATER OPTION .)
    IQUALS          shift and go to state 154
    DIFFERENT       shift and go to state 155
    IQUAL_GREATER   shift and go to state 156
    IQUAL_LESS      shift and go to state 157
    GREATER         shift and go to state 158
    LESS            shift and go to state 159

  ! IQUALS          [ reduce using rule 87 (OPTION -> OPTION GREATER OPTION .) ]
  ! DIFFERENT       [ reduce using rule 87 (OPTION -> OPTION GREATER OPTION .) ]
  ! IQUAL_GREATER   [ reduce using rule 87 (OPTION -> OPTION GREATER OPTION .) ]
  ! IQUAL_LESS      [ reduce using rule 87 (OPTION -> OPTION GREATER OPTION .) ]
  ! GREATER         [ reduce using rule 87 (OPTION -> OPTION GREATER OPTION .) ]
  ! LESS            [ reduce using rule 87 (OPTION -> OPTION GREATER OPTION .) ]


state 226

    (88) OPTION -> OPTION LESS OPTION .
    (83) OPTION -> OPTION . IQUALS OPTION
    (84) OPTION -> OPTION . DIFFERENT OPTION
    (85) OPTION -> OPTION . IQUAL_GREATER OPTION
    (86) OPTION -> OPTION . IQUAL_LESS OPTION
    (87) OPTION -> OPTION . GREATER OPTION
    (88) OPTION -> OPTION . LESS OPTION

  ! shift/reduce conflict for IQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
  ! shift/reduce conflict for IQUAL_GREATER resolved as shift
  ! shift/reduce conflict for IQUAL_LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    AND             reduce using rule 88 (OPTION -> OPTION LESS OPTION .)
    OR              reduce using rule 88 (OPTION -> OPTION LESS OPTION .)
    NOT             reduce using rule 88 (OPTION -> OPTION LESS OPTION .)
    RPAREN          reduce using rule 88 (OPTION -> OPTION LESS OPTION .)
    ID              reduce using rule 88 (OPTION -> OPTION LESS OPTION .)
    INT             reduce using rule 88 (OPTION -> OPTION LESS OPTION .)
    FLOAT           reduce using rule 88 (OPTION -> OPTION LESS OPTION .)
    STRING          reduce using rule 88 (OPTION -> OPTION LESS OPTION .)
    CHAR            reduce using rule 88 (OPTION -> OPTION LESS OPTION .)
    DATA_BOOL       reduce using rule 88 (OPTION -> OPTION LESS OPTION .)
    IQUALS          shift and go to state 154
    DIFFERENT       shift and go to state 155
    IQUAL_GREATER   shift and go to state 156
    IQUAL_LESS      shift and go to state 157
    GREATER         shift and go to state 158
    LESS            shift and go to state 159

  ! IQUALS          [ reduce using rule 88 (OPTION -> OPTION LESS OPTION .) ]
  ! DIFFERENT       [ reduce using rule 88 (OPTION -> OPTION LESS OPTION .) ]
  ! IQUAL_GREATER   [ reduce using rule 88 (OPTION -> OPTION LESS OPTION .) ]
  ! IQUAL_LESS      [ reduce using rule 88 (OPTION -> OPTION LESS OPTION .) ]
  ! GREATER         [ reduce using rule 88 (OPTION -> OPTION LESS OPTION .) ]
  ! LESS            [ reduce using rule 88 (OPTION -> OPTION LESS OPTION .) ]


state 227

    (71) SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY . SENTENCES RKEY
    (73) SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY . SENTENCES_FUNTION RKEY
    (75) SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY . SENTENCES_METHOD RKEY
    (50) SENTENCES -> . SENTENCES SENTENCE
    (51) SENTENCES -> . SENTENCE
    (37) SENTENCES_FUNTION -> . SENTENCES_FUNTION SENTENCE_FUNTION
    (38) SENTENCES_FUNTION -> . SENTENCE_FUNTION
    (25) SENTENCES_METHOD -> . SENTENCES_METHOD SENTENCE_METHOD
    (26) SENTENCES_METHOD -> . SENTENCE_METHOD
    (52) SENTENCE -> . DECLARATIONS
    (53) SENTENCE -> . ASSIGNMENTS
    (54) SENTENCE -> . SENTENCE_IF
    (55) SENTENCE -> . SENTENCE_WHILE
    (56) SENTENCE -> . COMENTLINE
    (57) SENTENCE -> . COMENTMULTYLINE
    (58) SENTENCE -> . BREAK DOT_AN_DCOMMA
    (59) SENTENCE -> . CONTINUE DOT_AN_DCOMMA
    (60) SENTENCE -> . ID LPAREN CALLS RPAREN
    (39) SENTENCE_FUNTION -> . DECLARATIONS
    (40) SENTENCE_FUNTION -> . ASSIGNMENTS
    (41) SENTENCE_FUNTION -> . SENTENCES_IF
    (42) SENTENCE_FUNTION -> . SENTENCES_WHILE
    (43) SENTENCE_FUNTION -> . COMENTLINE
    (44) SENTENCE_FUNTION -> . COMENTMULTYLINE
    (45) SENTENCE_FUNTION -> . BREAK DOT_AN_DCOMMA
    (46) SENTENCE_FUNTION -> . CONTINUE DOT_AN_DCOMMA
    (47) SENTENCE_FUNTION -> . METHOD_RETURN TYPE_DATO DOT_AN_DCOMMA
    (48) SENTENCE_FUNTION -> . METHOD_RETURN ID DOT_AN_DCOMMA
    (49) SENTENCE_FUNTION -> . ID LPAREN CALLS RPAREN
    (27) SENTENCE_METHOD -> . DECLARATIONS
    (28) SENTENCE_METHOD -> . ASSIGNMENTS
    (29) SENTENCE_METHOD -> . SENTENCES_IF
    (30) SENTENCE_METHOD -> . SENTENCES_WHILE
    (31) SENTENCE_METHOD -> . COMENTLINE
    (32) SENTENCE_METHOD -> . COMENTMULTYLINE
    (33) SENTENCE_METHOD -> . BREAK DOT_AN_DCOMMA
    (34) SENTENCE_METHOD -> . CONTINUE DOT_AN_DCOMMA
    (35) SENTENCE_METHOD -> . METHOD_RETURN DOT_AN_DCOMMA
    (36) SENTENCE_METHOD -> . ID LPAREN CALLS RPAREN
    (100) DECLARATIONS -> . DECLARATIONS DECLARATION
    (101) DECLARATIONS -> . DECLARATION
    (107) ASSIGNMENTS -> . ASSIGNMENTS ASSIGNMENT
    (108) ASSIGNMENTS -> . ASSIGNMENT
    (63) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY
    (71) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (72) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (73) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (74) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (75) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (76) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (61) SENTENCES_IF -> . SENTENCES_IF SENTENCE_IF
    (62) SENTENCES_IF -> . SENTENCE_IF
    (69) SENTENCES_WHILE -> . SENTENCES_WHILE SENTENCE_WHILE
    (70) SENTENCES_WHILE -> . SENTENCE_WHILE
    (102) DECLARATION -> . TYPE_INT ID IQUAL INT DOT_AN_DCOMMA
    (103) DECLARATION -> . TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA
    (104) DECLARATION -> . TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA
    (105) DECLARATION -> . TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA
    (106) DECLARATION -> . TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (109) ASSIGNMENT -> . ID IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> . ID IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> . ID IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> . ID IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> . ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> . ID IQUAL EXPRESSIONS DOT_AN_DCOMMA

    COMENTLINE      shift and go to state 112
    COMENTMULTYLINE shift and go to state 113
    BREAK           shift and go to state 114
    CONTINUE        shift and go to state 115
    ID              shift and go to state 116
    METHOD_RETURN   shift and go to state 119
    CONDITIONAL_IF  shift and go to state 28
    ITERATIVE_WHILE shift and go to state 29
    ITERATIVE_DO    shift and go to state 30
    TYPE_INT        shift and go to state 40
    TYPE_DOUBLE     shift and go to state 41
    TYPE_STRING     shift and go to state 42
    TYPE_CHAR       shift and go to state 43
    TYPE_BOOL       shift and go to state 44

    SENTENCES                      shift and go to state 250
    SENTENCES_FUNTION              shift and go to state 251
    SENTENCES_METHOD               shift and go to state 252
    SENTENCE                       shift and go to state 10
    SENTENCE_FUNTION               shift and go to state 106
    SENTENCE_METHOD                shift and go to state 107
    DECLARATIONS                   shift and go to state 108
    ASSIGNMENTS                    shift and go to state 109
    SENTENCE_IF                    shift and go to state 110
    SENTENCE_WHILE                 shift and go to state 111
    SENTENCES_IF                   shift and go to state 117
    SENTENCES_WHILE                shift and go to state 118
    DECLARATION                    shift and go to state 26
    ASSIGNMENT                     shift and go to state 27

state 228

    (72) SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE . LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA

    LPAREN          shift and go to state 253


state 229

    (74) SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE . LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA

    LPAREN          shift and go to state 254


state 230

    (45) SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .

    RKEY            reduce using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .)
    COMENTLINE      reduce using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .)
    COMENTMULTYLINE reduce using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .)
    BREAK           reduce using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .)
    CONTINUE        reduce using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .)
    METHOD_RETURN   reduce using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .)
    ID              reduce using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .)
    TYPE_INT        reduce using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .)
    TYPE_DOUBLE     reduce using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .)
    TYPE_STRING     reduce using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .)
    TYPE_CHAR       reduce using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .)
    TYPE_BOOL       reduce using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .)
    CONDITIONAL_IF  reduce using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .)
    ITERATIVE_WHILE reduce using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .)
    ITERATIVE_DO    reduce using rule 45 (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA .)


state 231

    (46) SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .

    RKEY            reduce using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .)
    COMENTLINE      reduce using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .)
    COMENTMULTYLINE reduce using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .)
    BREAK           reduce using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .)
    CONTINUE        reduce using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .)
    METHOD_RETURN   reduce using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .)
    ID              reduce using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .)
    TYPE_INT        reduce using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .)
    TYPE_DOUBLE     reduce using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .)
    TYPE_STRING     reduce using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .)
    TYPE_CHAR       reduce using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .)
    TYPE_BOOL       reduce using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .)
    CONDITIONAL_IF  reduce using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .)
    ITERATIVE_WHILE reduce using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .)
    ITERATIVE_DO    reduce using rule 46 (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA .)


state 232

    (49) SENTENCE_FUNTION -> ID LPAREN . CALLS RPAREN
    (122) CALLS -> . CALLS COMMA CALL
    (123) CALLS -> . CALL
    (124) CALL -> . TYPE_DATO
    (125) CALL -> . ID
    (126) TYPE_DATO -> . INT
    (127) TYPE_DATO -> . FLOAT
    (128) TYPE_DATO -> . STRING
    (129) TYPE_DATO -> . CHAR
    (130) TYPE_DATO -> . DATA_BOOL

    ID              shift and go to state 73
    INT             shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    CHAR            shift and go to state 80
    DATA_BOOL       shift and go to state 81

    CALLS                          shift and go to state 255
    CALL                           shift and go to state 75
    TYPE_DATO                      shift and go to state 76

state 233

    (76) SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE . LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA

    LPAREN          shift and go to state 256


state 234

    (33) SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .

    RKEY            reduce using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
    COMENTLINE      reduce using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
    COMENTMULTYLINE reduce using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
    BREAK           reduce using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
    CONTINUE        reduce using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
    METHOD_RETURN   reduce using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
    ID              reduce using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
    TYPE_INT        reduce using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
    TYPE_DOUBLE     reduce using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
    TYPE_STRING     reduce using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
    TYPE_CHAR       reduce using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
    TYPE_BOOL       reduce using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
    CONDITIONAL_IF  reduce using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
    ITERATIVE_WHILE reduce using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)
    ITERATIVE_DO    reduce using rule 33 (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA .)


state 235

    (34) SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .

    RKEY            reduce using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
    COMENTLINE      reduce using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
    COMENTMULTYLINE reduce using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
    BREAK           reduce using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
    CONTINUE        reduce using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
    METHOD_RETURN   reduce using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
    ID              reduce using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
    TYPE_INT        reduce using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
    TYPE_DOUBLE     reduce using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
    TYPE_STRING     reduce using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
    TYPE_CHAR       reduce using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
    TYPE_BOOL       reduce using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
    CONDITIONAL_IF  reduce using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
    ITERATIVE_WHILE reduce using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)
    ITERATIVE_DO    reduce using rule 34 (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA .)


state 236

    (36) SENTENCE_METHOD -> ID LPAREN . CALLS RPAREN
    (122) CALLS -> . CALLS COMMA CALL
    (123) CALLS -> . CALL
    (124) CALL -> . TYPE_DATO
    (125) CALL -> . ID
    (126) TYPE_DATO -> . INT
    (127) TYPE_DATO -> . FLOAT
    (128) TYPE_DATO -> . STRING
    (129) TYPE_DATO -> . CHAR
    (130) TYPE_DATO -> . DATA_BOOL

    ID              shift and go to state 73
    INT             shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    CHAR            shift and go to state 80
    DATA_BOOL       shift and go to state 81

    CALLS                          shift and go to state 257
    CALL                           shift and go to state 75
    TYPE_DATO                      shift and go to state 76

state 237

    (60) SENTENCE -> ID LPAREN CALLS . RPAREN
    (49) SENTENCE_FUNTION -> ID LPAREN CALLS . RPAREN
    (36) SENTENCE_METHOD -> ID LPAREN CALLS . RPAREN
    (122) CALLS -> CALLS . COMMA CALL

    RPAREN          shift and go to state 258
    COMMA           shift and go to state 129


state 238

    (47) SENTENCE_FUNTION -> METHOD_RETURN TYPE_DATO DOT_AN_DCOMMA .

    RKEY            reduce using rule 47 (SENTENCE_FUNTION -> METHOD_RETURN TYPE_DATO DOT_AN_DCOMMA .)
    COMENTLINE      reduce using rule 47 (SENTENCE_FUNTION -> METHOD_RETURN TYPE_DATO DOT_AN_DCOMMA .)
    COMENTMULTYLINE reduce using rule 47 (SENTENCE_FUNTION -> METHOD_RETURN TYPE_DATO DOT_AN_DCOMMA .)
    BREAK           reduce using rule 47 (SENTENCE_FUNTION -> METHOD_RETURN TYPE_DATO DOT_AN_DCOMMA .)
    CONTINUE        reduce using rule 47 (SENTENCE_FUNTION -> METHOD_RETURN TYPE_DATO DOT_AN_DCOMMA .)
    METHOD_RETURN   reduce using rule 47 (SENTENCE_FUNTION -> METHOD_RETURN TYPE_DATO DOT_AN_DCOMMA .)
    ID              reduce using rule 47 (SENTENCE_FUNTION -> METHOD_RETURN TYPE_DATO DOT_AN_DCOMMA .)
    TYPE_INT        reduce using rule 47 (SENTENCE_FUNTION -> METHOD_RETURN TYPE_DATO DOT_AN_DCOMMA .)
    TYPE_DOUBLE     reduce using rule 47 (SENTENCE_FUNTION -> METHOD_RETURN TYPE_DATO DOT_AN_DCOMMA .)
    TYPE_STRING     reduce using rule 47 (SENTENCE_FUNTION -> METHOD_RETURN TYPE_DATO DOT_AN_DCOMMA .)
    TYPE_CHAR       reduce using rule 47 (SENTENCE_FUNTION -> METHOD_RETURN TYPE_DATO DOT_AN_DCOMMA .)
    TYPE_BOOL       reduce using rule 47 (SENTENCE_FUNTION -> METHOD_RETURN TYPE_DATO DOT_AN_DCOMMA .)
    CONDITIONAL_IF  reduce using rule 47 (SENTENCE_FUNTION -> METHOD_RETURN TYPE_DATO DOT_AN_DCOMMA .)
    ITERATIVE_WHILE reduce using rule 47 (SENTENCE_FUNTION -> METHOD_RETURN TYPE_DATO DOT_AN_DCOMMA .)
    ITERATIVE_DO    reduce using rule 47 (SENTENCE_FUNTION -> METHOD_RETURN TYPE_DATO DOT_AN_DCOMMA .)


state 239

    (48) SENTENCE_FUNTION -> METHOD_RETURN ID DOT_AN_DCOMMA .

    RKEY            reduce using rule 48 (SENTENCE_FUNTION -> METHOD_RETURN ID DOT_AN_DCOMMA .)
    COMENTLINE      reduce using rule 48 (SENTENCE_FUNTION -> METHOD_RETURN ID DOT_AN_DCOMMA .)
    COMENTMULTYLINE reduce using rule 48 (SENTENCE_FUNTION -> METHOD_RETURN ID DOT_AN_DCOMMA .)
    BREAK           reduce using rule 48 (SENTENCE_FUNTION -> METHOD_RETURN ID DOT_AN_DCOMMA .)
    CONTINUE        reduce using rule 48 (SENTENCE_FUNTION -> METHOD_RETURN ID DOT_AN_DCOMMA .)
    METHOD_RETURN   reduce using rule 48 (SENTENCE_FUNTION -> METHOD_RETURN ID DOT_AN_DCOMMA .)
    ID              reduce using rule 48 (SENTENCE_FUNTION -> METHOD_RETURN ID DOT_AN_DCOMMA .)
    TYPE_INT        reduce using rule 48 (SENTENCE_FUNTION -> METHOD_RETURN ID DOT_AN_DCOMMA .)
    TYPE_DOUBLE     reduce using rule 48 (SENTENCE_FUNTION -> METHOD_RETURN ID DOT_AN_DCOMMA .)
    TYPE_STRING     reduce using rule 48 (SENTENCE_FUNTION -> METHOD_RETURN ID DOT_AN_DCOMMA .)
    TYPE_CHAR       reduce using rule 48 (SENTENCE_FUNTION -> METHOD_RETURN ID DOT_AN_DCOMMA .)
    TYPE_BOOL       reduce using rule 48 (SENTENCE_FUNTION -> METHOD_RETURN ID DOT_AN_DCOMMA .)
    CONDITIONAL_IF  reduce using rule 48 (SENTENCE_FUNTION -> METHOD_RETURN ID DOT_AN_DCOMMA .)
    ITERATIVE_WHILE reduce using rule 48 (SENTENCE_FUNTION -> METHOD_RETURN ID DOT_AN_DCOMMA .)
    ITERATIVE_DO    reduce using rule 48 (SENTENCE_FUNTION -> METHOD_RETURN ID DOT_AN_DCOMMA .)


state 240

    (10) METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY empty . RKEY

    RKEY            shift and go to state 259


state 241

    (11) METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY SENTENCES_METHOD . RKEY
    (25) SENTENCES_METHOD -> SENTENCES_METHOD . SENTENCE_METHOD
    (27) SENTENCE_METHOD -> . DECLARATIONS
    (28) SENTENCE_METHOD -> . ASSIGNMENTS
    (29) SENTENCE_METHOD -> . SENTENCES_IF
    (30) SENTENCE_METHOD -> . SENTENCES_WHILE
    (31) SENTENCE_METHOD -> . COMENTLINE
    (32) SENTENCE_METHOD -> . COMENTMULTYLINE
    (33) SENTENCE_METHOD -> . BREAK DOT_AN_DCOMMA
    (34) SENTENCE_METHOD -> . CONTINUE DOT_AN_DCOMMA
    (35) SENTENCE_METHOD -> . METHOD_RETURN DOT_AN_DCOMMA
    (36) SENTENCE_METHOD -> . ID LPAREN CALLS RPAREN
    (100) DECLARATIONS -> . DECLARATIONS DECLARATION
    (101) DECLARATIONS -> . DECLARATION
    (107) ASSIGNMENTS -> . ASSIGNMENTS ASSIGNMENT
    (108) ASSIGNMENTS -> . ASSIGNMENT
    (61) SENTENCES_IF -> . SENTENCES_IF SENTENCE_IF
    (62) SENTENCES_IF -> . SENTENCE_IF
    (69) SENTENCES_WHILE -> . SENTENCES_WHILE SENTENCE_WHILE
    (70) SENTENCES_WHILE -> . SENTENCE_WHILE
    (102) DECLARATION -> . TYPE_INT ID IQUAL INT DOT_AN_DCOMMA
    (103) DECLARATION -> . TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA
    (104) DECLARATION -> . TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA
    (105) DECLARATION -> . TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA
    (106) DECLARATION -> . TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (109) ASSIGNMENT -> . ID IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> . ID IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> . ID IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> . ID IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> . ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> . ID IQUAL EXPRESSIONS DOT_AN_DCOMMA
    (63) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY
    (71) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (72) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (73) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (74) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (75) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (76) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA

    RKEY            shift and go to state 260
    COMENTLINE      shift and go to state 182
    COMENTMULTYLINE shift and go to state 183
    BREAK           shift and go to state 184
    CONTINUE        shift and go to state 185
    METHOD_RETURN   shift and go to state 186
    ID              shift and go to state 187
    TYPE_INT        shift and go to state 40
    TYPE_DOUBLE     shift and go to state 41
    TYPE_STRING     shift and go to state 42
    TYPE_CHAR       shift and go to state 43
    TYPE_BOOL       shift and go to state 44
    CONDITIONAL_IF  shift and go to state 28
    ITERATIVE_WHILE shift and go to state 29
    ITERATIVE_DO    shift and go to state 30

    SENTENCE_METHOD                shift and go to state 177
    DECLARATIONS                   shift and go to state 178
    ASSIGNMENTS                    shift and go to state 179
    SENTENCES_IF                   shift and go to state 180
    SENTENCES_WHILE                shift and go to state 181
    DECLARATION                    shift and go to state 26
    ASSIGNMENT                     shift and go to state 27
    SENTENCE_IF                    shift and go to state 174
    SENTENCE_WHILE                 shift and go to state 175

state 242

    (12) METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY . empty RKEY
    (13) METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY . SENTENCES_METHOD RKEY
    (131) empty -> .
    (25) SENTENCES_METHOD -> . SENTENCES_METHOD SENTENCE_METHOD
    (26) SENTENCES_METHOD -> . SENTENCE_METHOD
    (27) SENTENCE_METHOD -> . DECLARATIONS
    (28) SENTENCE_METHOD -> . ASSIGNMENTS
    (29) SENTENCE_METHOD -> . SENTENCES_IF
    (30) SENTENCE_METHOD -> . SENTENCES_WHILE
    (31) SENTENCE_METHOD -> . COMENTLINE
    (32) SENTENCE_METHOD -> . COMENTMULTYLINE
    (33) SENTENCE_METHOD -> . BREAK DOT_AN_DCOMMA
    (34) SENTENCE_METHOD -> . CONTINUE DOT_AN_DCOMMA
    (35) SENTENCE_METHOD -> . METHOD_RETURN DOT_AN_DCOMMA
    (36) SENTENCE_METHOD -> . ID LPAREN CALLS RPAREN
    (100) DECLARATIONS -> . DECLARATIONS DECLARATION
    (101) DECLARATIONS -> . DECLARATION
    (107) ASSIGNMENTS -> . ASSIGNMENTS ASSIGNMENT
    (108) ASSIGNMENTS -> . ASSIGNMENT
    (61) SENTENCES_IF -> . SENTENCES_IF SENTENCE_IF
    (62) SENTENCES_IF -> . SENTENCE_IF
    (69) SENTENCES_WHILE -> . SENTENCES_WHILE SENTENCE_WHILE
    (70) SENTENCES_WHILE -> . SENTENCE_WHILE
    (102) DECLARATION -> . TYPE_INT ID IQUAL INT DOT_AN_DCOMMA
    (103) DECLARATION -> . TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA
    (104) DECLARATION -> . TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA
    (105) DECLARATION -> . TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA
    (106) DECLARATION -> . TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (109) ASSIGNMENT -> . ID IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> . ID IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> . ID IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> . ID IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> . ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> . ID IQUAL EXPRESSIONS DOT_AN_DCOMMA
    (63) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY
    (71) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (72) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (73) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (74) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (75) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (76) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA

    RKEY            reduce using rule 131 (empty -> .)
    COMENTLINE      shift and go to state 182
    COMENTMULTYLINE shift and go to state 183
    BREAK           shift and go to state 184
    CONTINUE        shift and go to state 185
    METHOD_RETURN   shift and go to state 186
    ID              shift and go to state 187
    TYPE_INT        shift and go to state 40
    TYPE_DOUBLE     shift and go to state 41
    TYPE_STRING     shift and go to state 42
    TYPE_CHAR       shift and go to state 43
    TYPE_BOOL       shift and go to state 44
    CONDITIONAL_IF  shift and go to state 28
    ITERATIVE_WHILE shift and go to state 29
    ITERATIVE_DO    shift and go to state 30

    empty                          shift and go to state 261
    SENTENCES_METHOD               shift and go to state 262
    SENTENCE_METHOD                shift and go to state 107
    DECLARATIONS                   shift and go to state 178
    ASSIGNMENTS                    shift and go to state 179
    SENTENCES_IF                   shift and go to state 180
    SENTENCES_WHILE                shift and go to state 181
    DECLARATION                    shift and go to state 26
    ASSIGNMENT                     shift and go to state 27
    SENTENCE_IF                    shift and go to state 174
    SENTENCE_WHILE                 shift and go to state 175

state 243

    (115) L_PARAMS -> L_PARAMS COMMA PARAM .

    RPAREN          reduce using rule 115 (L_PARAMS -> L_PARAMS COMMA PARAM .)
    COMMA           reduce using rule 115 (L_PARAMS -> L_PARAMS COMMA PARAM .)


state 244

    (21) COUPLER -> ID LPAREN RPAREN LKEY empty . RKEY

    RKEY            shift and go to state 263


state 245

    (22) COUPLER -> ID LPAREN RPAREN LKEY SENTENCES_FUNTION . RKEY
    (37) SENTENCES_FUNTION -> SENTENCES_FUNTION . SENTENCE_FUNTION
    (39) SENTENCE_FUNTION -> . DECLARATIONS
    (40) SENTENCE_FUNTION -> . ASSIGNMENTS
    (41) SENTENCE_FUNTION -> . SENTENCES_IF
    (42) SENTENCE_FUNTION -> . SENTENCES_WHILE
    (43) SENTENCE_FUNTION -> . COMENTLINE
    (44) SENTENCE_FUNTION -> . COMENTMULTYLINE
    (45) SENTENCE_FUNTION -> . BREAK DOT_AN_DCOMMA
    (46) SENTENCE_FUNTION -> . CONTINUE DOT_AN_DCOMMA
    (47) SENTENCE_FUNTION -> . METHOD_RETURN TYPE_DATO DOT_AN_DCOMMA
    (48) SENTENCE_FUNTION -> . METHOD_RETURN ID DOT_AN_DCOMMA
    (49) SENTENCE_FUNTION -> . ID LPAREN CALLS RPAREN
    (100) DECLARATIONS -> . DECLARATIONS DECLARATION
    (101) DECLARATIONS -> . DECLARATION
    (107) ASSIGNMENTS -> . ASSIGNMENTS ASSIGNMENT
    (108) ASSIGNMENTS -> . ASSIGNMENT
    (61) SENTENCES_IF -> . SENTENCES_IF SENTENCE_IF
    (62) SENTENCES_IF -> . SENTENCE_IF
    (69) SENTENCES_WHILE -> . SENTENCES_WHILE SENTENCE_WHILE
    (70) SENTENCES_WHILE -> . SENTENCE_WHILE
    (102) DECLARATION -> . TYPE_INT ID IQUAL INT DOT_AN_DCOMMA
    (103) DECLARATION -> . TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA
    (104) DECLARATION -> . TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA
    (105) DECLARATION -> . TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA
    (106) DECLARATION -> . TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (109) ASSIGNMENT -> . ID IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> . ID IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> . ID IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> . ID IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> . ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> . ID IQUAL EXPRESSIONS DOT_AN_DCOMMA
    (63) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY
    (71) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (72) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (73) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (74) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (75) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (76) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA

    RKEY            shift and go to state 264
    COMENTLINE      shift and go to state 168
    COMENTMULTYLINE shift and go to state 169
    BREAK           shift and go to state 170
    CONTINUE        shift and go to state 171
    METHOD_RETURN   shift and go to state 172
    ID              shift and go to state 173
    TYPE_INT        shift and go to state 40
    TYPE_DOUBLE     shift and go to state 41
    TYPE_STRING     shift and go to state 42
    TYPE_CHAR       shift and go to state 43
    TYPE_BOOL       shift and go to state 44
    CONDITIONAL_IF  shift and go to state 28
    ITERATIVE_WHILE shift and go to state 29
    ITERATIVE_DO    shift and go to state 30

    SENTENCE_FUNTION               shift and go to state 163
    DECLARATIONS                   shift and go to state 164
    ASSIGNMENTS                    shift and go to state 165
    SENTENCES_IF                   shift and go to state 166
    SENTENCES_WHILE                shift and go to state 167
    DECLARATION                    shift and go to state 26
    ASSIGNMENT                     shift and go to state 27
    SENTENCE_IF                    shift and go to state 174
    SENTENCE_WHILE                 shift and go to state 175

state 246

    (23) COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY . empty RKEY
    (24) COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY . SENTENCES_FUNTION RKEY
    (131) empty -> .
    (37) SENTENCES_FUNTION -> . SENTENCES_FUNTION SENTENCE_FUNTION
    (38) SENTENCES_FUNTION -> . SENTENCE_FUNTION
    (39) SENTENCE_FUNTION -> . DECLARATIONS
    (40) SENTENCE_FUNTION -> . ASSIGNMENTS
    (41) SENTENCE_FUNTION -> . SENTENCES_IF
    (42) SENTENCE_FUNTION -> . SENTENCES_WHILE
    (43) SENTENCE_FUNTION -> . COMENTLINE
    (44) SENTENCE_FUNTION -> . COMENTMULTYLINE
    (45) SENTENCE_FUNTION -> . BREAK DOT_AN_DCOMMA
    (46) SENTENCE_FUNTION -> . CONTINUE DOT_AN_DCOMMA
    (47) SENTENCE_FUNTION -> . METHOD_RETURN TYPE_DATO DOT_AN_DCOMMA
    (48) SENTENCE_FUNTION -> . METHOD_RETURN ID DOT_AN_DCOMMA
    (49) SENTENCE_FUNTION -> . ID LPAREN CALLS RPAREN
    (100) DECLARATIONS -> . DECLARATIONS DECLARATION
    (101) DECLARATIONS -> . DECLARATION
    (107) ASSIGNMENTS -> . ASSIGNMENTS ASSIGNMENT
    (108) ASSIGNMENTS -> . ASSIGNMENT
    (61) SENTENCES_IF -> . SENTENCES_IF SENTENCE_IF
    (62) SENTENCES_IF -> . SENTENCE_IF
    (69) SENTENCES_WHILE -> . SENTENCES_WHILE SENTENCE_WHILE
    (70) SENTENCES_WHILE -> . SENTENCE_WHILE
    (102) DECLARATION -> . TYPE_INT ID IQUAL INT DOT_AN_DCOMMA
    (103) DECLARATION -> . TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA
    (104) DECLARATION -> . TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA
    (105) DECLARATION -> . TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA
    (106) DECLARATION -> . TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (109) ASSIGNMENT -> . ID IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> . ID IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> . ID IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> . ID IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> . ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> . ID IQUAL EXPRESSIONS DOT_AN_DCOMMA
    (63) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY
    (71) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (72) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (73) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (74) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (75) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (76) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA

    RKEY            reduce using rule 131 (empty -> .)
    COMENTLINE      shift and go to state 168
    COMENTMULTYLINE shift and go to state 169
    BREAK           shift and go to state 170
    CONTINUE        shift and go to state 171
    METHOD_RETURN   shift and go to state 172
    ID              shift and go to state 173
    TYPE_INT        shift and go to state 40
    TYPE_DOUBLE     shift and go to state 41
    TYPE_STRING     shift and go to state 42
    TYPE_CHAR       shift and go to state 43
    TYPE_BOOL       shift and go to state 44
    CONDITIONAL_IF  shift and go to state 28
    ITERATIVE_WHILE shift and go to state 29
    ITERATIVE_DO    shift and go to state 30

    empty                          shift and go to state 265
    SENTENCES_FUNTION              shift and go to state 266
    SENTENCE_FUNTION               shift and go to state 106
    DECLARATIONS                   shift and go to state 164
    ASSIGNMENTS                    shift and go to state 165
    SENTENCES_IF                   shift and go to state 166
    SENTENCES_WHILE                shift and go to state 167
    DECLARATION                    shift and go to state 26
    ASSIGNMENT                     shift and go to state 27
    SENTENCE_IF                    shift and go to state 174
    SENTENCE_WHILE                 shift and go to state 175

state 247

    (63) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES . RKEY
    (64) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES . RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (50) SENTENCES -> SENTENCES . SENTENCE
    (52) SENTENCE -> . DECLARATIONS
    (53) SENTENCE -> . ASSIGNMENTS
    (54) SENTENCE -> . SENTENCE_IF
    (55) SENTENCE -> . SENTENCE_WHILE
    (56) SENTENCE -> . COMENTLINE
    (57) SENTENCE -> . COMENTMULTYLINE
    (58) SENTENCE -> . BREAK DOT_AN_DCOMMA
    (59) SENTENCE -> . CONTINUE DOT_AN_DCOMMA
    (60) SENTENCE -> . ID LPAREN CALLS RPAREN
    (100) DECLARATIONS -> . DECLARATIONS DECLARATION
    (101) DECLARATIONS -> . DECLARATION
    (107) ASSIGNMENTS -> . ASSIGNMENTS ASSIGNMENT
    (108) ASSIGNMENTS -> . ASSIGNMENT
    (63) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY
    (71) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (72) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (73) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (74) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (75) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (76) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (102) DECLARATION -> . TYPE_INT ID IQUAL INT DOT_AN_DCOMMA
    (103) DECLARATION -> . TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA
    (104) DECLARATION -> . TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA
    (105) DECLARATION -> . TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA
    (106) DECLARATION -> . TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (109) ASSIGNMENT -> . ID IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> . ID IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> . ID IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> . ID IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> . ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> . ID IQUAL EXPRESSIONS DOT_AN_DCOMMA

    RKEY            shift and go to state 267
    COMENTLINE      shift and go to state 22
    COMENTMULTYLINE shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    ID              shift and go to state 12
    CONDITIONAL_IF  shift and go to state 28
    ITERATIVE_WHILE shift and go to state 29
    ITERATIVE_DO    shift and go to state 30
    TYPE_INT        shift and go to state 40
    TYPE_DOUBLE     shift and go to state 41
    TYPE_STRING     shift and go to state 42
    TYPE_CHAR       shift and go to state 43
    TYPE_BOOL       shift and go to state 44

    SENTENCE                       shift and go to state 39
    DECLARATIONS                   shift and go to state 18
    ASSIGNMENTS                    shift and go to state 19
    SENTENCE_IF                    shift and go to state 20
    SENTENCE_WHILE                 shift and go to state 21
    DECLARATION                    shift and go to state 26
    ASSIGNMENT                     shift and go to state 27

state 248

    (65) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION . RKEY
    (66) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION . RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (37) SENTENCES_FUNTION -> SENTENCES_FUNTION . SENTENCE_FUNTION
    (39) SENTENCE_FUNTION -> . DECLARATIONS
    (40) SENTENCE_FUNTION -> . ASSIGNMENTS
    (41) SENTENCE_FUNTION -> . SENTENCES_IF
    (42) SENTENCE_FUNTION -> . SENTENCES_WHILE
    (43) SENTENCE_FUNTION -> . COMENTLINE
    (44) SENTENCE_FUNTION -> . COMENTMULTYLINE
    (45) SENTENCE_FUNTION -> . BREAK DOT_AN_DCOMMA
    (46) SENTENCE_FUNTION -> . CONTINUE DOT_AN_DCOMMA
    (47) SENTENCE_FUNTION -> . METHOD_RETURN TYPE_DATO DOT_AN_DCOMMA
    (48) SENTENCE_FUNTION -> . METHOD_RETURN ID DOT_AN_DCOMMA
    (49) SENTENCE_FUNTION -> . ID LPAREN CALLS RPAREN
    (100) DECLARATIONS -> . DECLARATIONS DECLARATION
    (101) DECLARATIONS -> . DECLARATION
    (107) ASSIGNMENTS -> . ASSIGNMENTS ASSIGNMENT
    (108) ASSIGNMENTS -> . ASSIGNMENT
    (61) SENTENCES_IF -> . SENTENCES_IF SENTENCE_IF
    (62) SENTENCES_IF -> . SENTENCE_IF
    (69) SENTENCES_WHILE -> . SENTENCES_WHILE SENTENCE_WHILE
    (70) SENTENCES_WHILE -> . SENTENCE_WHILE
    (102) DECLARATION -> . TYPE_INT ID IQUAL INT DOT_AN_DCOMMA
    (103) DECLARATION -> . TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA
    (104) DECLARATION -> . TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA
    (105) DECLARATION -> . TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA
    (106) DECLARATION -> . TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (109) ASSIGNMENT -> . ID IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> . ID IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> . ID IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> . ID IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> . ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> . ID IQUAL EXPRESSIONS DOT_AN_DCOMMA
    (63) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY
    (71) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (72) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (73) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (74) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (75) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (76) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA

    RKEY            shift and go to state 268
    COMENTLINE      shift and go to state 168
    COMENTMULTYLINE shift and go to state 169
    BREAK           shift and go to state 170
    CONTINUE        shift and go to state 171
    METHOD_RETURN   shift and go to state 172
    ID              shift and go to state 173
    TYPE_INT        shift and go to state 40
    TYPE_DOUBLE     shift and go to state 41
    TYPE_STRING     shift and go to state 42
    TYPE_CHAR       shift and go to state 43
    TYPE_BOOL       shift and go to state 44
    CONDITIONAL_IF  shift and go to state 28
    ITERATIVE_WHILE shift and go to state 29
    ITERATIVE_DO    shift and go to state 30

    SENTENCE_FUNTION               shift and go to state 163
    DECLARATIONS                   shift and go to state 164
    ASSIGNMENTS                    shift and go to state 165
    SENTENCES_IF                   shift and go to state 166
    SENTENCES_WHILE                shift and go to state 167
    DECLARATION                    shift and go to state 26
    ASSIGNMENT                     shift and go to state 27
    SENTENCE_IF                    shift and go to state 174
    SENTENCE_WHILE                 shift and go to state 175

state 249

    (67) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD . RKEY
    (68) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD . RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY
    (25) SENTENCES_METHOD -> SENTENCES_METHOD . SENTENCE_METHOD
    (27) SENTENCE_METHOD -> . DECLARATIONS
    (28) SENTENCE_METHOD -> . ASSIGNMENTS
    (29) SENTENCE_METHOD -> . SENTENCES_IF
    (30) SENTENCE_METHOD -> . SENTENCES_WHILE
    (31) SENTENCE_METHOD -> . COMENTLINE
    (32) SENTENCE_METHOD -> . COMENTMULTYLINE
    (33) SENTENCE_METHOD -> . BREAK DOT_AN_DCOMMA
    (34) SENTENCE_METHOD -> . CONTINUE DOT_AN_DCOMMA
    (35) SENTENCE_METHOD -> . METHOD_RETURN DOT_AN_DCOMMA
    (36) SENTENCE_METHOD -> . ID LPAREN CALLS RPAREN
    (100) DECLARATIONS -> . DECLARATIONS DECLARATION
    (101) DECLARATIONS -> . DECLARATION
    (107) ASSIGNMENTS -> . ASSIGNMENTS ASSIGNMENT
    (108) ASSIGNMENTS -> . ASSIGNMENT
    (61) SENTENCES_IF -> . SENTENCES_IF SENTENCE_IF
    (62) SENTENCES_IF -> . SENTENCE_IF
    (69) SENTENCES_WHILE -> . SENTENCES_WHILE SENTENCE_WHILE
    (70) SENTENCES_WHILE -> . SENTENCE_WHILE
    (102) DECLARATION -> . TYPE_INT ID IQUAL INT DOT_AN_DCOMMA
    (103) DECLARATION -> . TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA
    (104) DECLARATION -> . TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA
    (105) DECLARATION -> . TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA
    (106) DECLARATION -> . TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (109) ASSIGNMENT -> . ID IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> . ID IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> . ID IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> . ID IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> . ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> . ID IQUAL EXPRESSIONS DOT_AN_DCOMMA
    (63) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY
    (71) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (72) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (73) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (74) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (75) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (76) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA

    RKEY            shift and go to state 269
    COMENTLINE      shift and go to state 182
    COMENTMULTYLINE shift and go to state 183
    BREAK           shift and go to state 184
    CONTINUE        shift and go to state 185
    METHOD_RETURN   shift and go to state 186
    ID              shift and go to state 187
    TYPE_INT        shift and go to state 40
    TYPE_DOUBLE     shift and go to state 41
    TYPE_STRING     shift and go to state 42
    TYPE_CHAR       shift and go to state 43
    TYPE_BOOL       shift and go to state 44
    CONDITIONAL_IF  shift and go to state 28
    ITERATIVE_WHILE shift and go to state 29
    ITERATIVE_DO    shift and go to state 30

    SENTENCE_METHOD                shift and go to state 177
    DECLARATIONS                   shift and go to state 178
    ASSIGNMENTS                    shift and go to state 179
    SENTENCES_IF                   shift and go to state 180
    SENTENCES_WHILE                shift and go to state 181
    DECLARATION                    shift and go to state 26
    ASSIGNMENT                     shift and go to state 27
    SENTENCE_IF                    shift and go to state 174
    SENTENCE_WHILE                 shift and go to state 175

state 250

    (71) SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES . RKEY
    (50) SENTENCES -> SENTENCES . SENTENCE
    (52) SENTENCE -> . DECLARATIONS
    (53) SENTENCE -> . ASSIGNMENTS
    (54) SENTENCE -> . SENTENCE_IF
    (55) SENTENCE -> . SENTENCE_WHILE
    (56) SENTENCE -> . COMENTLINE
    (57) SENTENCE -> . COMENTMULTYLINE
    (58) SENTENCE -> . BREAK DOT_AN_DCOMMA
    (59) SENTENCE -> . CONTINUE DOT_AN_DCOMMA
    (60) SENTENCE -> . ID LPAREN CALLS RPAREN
    (100) DECLARATIONS -> . DECLARATIONS DECLARATION
    (101) DECLARATIONS -> . DECLARATION
    (107) ASSIGNMENTS -> . ASSIGNMENTS ASSIGNMENT
    (108) ASSIGNMENTS -> . ASSIGNMENT
    (63) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY
    (71) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (72) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (73) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (74) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (75) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (76) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (102) DECLARATION -> . TYPE_INT ID IQUAL INT DOT_AN_DCOMMA
    (103) DECLARATION -> . TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA
    (104) DECLARATION -> . TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA
    (105) DECLARATION -> . TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA
    (106) DECLARATION -> . TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (109) ASSIGNMENT -> . ID IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> . ID IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> . ID IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> . ID IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> . ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> . ID IQUAL EXPRESSIONS DOT_AN_DCOMMA

    RKEY            shift and go to state 270
    COMENTLINE      shift and go to state 22
    COMENTMULTYLINE shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    ID              shift and go to state 12
    CONDITIONAL_IF  shift and go to state 28
    ITERATIVE_WHILE shift and go to state 29
    ITERATIVE_DO    shift and go to state 30
    TYPE_INT        shift and go to state 40
    TYPE_DOUBLE     shift and go to state 41
    TYPE_STRING     shift and go to state 42
    TYPE_CHAR       shift and go to state 43
    TYPE_BOOL       shift and go to state 44

    SENTENCE                       shift and go to state 39
    DECLARATIONS                   shift and go to state 18
    ASSIGNMENTS                    shift and go to state 19
    SENTENCE_IF                    shift and go to state 20
    SENTENCE_WHILE                 shift and go to state 21
    DECLARATION                    shift and go to state 26
    ASSIGNMENT                     shift and go to state 27

state 251

    (73) SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION . RKEY
    (37) SENTENCES_FUNTION -> SENTENCES_FUNTION . SENTENCE_FUNTION
    (39) SENTENCE_FUNTION -> . DECLARATIONS
    (40) SENTENCE_FUNTION -> . ASSIGNMENTS
    (41) SENTENCE_FUNTION -> . SENTENCES_IF
    (42) SENTENCE_FUNTION -> . SENTENCES_WHILE
    (43) SENTENCE_FUNTION -> . COMENTLINE
    (44) SENTENCE_FUNTION -> . COMENTMULTYLINE
    (45) SENTENCE_FUNTION -> . BREAK DOT_AN_DCOMMA
    (46) SENTENCE_FUNTION -> . CONTINUE DOT_AN_DCOMMA
    (47) SENTENCE_FUNTION -> . METHOD_RETURN TYPE_DATO DOT_AN_DCOMMA
    (48) SENTENCE_FUNTION -> . METHOD_RETURN ID DOT_AN_DCOMMA
    (49) SENTENCE_FUNTION -> . ID LPAREN CALLS RPAREN
    (100) DECLARATIONS -> . DECLARATIONS DECLARATION
    (101) DECLARATIONS -> . DECLARATION
    (107) ASSIGNMENTS -> . ASSIGNMENTS ASSIGNMENT
    (108) ASSIGNMENTS -> . ASSIGNMENT
    (61) SENTENCES_IF -> . SENTENCES_IF SENTENCE_IF
    (62) SENTENCES_IF -> . SENTENCE_IF
    (69) SENTENCES_WHILE -> . SENTENCES_WHILE SENTENCE_WHILE
    (70) SENTENCES_WHILE -> . SENTENCE_WHILE
    (102) DECLARATION -> . TYPE_INT ID IQUAL INT DOT_AN_DCOMMA
    (103) DECLARATION -> . TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA
    (104) DECLARATION -> . TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA
    (105) DECLARATION -> . TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA
    (106) DECLARATION -> . TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (109) ASSIGNMENT -> . ID IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> . ID IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> . ID IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> . ID IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> . ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> . ID IQUAL EXPRESSIONS DOT_AN_DCOMMA
    (63) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY
    (71) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (72) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (73) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (74) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (75) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (76) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA

    RKEY            shift and go to state 271
    COMENTLINE      shift and go to state 168
    COMENTMULTYLINE shift and go to state 169
    BREAK           shift and go to state 170
    CONTINUE        shift and go to state 171
    METHOD_RETURN   shift and go to state 172
    ID              shift and go to state 173
    TYPE_INT        shift and go to state 40
    TYPE_DOUBLE     shift and go to state 41
    TYPE_STRING     shift and go to state 42
    TYPE_CHAR       shift and go to state 43
    TYPE_BOOL       shift and go to state 44
    CONDITIONAL_IF  shift and go to state 28
    ITERATIVE_WHILE shift and go to state 29
    ITERATIVE_DO    shift and go to state 30

    SENTENCE_FUNTION               shift and go to state 163
    DECLARATIONS                   shift and go to state 164
    ASSIGNMENTS                    shift and go to state 165
    SENTENCES_IF                   shift and go to state 166
    SENTENCES_WHILE                shift and go to state 167
    DECLARATION                    shift and go to state 26
    ASSIGNMENT                     shift and go to state 27
    SENTENCE_IF                    shift and go to state 174
    SENTENCE_WHILE                 shift and go to state 175

state 252

    (75) SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD . RKEY
    (25) SENTENCES_METHOD -> SENTENCES_METHOD . SENTENCE_METHOD
    (27) SENTENCE_METHOD -> . DECLARATIONS
    (28) SENTENCE_METHOD -> . ASSIGNMENTS
    (29) SENTENCE_METHOD -> . SENTENCES_IF
    (30) SENTENCE_METHOD -> . SENTENCES_WHILE
    (31) SENTENCE_METHOD -> . COMENTLINE
    (32) SENTENCE_METHOD -> . COMENTMULTYLINE
    (33) SENTENCE_METHOD -> . BREAK DOT_AN_DCOMMA
    (34) SENTENCE_METHOD -> . CONTINUE DOT_AN_DCOMMA
    (35) SENTENCE_METHOD -> . METHOD_RETURN DOT_AN_DCOMMA
    (36) SENTENCE_METHOD -> . ID LPAREN CALLS RPAREN
    (100) DECLARATIONS -> . DECLARATIONS DECLARATION
    (101) DECLARATIONS -> . DECLARATION
    (107) ASSIGNMENTS -> . ASSIGNMENTS ASSIGNMENT
    (108) ASSIGNMENTS -> . ASSIGNMENT
    (61) SENTENCES_IF -> . SENTENCES_IF SENTENCE_IF
    (62) SENTENCES_IF -> . SENTENCE_IF
    (69) SENTENCES_WHILE -> . SENTENCES_WHILE SENTENCE_WHILE
    (70) SENTENCES_WHILE -> . SENTENCE_WHILE
    (102) DECLARATION -> . TYPE_INT ID IQUAL INT DOT_AN_DCOMMA
    (103) DECLARATION -> . TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA
    (104) DECLARATION -> . TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA
    (105) DECLARATION -> . TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA
    (106) DECLARATION -> . TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (109) ASSIGNMENT -> . ID IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> . ID IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> . ID IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> . ID IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> . ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> . ID IQUAL EXPRESSIONS DOT_AN_DCOMMA
    (63) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY
    (71) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (72) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (73) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (74) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (75) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (76) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA

    RKEY            shift and go to state 272
    COMENTLINE      shift and go to state 182
    COMENTMULTYLINE shift and go to state 183
    BREAK           shift and go to state 184
    CONTINUE        shift and go to state 185
    METHOD_RETURN   shift and go to state 186
    ID              shift and go to state 187
    TYPE_INT        shift and go to state 40
    TYPE_DOUBLE     shift and go to state 41
    TYPE_STRING     shift and go to state 42
    TYPE_CHAR       shift and go to state 43
    TYPE_BOOL       shift and go to state 44
    CONDITIONAL_IF  shift and go to state 28
    ITERATIVE_WHILE shift and go to state 29
    ITERATIVE_DO    shift and go to state 30

    SENTENCE_METHOD                shift and go to state 177
    DECLARATIONS                   shift and go to state 178
    ASSIGNMENTS                    shift and go to state 179
    SENTENCES_IF                   shift and go to state 180
    SENTENCES_WHILE                shift and go to state 181
    DECLARATION                    shift and go to state 26
    ASSIGNMENT                     shift and go to state 27
    SENTENCE_IF                    shift and go to state 174
    SENTENCE_WHILE                 shift and go to state 175

state 253

    (72) SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN . INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (77) INSTRUCTIONS -> . INSTRUCTIONS OPTIONS
    (78) INSTRUCTIONS -> . OPTIONS
    (79) OPTIONS -> . OPTIONS AND OPTIONS
    (80) OPTIONS -> . OPTIONS OR OPTIONS
    (81) OPTIONS -> . OPTIONS NOT OPTIONS
    (82) OPTIONS -> . OPTION
    (83) OPTION -> . OPTION IQUALS OPTION
    (84) OPTION -> . OPTION DIFFERENT OPTION
    (85) OPTION -> . OPTION IQUAL_GREATER OPTION
    (86) OPTION -> . OPTION IQUAL_LESS OPTION
    (87) OPTION -> . OPTION GREATER OPTION
    (88) OPTION -> . OPTION LESS OPTION
    (89) OPTION -> . ID
    (90) OPTION -> . EXPRESSIONS
    (91) EXPRESSIONS -> . EXPRESSIONS E
    (92) EXPRESSIONS -> . E
    (93) E -> . E PLUS E
    (94) E -> . E MINUS E
    (95) E -> . E TIMES E
    (96) E -> . E DIVIDE E
    (97) E -> . E REST E
    (98) E -> . ID
    (99) E -> . TYPE_DATO
    (126) TYPE_DATO -> . INT
    (127) TYPE_DATO -> . FLOAT
    (128) TYPE_DATO -> . STRING
    (129) TYPE_DATO -> . CHAR
    (130) TYPE_DATO -> . DATA_BOOL

    ID              shift and go to state 100
    INT             shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    CHAR            shift and go to state 80
    DATA_BOOL       shift and go to state 81

    INSTRUCTIONS                   shift and go to state 273
    OPTIONS                        shift and go to state 98
    OPTION                         shift and go to state 99
    EXPRESSIONS                    shift and go to state 101
    E                              shift and go to state 89
    TYPE_DATO                      shift and go to state 90

state 254

    (74) SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN . INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (77) INSTRUCTIONS -> . INSTRUCTIONS OPTIONS
    (78) INSTRUCTIONS -> . OPTIONS
    (79) OPTIONS -> . OPTIONS AND OPTIONS
    (80) OPTIONS -> . OPTIONS OR OPTIONS
    (81) OPTIONS -> . OPTIONS NOT OPTIONS
    (82) OPTIONS -> . OPTION
    (83) OPTION -> . OPTION IQUALS OPTION
    (84) OPTION -> . OPTION DIFFERENT OPTION
    (85) OPTION -> . OPTION IQUAL_GREATER OPTION
    (86) OPTION -> . OPTION IQUAL_LESS OPTION
    (87) OPTION -> . OPTION GREATER OPTION
    (88) OPTION -> . OPTION LESS OPTION
    (89) OPTION -> . ID
    (90) OPTION -> . EXPRESSIONS
    (91) EXPRESSIONS -> . EXPRESSIONS E
    (92) EXPRESSIONS -> . E
    (93) E -> . E PLUS E
    (94) E -> . E MINUS E
    (95) E -> . E TIMES E
    (96) E -> . E DIVIDE E
    (97) E -> . E REST E
    (98) E -> . ID
    (99) E -> . TYPE_DATO
    (126) TYPE_DATO -> . INT
    (127) TYPE_DATO -> . FLOAT
    (128) TYPE_DATO -> . STRING
    (129) TYPE_DATO -> . CHAR
    (130) TYPE_DATO -> . DATA_BOOL

    ID              shift and go to state 100
    INT             shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    CHAR            shift and go to state 80
    DATA_BOOL       shift and go to state 81

    INSTRUCTIONS                   shift and go to state 274
    OPTIONS                        shift and go to state 98
    OPTION                         shift and go to state 99
    EXPRESSIONS                    shift and go to state 101
    E                              shift and go to state 89
    TYPE_DATO                      shift and go to state 90

state 255

    (49) SENTENCE_FUNTION -> ID LPAREN CALLS . RPAREN
    (122) CALLS -> CALLS . COMMA CALL

    RPAREN          shift and go to state 275
    COMMA           shift and go to state 129


state 256

    (76) SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN . INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (77) INSTRUCTIONS -> . INSTRUCTIONS OPTIONS
    (78) INSTRUCTIONS -> . OPTIONS
    (79) OPTIONS -> . OPTIONS AND OPTIONS
    (80) OPTIONS -> . OPTIONS OR OPTIONS
    (81) OPTIONS -> . OPTIONS NOT OPTIONS
    (82) OPTIONS -> . OPTION
    (83) OPTION -> . OPTION IQUALS OPTION
    (84) OPTION -> . OPTION DIFFERENT OPTION
    (85) OPTION -> . OPTION IQUAL_GREATER OPTION
    (86) OPTION -> . OPTION IQUAL_LESS OPTION
    (87) OPTION -> . OPTION GREATER OPTION
    (88) OPTION -> . OPTION LESS OPTION
    (89) OPTION -> . ID
    (90) OPTION -> . EXPRESSIONS
    (91) EXPRESSIONS -> . EXPRESSIONS E
    (92) EXPRESSIONS -> . E
    (93) E -> . E PLUS E
    (94) E -> . E MINUS E
    (95) E -> . E TIMES E
    (96) E -> . E DIVIDE E
    (97) E -> . E REST E
    (98) E -> . ID
    (99) E -> . TYPE_DATO
    (126) TYPE_DATO -> . INT
    (127) TYPE_DATO -> . FLOAT
    (128) TYPE_DATO -> . STRING
    (129) TYPE_DATO -> . CHAR
    (130) TYPE_DATO -> . DATA_BOOL

    ID              shift and go to state 100
    INT             shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    CHAR            shift and go to state 80
    DATA_BOOL       shift and go to state 81

    INSTRUCTIONS                   shift and go to state 276
    OPTIONS                        shift and go to state 98
    OPTION                         shift and go to state 99
    EXPRESSIONS                    shift and go to state 101
    E                              shift and go to state 89
    TYPE_DATO                      shift and go to state 90

state 257

    (36) SENTENCE_METHOD -> ID LPAREN CALLS . RPAREN
    (122) CALLS -> CALLS . COMMA CALL

    RPAREN          shift and go to state 277
    COMMA           shift and go to state 129


state 258

    (60) SENTENCE -> ID LPAREN CALLS RPAREN .
    (49) SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .
    (36) SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .

  ! reduce/reduce conflict for RKEY resolved using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .)
  ! reduce/reduce conflict for COMENTLINE resolved using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .)
  ! reduce/reduce conflict for COMENTMULTYLINE resolved using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .)
  ! reduce/reduce conflict for BREAK resolved using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .)
  ! reduce/reduce conflict for ID resolved using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .)
  ! reduce/reduce conflict for TYPE_INT resolved using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .)
  ! reduce/reduce conflict for TYPE_DOUBLE resolved using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .)
  ! reduce/reduce conflict for TYPE_STRING resolved using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .)
  ! reduce/reduce conflict for TYPE_CHAR resolved using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .)
  ! reduce/reduce conflict for TYPE_BOOL resolved using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .)
  ! reduce/reduce conflict for CONDITIONAL_IF resolved using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .)
  ! reduce/reduce conflict for ITERATIVE_WHILE resolved using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .)
  ! reduce/reduce conflict for ITERATIVE_DO resolved using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .)
  ! reduce/reduce conflict for RKEY resolved using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
  ! reduce/reduce conflict for COMENTLINE resolved using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
  ! reduce/reduce conflict for COMENTMULTYLINE resolved using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
  ! reduce/reduce conflict for BREAK resolved using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
  ! reduce/reduce conflict for METHOD_RETURN resolved using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
  ! reduce/reduce conflict for ID resolved using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
  ! reduce/reduce conflict for TYPE_INT resolved using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
  ! reduce/reduce conflict for TYPE_DOUBLE resolved using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
  ! reduce/reduce conflict for TYPE_STRING resolved using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
  ! reduce/reduce conflict for TYPE_CHAR resolved using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
  ! reduce/reduce conflict for TYPE_BOOL resolved using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
  ! reduce/reduce conflict for CONDITIONAL_IF resolved using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
  ! reduce/reduce conflict for ITERATIVE_WHILE resolved using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
  ! reduce/reduce conflict for ITERATIVE_DO resolved using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
    RKEY            reduce using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
    COMENTLINE      reduce using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
    COMENTMULTYLINE reduce using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
    BREAK           reduce using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
    CONTINUE        reduce using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
    METHOD_RETURN   reduce using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
    ID              reduce using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
    TYPE_INT        reduce using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
    TYPE_DOUBLE     reduce using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
    TYPE_STRING     reduce using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
    TYPE_CHAR       reduce using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
    TYPE_BOOL       reduce using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
    CONDITIONAL_IF  reduce using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
    ITERATIVE_WHILE reduce using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
    ITERATIVE_DO    reduce using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)

  ! RKEY            [ reduce using rule 60 (SENTENCE -> ID LPAREN CALLS RPAREN .) ]
  ! COMENTLINE      [ reduce using rule 60 (SENTENCE -> ID LPAREN CALLS RPAREN .) ]
  ! COMENTMULTYLINE [ reduce using rule 60 (SENTENCE -> ID LPAREN CALLS RPAREN .) ]
  ! BREAK           [ reduce using rule 60 (SENTENCE -> ID LPAREN CALLS RPAREN .) ]
  ! CONTINUE        [ reduce using rule 60 (SENTENCE -> ID LPAREN CALLS RPAREN .) ]
  ! ID              [ reduce using rule 60 (SENTENCE -> ID LPAREN CALLS RPAREN .) ]
  ! CONDITIONAL_IF  [ reduce using rule 60 (SENTENCE -> ID LPAREN CALLS RPAREN .) ]
  ! ITERATIVE_WHILE [ reduce using rule 60 (SENTENCE -> ID LPAREN CALLS RPAREN .) ]
  ! ITERATIVE_DO    [ reduce using rule 60 (SENTENCE -> ID LPAREN CALLS RPAREN .) ]
  ! TYPE_INT        [ reduce using rule 60 (SENTENCE -> ID LPAREN CALLS RPAREN .) ]
  ! TYPE_DOUBLE     [ reduce using rule 60 (SENTENCE -> ID LPAREN CALLS RPAREN .) ]
  ! TYPE_STRING     [ reduce using rule 60 (SENTENCE -> ID LPAREN CALLS RPAREN .) ]
  ! TYPE_CHAR       [ reduce using rule 60 (SENTENCE -> ID LPAREN CALLS RPAREN .) ]
  ! TYPE_BOOL       [ reduce using rule 60 (SENTENCE -> ID LPAREN CALLS RPAREN .) ]
  ! RKEY            [ reduce using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .) ]
  ! COMENTLINE      [ reduce using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .) ]
  ! COMENTMULTYLINE [ reduce using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .) ]
  ! BREAK           [ reduce using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .) ]
  ! CONTINUE        [ reduce using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .) ]
  ! METHOD_RETURN   [ reduce using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .) ]
  ! ID              [ reduce using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .) ]
  ! TYPE_INT        [ reduce using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .) ]
  ! TYPE_DOUBLE     [ reduce using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .) ]
  ! TYPE_STRING     [ reduce using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .) ]
  ! TYPE_CHAR       [ reduce using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .) ]
  ! TYPE_BOOL       [ reduce using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .) ]
  ! CONDITIONAL_IF  [ reduce using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .) ]
  ! ITERATIVE_WHILE [ reduce using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .) ]
  ! ITERATIVE_DO    [ reduce using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .) ]


state 259

    (10) METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY empty RKEY .

    METHOD_VOID     reduce using rule 10 (METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY empty RKEY .)
    TYPE_INT        reduce using rule 10 (METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY empty RKEY .)
    TYPE_DOUBLE     reduce using rule 10 (METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY empty RKEY .)
    TYPE_STRING     reduce using rule 10 (METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY empty RKEY .)
    TYPE_CHAR       reduce using rule 10 (METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY empty RKEY .)
    TYPE_BOOL       reduce using rule 10 (METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY empty RKEY .)
    COMENTLINE      reduce using rule 10 (METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY empty RKEY .)
    COMENTMULTYLINE reduce using rule 10 (METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY empty RKEY .)
    BREAK           reduce using rule 10 (METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY empty RKEY .)
    CONTINUE        reduce using rule 10 (METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY empty RKEY .)
    ID              reduce using rule 10 (METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY empty RKEY .)
    CONDITIONAL_IF  reduce using rule 10 (METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY empty RKEY .)
    ITERATIVE_WHILE reduce using rule 10 (METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY empty RKEY .)
    ITERATIVE_DO    reduce using rule 10 (METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY empty RKEY .)
    $end            reduce using rule 10 (METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY empty RKEY .)


state 260

    (11) METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY SENTENCES_METHOD RKEY .

    METHOD_VOID     reduce using rule 11 (METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY SENTENCES_METHOD RKEY .)
    TYPE_INT        reduce using rule 11 (METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY SENTENCES_METHOD RKEY .)
    TYPE_DOUBLE     reduce using rule 11 (METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY SENTENCES_METHOD RKEY .)
    TYPE_STRING     reduce using rule 11 (METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY SENTENCES_METHOD RKEY .)
    TYPE_CHAR       reduce using rule 11 (METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY SENTENCES_METHOD RKEY .)
    TYPE_BOOL       reduce using rule 11 (METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY SENTENCES_METHOD RKEY .)
    COMENTLINE      reduce using rule 11 (METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY SENTENCES_METHOD RKEY .)
    COMENTMULTYLINE reduce using rule 11 (METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY SENTENCES_METHOD RKEY .)
    BREAK           reduce using rule 11 (METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY SENTENCES_METHOD RKEY .)
    CONTINUE        reduce using rule 11 (METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY SENTENCES_METHOD RKEY .)
    ID              reduce using rule 11 (METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY SENTENCES_METHOD RKEY .)
    CONDITIONAL_IF  reduce using rule 11 (METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY SENTENCES_METHOD RKEY .)
    ITERATIVE_WHILE reduce using rule 11 (METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY SENTENCES_METHOD RKEY .)
    ITERATIVE_DO    reduce using rule 11 (METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY SENTENCES_METHOD RKEY .)
    $end            reduce using rule 11 (METHOD -> METHOD_VOID ID LPAREN RPAREN LKEY SENTENCES_METHOD RKEY .)


state 261

    (12) METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY empty . RKEY

    RKEY            shift and go to state 278


state 262

    (13) METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_METHOD . RKEY
    (25) SENTENCES_METHOD -> SENTENCES_METHOD . SENTENCE_METHOD
    (27) SENTENCE_METHOD -> . DECLARATIONS
    (28) SENTENCE_METHOD -> . ASSIGNMENTS
    (29) SENTENCE_METHOD -> . SENTENCES_IF
    (30) SENTENCE_METHOD -> . SENTENCES_WHILE
    (31) SENTENCE_METHOD -> . COMENTLINE
    (32) SENTENCE_METHOD -> . COMENTMULTYLINE
    (33) SENTENCE_METHOD -> . BREAK DOT_AN_DCOMMA
    (34) SENTENCE_METHOD -> . CONTINUE DOT_AN_DCOMMA
    (35) SENTENCE_METHOD -> . METHOD_RETURN DOT_AN_DCOMMA
    (36) SENTENCE_METHOD -> . ID LPAREN CALLS RPAREN
    (100) DECLARATIONS -> . DECLARATIONS DECLARATION
    (101) DECLARATIONS -> . DECLARATION
    (107) ASSIGNMENTS -> . ASSIGNMENTS ASSIGNMENT
    (108) ASSIGNMENTS -> . ASSIGNMENT
    (61) SENTENCES_IF -> . SENTENCES_IF SENTENCE_IF
    (62) SENTENCES_IF -> . SENTENCE_IF
    (69) SENTENCES_WHILE -> . SENTENCES_WHILE SENTENCE_WHILE
    (70) SENTENCES_WHILE -> . SENTENCE_WHILE
    (102) DECLARATION -> . TYPE_INT ID IQUAL INT DOT_AN_DCOMMA
    (103) DECLARATION -> . TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA
    (104) DECLARATION -> . TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA
    (105) DECLARATION -> . TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA
    (106) DECLARATION -> . TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (109) ASSIGNMENT -> . ID IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> . ID IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> . ID IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> . ID IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> . ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> . ID IQUAL EXPRESSIONS DOT_AN_DCOMMA
    (63) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY
    (71) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (72) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (73) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (74) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (75) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (76) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA

    RKEY            shift and go to state 279
    COMENTLINE      shift and go to state 182
    COMENTMULTYLINE shift and go to state 183
    BREAK           shift and go to state 184
    CONTINUE        shift and go to state 185
    METHOD_RETURN   shift and go to state 186
    ID              shift and go to state 187
    TYPE_INT        shift and go to state 40
    TYPE_DOUBLE     shift and go to state 41
    TYPE_STRING     shift and go to state 42
    TYPE_CHAR       shift and go to state 43
    TYPE_BOOL       shift and go to state 44
    CONDITIONAL_IF  shift and go to state 28
    ITERATIVE_WHILE shift and go to state 29
    ITERATIVE_DO    shift and go to state 30

    SENTENCE_METHOD                shift and go to state 177
    DECLARATIONS                   shift and go to state 178
    ASSIGNMENTS                    shift and go to state 179
    SENTENCES_IF                   shift and go to state 180
    SENTENCES_WHILE                shift and go to state 181
    DECLARATION                    shift and go to state 26
    ASSIGNMENT                     shift and go to state 27
    SENTENCE_IF                    shift and go to state 174
    SENTENCE_WHILE                 shift and go to state 175

state 263

    (21) COUPLER -> ID LPAREN RPAREN LKEY empty RKEY .

    TYPE_INT        reduce using rule 21 (COUPLER -> ID LPAREN RPAREN LKEY empty RKEY .)
    TYPE_DOUBLE     reduce using rule 21 (COUPLER -> ID LPAREN RPAREN LKEY empty RKEY .)
    TYPE_STRING     reduce using rule 21 (COUPLER -> ID LPAREN RPAREN LKEY empty RKEY .)
    TYPE_CHAR       reduce using rule 21 (COUPLER -> ID LPAREN RPAREN LKEY empty RKEY .)
    TYPE_BOOL       reduce using rule 21 (COUPLER -> ID LPAREN RPAREN LKEY empty RKEY .)
    METHOD_VOID     reduce using rule 21 (COUPLER -> ID LPAREN RPAREN LKEY empty RKEY .)
    COMENTLINE      reduce using rule 21 (COUPLER -> ID LPAREN RPAREN LKEY empty RKEY .)
    COMENTMULTYLINE reduce using rule 21 (COUPLER -> ID LPAREN RPAREN LKEY empty RKEY .)
    BREAK           reduce using rule 21 (COUPLER -> ID LPAREN RPAREN LKEY empty RKEY .)
    CONTINUE        reduce using rule 21 (COUPLER -> ID LPAREN RPAREN LKEY empty RKEY .)
    ID              reduce using rule 21 (COUPLER -> ID LPAREN RPAREN LKEY empty RKEY .)
    CONDITIONAL_IF  reduce using rule 21 (COUPLER -> ID LPAREN RPAREN LKEY empty RKEY .)
    ITERATIVE_WHILE reduce using rule 21 (COUPLER -> ID LPAREN RPAREN LKEY empty RKEY .)
    ITERATIVE_DO    reduce using rule 21 (COUPLER -> ID LPAREN RPAREN LKEY empty RKEY .)
    $end            reduce using rule 21 (COUPLER -> ID LPAREN RPAREN LKEY empty RKEY .)


state 264

    (22) COUPLER -> ID LPAREN RPAREN LKEY SENTENCES_FUNTION RKEY .

    TYPE_INT        reduce using rule 22 (COUPLER -> ID LPAREN RPAREN LKEY SENTENCES_FUNTION RKEY .)
    TYPE_DOUBLE     reduce using rule 22 (COUPLER -> ID LPAREN RPAREN LKEY SENTENCES_FUNTION RKEY .)
    TYPE_STRING     reduce using rule 22 (COUPLER -> ID LPAREN RPAREN LKEY SENTENCES_FUNTION RKEY .)
    TYPE_CHAR       reduce using rule 22 (COUPLER -> ID LPAREN RPAREN LKEY SENTENCES_FUNTION RKEY .)
    TYPE_BOOL       reduce using rule 22 (COUPLER -> ID LPAREN RPAREN LKEY SENTENCES_FUNTION RKEY .)
    METHOD_VOID     reduce using rule 22 (COUPLER -> ID LPAREN RPAREN LKEY SENTENCES_FUNTION RKEY .)
    COMENTLINE      reduce using rule 22 (COUPLER -> ID LPAREN RPAREN LKEY SENTENCES_FUNTION RKEY .)
    COMENTMULTYLINE reduce using rule 22 (COUPLER -> ID LPAREN RPAREN LKEY SENTENCES_FUNTION RKEY .)
    BREAK           reduce using rule 22 (COUPLER -> ID LPAREN RPAREN LKEY SENTENCES_FUNTION RKEY .)
    CONTINUE        reduce using rule 22 (COUPLER -> ID LPAREN RPAREN LKEY SENTENCES_FUNTION RKEY .)
    ID              reduce using rule 22 (COUPLER -> ID LPAREN RPAREN LKEY SENTENCES_FUNTION RKEY .)
    CONDITIONAL_IF  reduce using rule 22 (COUPLER -> ID LPAREN RPAREN LKEY SENTENCES_FUNTION RKEY .)
    ITERATIVE_WHILE reduce using rule 22 (COUPLER -> ID LPAREN RPAREN LKEY SENTENCES_FUNTION RKEY .)
    ITERATIVE_DO    reduce using rule 22 (COUPLER -> ID LPAREN RPAREN LKEY SENTENCES_FUNTION RKEY .)
    $end            reduce using rule 22 (COUPLER -> ID LPAREN RPAREN LKEY SENTENCES_FUNTION RKEY .)


state 265

    (23) COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY empty . RKEY

    RKEY            shift and go to state 280


state 266

    (24) COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_FUNTION . RKEY
    (37) SENTENCES_FUNTION -> SENTENCES_FUNTION . SENTENCE_FUNTION
    (39) SENTENCE_FUNTION -> . DECLARATIONS
    (40) SENTENCE_FUNTION -> . ASSIGNMENTS
    (41) SENTENCE_FUNTION -> . SENTENCES_IF
    (42) SENTENCE_FUNTION -> . SENTENCES_WHILE
    (43) SENTENCE_FUNTION -> . COMENTLINE
    (44) SENTENCE_FUNTION -> . COMENTMULTYLINE
    (45) SENTENCE_FUNTION -> . BREAK DOT_AN_DCOMMA
    (46) SENTENCE_FUNTION -> . CONTINUE DOT_AN_DCOMMA
    (47) SENTENCE_FUNTION -> . METHOD_RETURN TYPE_DATO DOT_AN_DCOMMA
    (48) SENTENCE_FUNTION -> . METHOD_RETURN ID DOT_AN_DCOMMA
    (49) SENTENCE_FUNTION -> . ID LPAREN CALLS RPAREN
    (100) DECLARATIONS -> . DECLARATIONS DECLARATION
    (101) DECLARATIONS -> . DECLARATION
    (107) ASSIGNMENTS -> . ASSIGNMENTS ASSIGNMENT
    (108) ASSIGNMENTS -> . ASSIGNMENT
    (61) SENTENCES_IF -> . SENTENCES_IF SENTENCE_IF
    (62) SENTENCES_IF -> . SENTENCE_IF
    (69) SENTENCES_WHILE -> . SENTENCES_WHILE SENTENCE_WHILE
    (70) SENTENCES_WHILE -> . SENTENCE_WHILE
    (102) DECLARATION -> . TYPE_INT ID IQUAL INT DOT_AN_DCOMMA
    (103) DECLARATION -> . TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA
    (104) DECLARATION -> . TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA
    (105) DECLARATION -> . TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA
    (106) DECLARATION -> . TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (109) ASSIGNMENT -> . ID IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> . ID IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> . ID IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> . ID IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> . ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> . ID IQUAL EXPRESSIONS DOT_AN_DCOMMA
    (63) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY
    (71) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (72) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (73) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (74) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (75) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (76) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA

    RKEY            shift and go to state 281
    COMENTLINE      shift and go to state 168
    COMENTMULTYLINE shift and go to state 169
    BREAK           shift and go to state 170
    CONTINUE        shift and go to state 171
    METHOD_RETURN   shift and go to state 172
    ID              shift and go to state 173
    TYPE_INT        shift and go to state 40
    TYPE_DOUBLE     shift and go to state 41
    TYPE_STRING     shift and go to state 42
    TYPE_CHAR       shift and go to state 43
    TYPE_BOOL       shift and go to state 44
    CONDITIONAL_IF  shift and go to state 28
    ITERATIVE_WHILE shift and go to state 29
    ITERATIVE_DO    shift and go to state 30

    SENTENCE_FUNTION               shift and go to state 163
    DECLARATIONS                   shift and go to state 164
    ASSIGNMENTS                    shift and go to state 165
    SENTENCES_IF                   shift and go to state 166
    SENTENCES_WHILE                shift and go to state 167
    DECLARATION                    shift and go to state 26
    ASSIGNMENT                     shift and go to state 27
    SENTENCE_IF                    shift and go to state 174
    SENTENCE_WHILE                 shift and go to state 175

state 267

    (63) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .
    (64) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY . CONDITIONAL_ELSE LKEY SENTENCES RKEY

    COMENTLINE      reduce using rule 63 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .)
    COMENTMULTYLINE reduce using rule 63 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .)
    BREAK           reduce using rule 63 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .)
    CONTINUE        reduce using rule 63 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .)
    ID              reduce using rule 63 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .)
    CONDITIONAL_IF  reduce using rule 63 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .)
    ITERATIVE_WHILE reduce using rule 63 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .)
    ITERATIVE_DO    reduce using rule 63 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .)
    TYPE_INT        reduce using rule 63 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .)
    TYPE_DOUBLE     reduce using rule 63 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .)
    TYPE_STRING     reduce using rule 63 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .)
    TYPE_CHAR       reduce using rule 63 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .)
    TYPE_BOOL       reduce using rule 63 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .)
    METHOD_VOID     reduce using rule 63 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .)
    $end            reduce using rule 63 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .)
    RKEY            reduce using rule 63 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .)
    METHOD_RETURN   reduce using rule 63 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .)
    CONDITIONAL_ELSE shift and go to state 282


state 268

    (65) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .
    (66) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY . CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY

    COMENTLINE      reduce using rule 65 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    COMENTMULTYLINE reduce using rule 65 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    BREAK           reduce using rule 65 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    CONTINUE        reduce using rule 65 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    ID              reduce using rule 65 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    CONDITIONAL_IF  reduce using rule 65 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    ITERATIVE_WHILE reduce using rule 65 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    ITERATIVE_DO    reduce using rule 65 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    TYPE_INT        reduce using rule 65 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    TYPE_DOUBLE     reduce using rule 65 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    TYPE_STRING     reduce using rule 65 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    TYPE_CHAR       reduce using rule 65 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    TYPE_BOOL       reduce using rule 65 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    METHOD_VOID     reduce using rule 65 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    $end            reduce using rule 65 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    RKEY            reduce using rule 65 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    METHOD_RETURN   reduce using rule 65 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    CONDITIONAL_ELSE shift and go to state 283


state 269

    (67) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .
    (68) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY . CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY

    COMENTLINE      reduce using rule 67 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .)
    COMENTMULTYLINE reduce using rule 67 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .)
    BREAK           reduce using rule 67 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .)
    CONTINUE        reduce using rule 67 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .)
    ID              reduce using rule 67 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .)
    CONDITIONAL_IF  reduce using rule 67 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .)
    ITERATIVE_WHILE reduce using rule 67 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .)
    ITERATIVE_DO    reduce using rule 67 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .)
    TYPE_INT        reduce using rule 67 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .)
    TYPE_DOUBLE     reduce using rule 67 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .)
    TYPE_STRING     reduce using rule 67 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .)
    TYPE_CHAR       reduce using rule 67 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .)
    TYPE_BOOL       reduce using rule 67 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .)
    METHOD_VOID     reduce using rule 67 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .)
    $end            reduce using rule 67 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .)
    RKEY            reduce using rule 67 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .)
    METHOD_RETURN   reduce using rule 67 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .)
    CONDITIONAL_ELSE shift and go to state 284


state 270

    (71) SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .

    COMENTLINE      reduce using rule 71 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .)
    COMENTMULTYLINE reduce using rule 71 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .)
    BREAK           reduce using rule 71 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .)
    CONTINUE        reduce using rule 71 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .)
    ID              reduce using rule 71 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .)
    CONDITIONAL_IF  reduce using rule 71 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .)
    ITERATIVE_WHILE reduce using rule 71 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .)
    ITERATIVE_DO    reduce using rule 71 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .)
    TYPE_INT        reduce using rule 71 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .)
    TYPE_DOUBLE     reduce using rule 71 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .)
    TYPE_STRING     reduce using rule 71 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .)
    TYPE_CHAR       reduce using rule 71 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .)
    TYPE_BOOL       reduce using rule 71 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .)
    METHOD_VOID     reduce using rule 71 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .)
    $end            reduce using rule 71 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .)
    RKEY            reduce using rule 71 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .)
    METHOD_RETURN   reduce using rule 71 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY .)


state 271

    (73) SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .

    COMENTLINE      reduce using rule 73 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    COMENTMULTYLINE reduce using rule 73 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    BREAK           reduce using rule 73 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    CONTINUE        reduce using rule 73 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    ID              reduce using rule 73 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    CONDITIONAL_IF  reduce using rule 73 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    ITERATIVE_WHILE reduce using rule 73 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    ITERATIVE_DO    reduce using rule 73 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    TYPE_INT        reduce using rule 73 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    TYPE_DOUBLE     reduce using rule 73 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    TYPE_STRING     reduce using rule 73 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    TYPE_CHAR       reduce using rule 73 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    TYPE_BOOL       reduce using rule 73 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    METHOD_VOID     reduce using rule 73 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    $end            reduce using rule 73 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    RKEY            reduce using rule 73 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    METHOD_RETURN   reduce using rule 73 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY .)


state 272

    (75) SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .

    COMENTLINE      reduce using rule 75 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .)
    COMENTMULTYLINE reduce using rule 75 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .)
    BREAK           reduce using rule 75 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .)
    CONTINUE        reduce using rule 75 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .)
    ID              reduce using rule 75 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .)
    CONDITIONAL_IF  reduce using rule 75 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .)
    ITERATIVE_WHILE reduce using rule 75 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .)
    ITERATIVE_DO    reduce using rule 75 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .)
    TYPE_INT        reduce using rule 75 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .)
    TYPE_DOUBLE     reduce using rule 75 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .)
    TYPE_STRING     reduce using rule 75 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .)
    TYPE_CHAR       reduce using rule 75 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .)
    TYPE_BOOL       reduce using rule 75 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .)
    METHOD_VOID     reduce using rule 75 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .)
    $end            reduce using rule 75 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .)
    RKEY            reduce using rule 75 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .)
    METHOD_RETURN   reduce using rule 75 (SENTENCE_WHILE -> ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY .)


state 273

    (72) SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS . RPAREN DOT_AN_DCOMMA
    (77) INSTRUCTIONS -> INSTRUCTIONS . OPTIONS
    (79) OPTIONS -> . OPTIONS AND OPTIONS
    (80) OPTIONS -> . OPTIONS OR OPTIONS
    (81) OPTIONS -> . OPTIONS NOT OPTIONS
    (82) OPTIONS -> . OPTION
    (83) OPTION -> . OPTION IQUALS OPTION
    (84) OPTION -> . OPTION DIFFERENT OPTION
    (85) OPTION -> . OPTION IQUAL_GREATER OPTION
    (86) OPTION -> . OPTION IQUAL_LESS OPTION
    (87) OPTION -> . OPTION GREATER OPTION
    (88) OPTION -> . OPTION LESS OPTION
    (89) OPTION -> . ID
    (90) OPTION -> . EXPRESSIONS
    (91) EXPRESSIONS -> . EXPRESSIONS E
    (92) EXPRESSIONS -> . E
    (93) E -> . E PLUS E
    (94) E -> . E MINUS E
    (95) E -> . E TIMES E
    (96) E -> . E DIVIDE E
    (97) E -> . E REST E
    (98) E -> . ID
    (99) E -> . TYPE_DATO
    (126) TYPE_DATO -> . INT
    (127) TYPE_DATO -> . FLOAT
    (128) TYPE_DATO -> . STRING
    (129) TYPE_DATO -> . CHAR
    (130) TYPE_DATO -> . DATA_BOOL

    RPAREN          shift and go to state 285
    ID              shift and go to state 100
    INT             shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    CHAR            shift and go to state 80
    DATA_BOOL       shift and go to state 81

    OPTIONS                        shift and go to state 150
    OPTION                         shift and go to state 99
    EXPRESSIONS                    shift and go to state 101
    E                              shift and go to state 89
    TYPE_DATO                      shift and go to state 90

state 274

    (74) SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS . RPAREN DOT_AN_DCOMMA
    (77) INSTRUCTIONS -> INSTRUCTIONS . OPTIONS
    (79) OPTIONS -> . OPTIONS AND OPTIONS
    (80) OPTIONS -> . OPTIONS OR OPTIONS
    (81) OPTIONS -> . OPTIONS NOT OPTIONS
    (82) OPTIONS -> . OPTION
    (83) OPTION -> . OPTION IQUALS OPTION
    (84) OPTION -> . OPTION DIFFERENT OPTION
    (85) OPTION -> . OPTION IQUAL_GREATER OPTION
    (86) OPTION -> . OPTION IQUAL_LESS OPTION
    (87) OPTION -> . OPTION GREATER OPTION
    (88) OPTION -> . OPTION LESS OPTION
    (89) OPTION -> . ID
    (90) OPTION -> . EXPRESSIONS
    (91) EXPRESSIONS -> . EXPRESSIONS E
    (92) EXPRESSIONS -> . E
    (93) E -> . E PLUS E
    (94) E -> . E MINUS E
    (95) E -> . E TIMES E
    (96) E -> . E DIVIDE E
    (97) E -> . E REST E
    (98) E -> . ID
    (99) E -> . TYPE_DATO
    (126) TYPE_DATO -> . INT
    (127) TYPE_DATO -> . FLOAT
    (128) TYPE_DATO -> . STRING
    (129) TYPE_DATO -> . CHAR
    (130) TYPE_DATO -> . DATA_BOOL

    RPAREN          shift and go to state 286
    ID              shift and go to state 100
    INT             shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    CHAR            shift and go to state 80
    DATA_BOOL       shift and go to state 81

    OPTIONS                        shift and go to state 150
    OPTION                         shift and go to state 99
    EXPRESSIONS                    shift and go to state 101
    E                              shift and go to state 89
    TYPE_DATO                      shift and go to state 90

state 275

    (49) SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .

    RKEY            reduce using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .)
    COMENTLINE      reduce using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .)
    COMENTMULTYLINE reduce using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .)
    BREAK           reduce using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .)
    CONTINUE        reduce using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .)
    METHOD_RETURN   reduce using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .)
    ID              reduce using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .)
    TYPE_INT        reduce using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .)
    TYPE_DOUBLE     reduce using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .)
    TYPE_STRING     reduce using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .)
    TYPE_CHAR       reduce using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .)
    TYPE_BOOL       reduce using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .)
    CONDITIONAL_IF  reduce using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .)
    ITERATIVE_WHILE reduce using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .)
    ITERATIVE_DO    reduce using rule 49 (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN .)


state 276

    (76) SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS . RPAREN DOT_AN_DCOMMA
    (77) INSTRUCTIONS -> INSTRUCTIONS . OPTIONS
    (79) OPTIONS -> . OPTIONS AND OPTIONS
    (80) OPTIONS -> . OPTIONS OR OPTIONS
    (81) OPTIONS -> . OPTIONS NOT OPTIONS
    (82) OPTIONS -> . OPTION
    (83) OPTION -> . OPTION IQUALS OPTION
    (84) OPTION -> . OPTION DIFFERENT OPTION
    (85) OPTION -> . OPTION IQUAL_GREATER OPTION
    (86) OPTION -> . OPTION IQUAL_LESS OPTION
    (87) OPTION -> . OPTION GREATER OPTION
    (88) OPTION -> . OPTION LESS OPTION
    (89) OPTION -> . ID
    (90) OPTION -> . EXPRESSIONS
    (91) EXPRESSIONS -> . EXPRESSIONS E
    (92) EXPRESSIONS -> . E
    (93) E -> . E PLUS E
    (94) E -> . E MINUS E
    (95) E -> . E TIMES E
    (96) E -> . E DIVIDE E
    (97) E -> . E REST E
    (98) E -> . ID
    (99) E -> . TYPE_DATO
    (126) TYPE_DATO -> . INT
    (127) TYPE_DATO -> . FLOAT
    (128) TYPE_DATO -> . STRING
    (129) TYPE_DATO -> . CHAR
    (130) TYPE_DATO -> . DATA_BOOL

    RPAREN          shift and go to state 287
    ID              shift and go to state 100
    INT             shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    CHAR            shift and go to state 80
    DATA_BOOL       shift and go to state 81

    OPTIONS                        shift and go to state 150
    OPTION                         shift and go to state 99
    EXPRESSIONS                    shift and go to state 101
    E                              shift and go to state 89
    TYPE_DATO                      shift and go to state 90

state 277

    (36) SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .

    RKEY            reduce using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
    COMENTLINE      reduce using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
    COMENTMULTYLINE reduce using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
    BREAK           reduce using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
    CONTINUE        reduce using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
    METHOD_RETURN   reduce using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
    ID              reduce using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
    TYPE_INT        reduce using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
    TYPE_DOUBLE     reduce using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
    TYPE_STRING     reduce using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
    TYPE_CHAR       reduce using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
    TYPE_BOOL       reduce using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
    CONDITIONAL_IF  reduce using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
    ITERATIVE_WHILE reduce using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)
    ITERATIVE_DO    reduce using rule 36 (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN .)


state 278

    (12) METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY empty RKEY .

    METHOD_VOID     reduce using rule 12 (METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY empty RKEY .)
    TYPE_INT        reduce using rule 12 (METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY empty RKEY .)
    TYPE_DOUBLE     reduce using rule 12 (METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY empty RKEY .)
    TYPE_STRING     reduce using rule 12 (METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY empty RKEY .)
    TYPE_CHAR       reduce using rule 12 (METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY empty RKEY .)
    TYPE_BOOL       reduce using rule 12 (METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY empty RKEY .)
    COMENTLINE      reduce using rule 12 (METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY empty RKEY .)
    COMENTMULTYLINE reduce using rule 12 (METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY empty RKEY .)
    BREAK           reduce using rule 12 (METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY empty RKEY .)
    CONTINUE        reduce using rule 12 (METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY empty RKEY .)
    ID              reduce using rule 12 (METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY empty RKEY .)
    CONDITIONAL_IF  reduce using rule 12 (METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY empty RKEY .)
    ITERATIVE_WHILE reduce using rule 12 (METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY empty RKEY .)
    ITERATIVE_DO    reduce using rule 12 (METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY empty RKEY .)
    $end            reduce using rule 12 (METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY empty RKEY .)


state 279

    (13) METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_METHOD RKEY .

    METHOD_VOID     reduce using rule 13 (METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_METHOD RKEY .)
    TYPE_INT        reduce using rule 13 (METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_METHOD RKEY .)
    TYPE_DOUBLE     reduce using rule 13 (METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_METHOD RKEY .)
    TYPE_STRING     reduce using rule 13 (METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_METHOD RKEY .)
    TYPE_CHAR       reduce using rule 13 (METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_METHOD RKEY .)
    TYPE_BOOL       reduce using rule 13 (METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_METHOD RKEY .)
    COMENTLINE      reduce using rule 13 (METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_METHOD RKEY .)
    COMENTMULTYLINE reduce using rule 13 (METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_METHOD RKEY .)
    BREAK           reduce using rule 13 (METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_METHOD RKEY .)
    CONTINUE        reduce using rule 13 (METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_METHOD RKEY .)
    ID              reduce using rule 13 (METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_METHOD RKEY .)
    CONDITIONAL_IF  reduce using rule 13 (METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_METHOD RKEY .)
    ITERATIVE_WHILE reduce using rule 13 (METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_METHOD RKEY .)
    ITERATIVE_DO    reduce using rule 13 (METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_METHOD RKEY .)
    $end            reduce using rule 13 (METHOD -> METHOD_VOID ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_METHOD RKEY .)


state 280

    (23) COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY empty RKEY .

    TYPE_INT        reduce using rule 23 (COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY empty RKEY .)
    TYPE_DOUBLE     reduce using rule 23 (COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY empty RKEY .)
    TYPE_STRING     reduce using rule 23 (COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY empty RKEY .)
    TYPE_CHAR       reduce using rule 23 (COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY empty RKEY .)
    TYPE_BOOL       reduce using rule 23 (COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY empty RKEY .)
    METHOD_VOID     reduce using rule 23 (COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY empty RKEY .)
    COMENTLINE      reduce using rule 23 (COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY empty RKEY .)
    COMENTMULTYLINE reduce using rule 23 (COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY empty RKEY .)
    BREAK           reduce using rule 23 (COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY empty RKEY .)
    CONTINUE        reduce using rule 23 (COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY empty RKEY .)
    ID              reduce using rule 23 (COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY empty RKEY .)
    CONDITIONAL_IF  reduce using rule 23 (COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY empty RKEY .)
    ITERATIVE_WHILE reduce using rule 23 (COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY empty RKEY .)
    ITERATIVE_DO    reduce using rule 23 (COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY empty RKEY .)
    $end            reduce using rule 23 (COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY empty RKEY .)


state 281

    (24) COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_FUNTION RKEY .

    TYPE_INT        reduce using rule 24 (COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    TYPE_DOUBLE     reduce using rule 24 (COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    TYPE_STRING     reduce using rule 24 (COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    TYPE_CHAR       reduce using rule 24 (COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    TYPE_BOOL       reduce using rule 24 (COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    METHOD_VOID     reduce using rule 24 (COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    COMENTLINE      reduce using rule 24 (COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    COMENTMULTYLINE reduce using rule 24 (COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    BREAK           reduce using rule 24 (COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    CONTINUE        reduce using rule 24 (COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    ID              reduce using rule 24 (COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    CONDITIONAL_IF  reduce using rule 24 (COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    ITERATIVE_WHILE reduce using rule 24 (COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    ITERATIVE_DO    reduce using rule 24 (COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_FUNTION RKEY .)
    $end            reduce using rule 24 (COUPLER -> ID LPAREN L_PARAMS RPAREN LKEY SENTENCES_FUNTION RKEY .)


state 282

    (64) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE . LKEY SENTENCES RKEY

    LKEY            shift and go to state 288


state 283

    (66) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE . LKEY SENTENCES_FUNTION RKEY

    LKEY            shift and go to state 289


state 284

    (68) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE . LKEY SENTENCES_METHOD RKEY

    LKEY            shift and go to state 290


state 285

    (72) SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN . DOT_AN_DCOMMA

    DOT_AN_DCOMMA   shift and go to state 291


state 286

    (74) SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN . DOT_AN_DCOMMA

    DOT_AN_DCOMMA   shift and go to state 292


state 287

    (76) SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN . DOT_AN_DCOMMA

    DOT_AN_DCOMMA   shift and go to state 293


state 288

    (64) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY . SENTENCES RKEY
    (50) SENTENCES -> . SENTENCES SENTENCE
    (51) SENTENCES -> . SENTENCE
    (52) SENTENCE -> . DECLARATIONS
    (53) SENTENCE -> . ASSIGNMENTS
    (54) SENTENCE -> . SENTENCE_IF
    (55) SENTENCE -> . SENTENCE_WHILE
    (56) SENTENCE -> . COMENTLINE
    (57) SENTENCE -> . COMENTMULTYLINE
    (58) SENTENCE -> . BREAK DOT_AN_DCOMMA
    (59) SENTENCE -> . CONTINUE DOT_AN_DCOMMA
    (60) SENTENCE -> . ID LPAREN CALLS RPAREN
    (100) DECLARATIONS -> . DECLARATIONS DECLARATION
    (101) DECLARATIONS -> . DECLARATION
    (107) ASSIGNMENTS -> . ASSIGNMENTS ASSIGNMENT
    (108) ASSIGNMENTS -> . ASSIGNMENT
    (63) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY
    (71) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (72) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (73) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (74) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (75) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (76) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (102) DECLARATION -> . TYPE_INT ID IQUAL INT DOT_AN_DCOMMA
    (103) DECLARATION -> . TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA
    (104) DECLARATION -> . TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA
    (105) DECLARATION -> . TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA
    (106) DECLARATION -> . TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (109) ASSIGNMENT -> . ID IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> . ID IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> . ID IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> . ID IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> . ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> . ID IQUAL EXPRESSIONS DOT_AN_DCOMMA

    COMENTLINE      shift and go to state 22
    COMENTMULTYLINE shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    ID              shift and go to state 12
    CONDITIONAL_IF  shift and go to state 28
    ITERATIVE_WHILE shift and go to state 29
    ITERATIVE_DO    shift and go to state 30
    TYPE_INT        shift and go to state 40
    TYPE_DOUBLE     shift and go to state 41
    TYPE_STRING     shift and go to state 42
    TYPE_CHAR       shift and go to state 43
    TYPE_BOOL       shift and go to state 44

    SENTENCES                      shift and go to state 294
    SENTENCE                       shift and go to state 10
    DECLARATIONS                   shift and go to state 18
    ASSIGNMENTS                    shift and go to state 19
    SENTENCE_IF                    shift and go to state 20
    SENTENCE_WHILE                 shift and go to state 21
    DECLARATION                    shift and go to state 26
    ASSIGNMENT                     shift and go to state 27

state 289

    (66) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY . SENTENCES_FUNTION RKEY
    (37) SENTENCES_FUNTION -> . SENTENCES_FUNTION SENTENCE_FUNTION
    (38) SENTENCES_FUNTION -> . SENTENCE_FUNTION
    (39) SENTENCE_FUNTION -> . DECLARATIONS
    (40) SENTENCE_FUNTION -> . ASSIGNMENTS
    (41) SENTENCE_FUNTION -> . SENTENCES_IF
    (42) SENTENCE_FUNTION -> . SENTENCES_WHILE
    (43) SENTENCE_FUNTION -> . COMENTLINE
    (44) SENTENCE_FUNTION -> . COMENTMULTYLINE
    (45) SENTENCE_FUNTION -> . BREAK DOT_AN_DCOMMA
    (46) SENTENCE_FUNTION -> . CONTINUE DOT_AN_DCOMMA
    (47) SENTENCE_FUNTION -> . METHOD_RETURN TYPE_DATO DOT_AN_DCOMMA
    (48) SENTENCE_FUNTION -> . METHOD_RETURN ID DOT_AN_DCOMMA
    (49) SENTENCE_FUNTION -> . ID LPAREN CALLS RPAREN
    (100) DECLARATIONS -> . DECLARATIONS DECLARATION
    (101) DECLARATIONS -> . DECLARATION
    (107) ASSIGNMENTS -> . ASSIGNMENTS ASSIGNMENT
    (108) ASSIGNMENTS -> . ASSIGNMENT
    (61) SENTENCES_IF -> . SENTENCES_IF SENTENCE_IF
    (62) SENTENCES_IF -> . SENTENCE_IF
    (69) SENTENCES_WHILE -> . SENTENCES_WHILE SENTENCE_WHILE
    (70) SENTENCES_WHILE -> . SENTENCE_WHILE
    (102) DECLARATION -> . TYPE_INT ID IQUAL INT DOT_AN_DCOMMA
    (103) DECLARATION -> . TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA
    (104) DECLARATION -> . TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA
    (105) DECLARATION -> . TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA
    (106) DECLARATION -> . TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (109) ASSIGNMENT -> . ID IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> . ID IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> . ID IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> . ID IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> . ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> . ID IQUAL EXPRESSIONS DOT_AN_DCOMMA
    (63) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY
    (71) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (72) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (73) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (74) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (75) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (76) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA

    COMENTLINE      shift and go to state 168
    COMENTMULTYLINE shift and go to state 169
    BREAK           shift and go to state 170
    CONTINUE        shift and go to state 171
    METHOD_RETURN   shift and go to state 172
    ID              shift and go to state 173
    TYPE_INT        shift and go to state 40
    TYPE_DOUBLE     shift and go to state 41
    TYPE_STRING     shift and go to state 42
    TYPE_CHAR       shift and go to state 43
    TYPE_BOOL       shift and go to state 44
    CONDITIONAL_IF  shift and go to state 28
    ITERATIVE_WHILE shift and go to state 29
    ITERATIVE_DO    shift and go to state 30

    SENTENCES_FUNTION              shift and go to state 295
    SENTENCE_FUNTION               shift and go to state 106
    DECLARATIONS                   shift and go to state 164
    ASSIGNMENTS                    shift and go to state 165
    SENTENCES_IF                   shift and go to state 166
    SENTENCES_WHILE                shift and go to state 167
    DECLARATION                    shift and go to state 26
    ASSIGNMENT                     shift and go to state 27
    SENTENCE_IF                    shift and go to state 174
    SENTENCE_WHILE                 shift and go to state 175

state 290

    (68) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY . SENTENCES_METHOD RKEY
    (25) SENTENCES_METHOD -> . SENTENCES_METHOD SENTENCE_METHOD
    (26) SENTENCES_METHOD -> . SENTENCE_METHOD
    (27) SENTENCE_METHOD -> . DECLARATIONS
    (28) SENTENCE_METHOD -> . ASSIGNMENTS
    (29) SENTENCE_METHOD -> . SENTENCES_IF
    (30) SENTENCE_METHOD -> . SENTENCES_WHILE
    (31) SENTENCE_METHOD -> . COMENTLINE
    (32) SENTENCE_METHOD -> . COMENTMULTYLINE
    (33) SENTENCE_METHOD -> . BREAK DOT_AN_DCOMMA
    (34) SENTENCE_METHOD -> . CONTINUE DOT_AN_DCOMMA
    (35) SENTENCE_METHOD -> . METHOD_RETURN DOT_AN_DCOMMA
    (36) SENTENCE_METHOD -> . ID LPAREN CALLS RPAREN
    (100) DECLARATIONS -> . DECLARATIONS DECLARATION
    (101) DECLARATIONS -> . DECLARATION
    (107) ASSIGNMENTS -> . ASSIGNMENTS ASSIGNMENT
    (108) ASSIGNMENTS -> . ASSIGNMENT
    (61) SENTENCES_IF -> . SENTENCES_IF SENTENCE_IF
    (62) SENTENCES_IF -> . SENTENCE_IF
    (69) SENTENCES_WHILE -> . SENTENCES_WHILE SENTENCE_WHILE
    (70) SENTENCES_WHILE -> . SENTENCE_WHILE
    (102) DECLARATION -> . TYPE_INT ID IQUAL INT DOT_AN_DCOMMA
    (103) DECLARATION -> . TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA
    (104) DECLARATION -> . TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA
    (105) DECLARATION -> . TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA
    (106) DECLARATION -> . TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (109) ASSIGNMENT -> . ID IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> . ID IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> . ID IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> . ID IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> . ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> . ID IQUAL EXPRESSIONS DOT_AN_DCOMMA
    (63) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY
    (71) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (72) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (73) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (74) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (75) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (76) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA

    COMENTLINE      shift and go to state 182
    COMENTMULTYLINE shift and go to state 183
    BREAK           shift and go to state 184
    CONTINUE        shift and go to state 185
    METHOD_RETURN   shift and go to state 186
    ID              shift and go to state 187
    TYPE_INT        shift and go to state 40
    TYPE_DOUBLE     shift and go to state 41
    TYPE_STRING     shift and go to state 42
    TYPE_CHAR       shift and go to state 43
    TYPE_BOOL       shift and go to state 44
    CONDITIONAL_IF  shift and go to state 28
    ITERATIVE_WHILE shift and go to state 29
    ITERATIVE_DO    shift and go to state 30

    SENTENCES_METHOD               shift and go to state 296
    SENTENCE_METHOD                shift and go to state 107
    DECLARATIONS                   shift and go to state 178
    ASSIGNMENTS                    shift and go to state 179
    SENTENCES_IF                   shift and go to state 180
    SENTENCES_WHILE                shift and go to state 181
    DECLARATION                    shift and go to state 26
    ASSIGNMENT                     shift and go to state 27
    SENTENCE_IF                    shift and go to state 174
    SENTENCE_WHILE                 shift and go to state 175

state 291

    (72) SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .

    COMENTLINE      reduce using rule 72 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    COMENTMULTYLINE reduce using rule 72 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    BREAK           reduce using rule 72 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    CONTINUE        reduce using rule 72 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    ID              reduce using rule 72 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    CONDITIONAL_IF  reduce using rule 72 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    ITERATIVE_WHILE reduce using rule 72 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    ITERATIVE_DO    reduce using rule 72 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    TYPE_INT        reduce using rule 72 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    TYPE_DOUBLE     reduce using rule 72 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    TYPE_STRING     reduce using rule 72 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    TYPE_CHAR       reduce using rule 72 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    TYPE_BOOL       reduce using rule 72 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    METHOD_VOID     reduce using rule 72 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    $end            reduce using rule 72 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    RKEY            reduce using rule 72 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    METHOD_RETURN   reduce using rule 72 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)


state 292

    (74) SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .

    COMENTLINE      reduce using rule 74 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    COMENTMULTYLINE reduce using rule 74 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    BREAK           reduce using rule 74 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    CONTINUE        reduce using rule 74 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    ID              reduce using rule 74 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    CONDITIONAL_IF  reduce using rule 74 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    ITERATIVE_WHILE reduce using rule 74 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    ITERATIVE_DO    reduce using rule 74 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    TYPE_INT        reduce using rule 74 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    TYPE_DOUBLE     reduce using rule 74 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    TYPE_STRING     reduce using rule 74 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    TYPE_CHAR       reduce using rule 74 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    TYPE_BOOL       reduce using rule 74 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    METHOD_VOID     reduce using rule 74 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    $end            reduce using rule 74 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    RKEY            reduce using rule 74 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    METHOD_RETURN   reduce using rule 74 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)


state 293

    (76) SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .

    COMENTLINE      reduce using rule 76 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    COMENTMULTYLINE reduce using rule 76 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    BREAK           reduce using rule 76 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    CONTINUE        reduce using rule 76 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    ID              reduce using rule 76 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    CONDITIONAL_IF  reduce using rule 76 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    ITERATIVE_WHILE reduce using rule 76 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    ITERATIVE_DO    reduce using rule 76 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    TYPE_INT        reduce using rule 76 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    TYPE_DOUBLE     reduce using rule 76 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    TYPE_STRING     reduce using rule 76 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    TYPE_CHAR       reduce using rule 76 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    TYPE_BOOL       reduce using rule 76 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    METHOD_VOID     reduce using rule 76 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    $end            reduce using rule 76 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    RKEY            reduce using rule 76 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)
    METHOD_RETURN   reduce using rule 76 (SENTENCE_WHILE -> ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA .)


state 294

    (64) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES . RKEY
    (50) SENTENCES -> SENTENCES . SENTENCE
    (52) SENTENCE -> . DECLARATIONS
    (53) SENTENCE -> . ASSIGNMENTS
    (54) SENTENCE -> . SENTENCE_IF
    (55) SENTENCE -> . SENTENCE_WHILE
    (56) SENTENCE -> . COMENTLINE
    (57) SENTENCE -> . COMENTMULTYLINE
    (58) SENTENCE -> . BREAK DOT_AN_DCOMMA
    (59) SENTENCE -> . CONTINUE DOT_AN_DCOMMA
    (60) SENTENCE -> . ID LPAREN CALLS RPAREN
    (100) DECLARATIONS -> . DECLARATIONS DECLARATION
    (101) DECLARATIONS -> . DECLARATION
    (107) ASSIGNMENTS -> . ASSIGNMENTS ASSIGNMENT
    (108) ASSIGNMENTS -> . ASSIGNMENT
    (63) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY
    (71) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (72) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (73) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (74) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (75) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (76) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (102) DECLARATION -> . TYPE_INT ID IQUAL INT DOT_AN_DCOMMA
    (103) DECLARATION -> . TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA
    (104) DECLARATION -> . TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA
    (105) DECLARATION -> . TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA
    (106) DECLARATION -> . TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (109) ASSIGNMENT -> . ID IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> . ID IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> . ID IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> . ID IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> . ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> . ID IQUAL EXPRESSIONS DOT_AN_DCOMMA

    RKEY            shift and go to state 297
    COMENTLINE      shift and go to state 22
    COMENTMULTYLINE shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    ID              shift and go to state 12
    CONDITIONAL_IF  shift and go to state 28
    ITERATIVE_WHILE shift and go to state 29
    ITERATIVE_DO    shift and go to state 30
    TYPE_INT        shift and go to state 40
    TYPE_DOUBLE     shift and go to state 41
    TYPE_STRING     shift and go to state 42
    TYPE_CHAR       shift and go to state 43
    TYPE_BOOL       shift and go to state 44

    SENTENCE                       shift and go to state 39
    DECLARATIONS                   shift and go to state 18
    ASSIGNMENTS                    shift and go to state 19
    SENTENCE_IF                    shift and go to state 20
    SENTENCE_WHILE                 shift and go to state 21
    DECLARATION                    shift and go to state 26
    ASSIGNMENT                     shift and go to state 27

state 295

    (66) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION . RKEY
    (37) SENTENCES_FUNTION -> SENTENCES_FUNTION . SENTENCE_FUNTION
    (39) SENTENCE_FUNTION -> . DECLARATIONS
    (40) SENTENCE_FUNTION -> . ASSIGNMENTS
    (41) SENTENCE_FUNTION -> . SENTENCES_IF
    (42) SENTENCE_FUNTION -> . SENTENCES_WHILE
    (43) SENTENCE_FUNTION -> . COMENTLINE
    (44) SENTENCE_FUNTION -> . COMENTMULTYLINE
    (45) SENTENCE_FUNTION -> . BREAK DOT_AN_DCOMMA
    (46) SENTENCE_FUNTION -> . CONTINUE DOT_AN_DCOMMA
    (47) SENTENCE_FUNTION -> . METHOD_RETURN TYPE_DATO DOT_AN_DCOMMA
    (48) SENTENCE_FUNTION -> . METHOD_RETURN ID DOT_AN_DCOMMA
    (49) SENTENCE_FUNTION -> . ID LPAREN CALLS RPAREN
    (100) DECLARATIONS -> . DECLARATIONS DECLARATION
    (101) DECLARATIONS -> . DECLARATION
    (107) ASSIGNMENTS -> . ASSIGNMENTS ASSIGNMENT
    (108) ASSIGNMENTS -> . ASSIGNMENT
    (61) SENTENCES_IF -> . SENTENCES_IF SENTENCE_IF
    (62) SENTENCES_IF -> . SENTENCE_IF
    (69) SENTENCES_WHILE -> . SENTENCES_WHILE SENTENCE_WHILE
    (70) SENTENCES_WHILE -> . SENTENCE_WHILE
    (102) DECLARATION -> . TYPE_INT ID IQUAL INT DOT_AN_DCOMMA
    (103) DECLARATION -> . TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA
    (104) DECLARATION -> . TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA
    (105) DECLARATION -> . TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA
    (106) DECLARATION -> . TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (109) ASSIGNMENT -> . ID IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> . ID IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> . ID IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> . ID IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> . ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> . ID IQUAL EXPRESSIONS DOT_AN_DCOMMA
    (63) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY
    (71) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (72) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (73) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (74) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (75) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (76) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA

    RKEY            shift and go to state 298
    COMENTLINE      shift and go to state 168
    COMENTMULTYLINE shift and go to state 169
    BREAK           shift and go to state 170
    CONTINUE        shift and go to state 171
    METHOD_RETURN   shift and go to state 172
    ID              shift and go to state 173
    TYPE_INT        shift and go to state 40
    TYPE_DOUBLE     shift and go to state 41
    TYPE_STRING     shift and go to state 42
    TYPE_CHAR       shift and go to state 43
    TYPE_BOOL       shift and go to state 44
    CONDITIONAL_IF  shift and go to state 28
    ITERATIVE_WHILE shift and go to state 29
    ITERATIVE_DO    shift and go to state 30

    SENTENCE_FUNTION               shift and go to state 163
    DECLARATIONS                   shift and go to state 164
    ASSIGNMENTS                    shift and go to state 165
    SENTENCES_IF                   shift and go to state 166
    SENTENCES_WHILE                shift and go to state 167
    DECLARATION                    shift and go to state 26
    ASSIGNMENT                     shift and go to state 27
    SENTENCE_IF                    shift and go to state 174
    SENTENCE_WHILE                 shift and go to state 175

state 296

    (68) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD . RKEY
    (25) SENTENCES_METHOD -> SENTENCES_METHOD . SENTENCE_METHOD
    (27) SENTENCE_METHOD -> . DECLARATIONS
    (28) SENTENCE_METHOD -> . ASSIGNMENTS
    (29) SENTENCE_METHOD -> . SENTENCES_IF
    (30) SENTENCE_METHOD -> . SENTENCES_WHILE
    (31) SENTENCE_METHOD -> . COMENTLINE
    (32) SENTENCE_METHOD -> . COMENTMULTYLINE
    (33) SENTENCE_METHOD -> . BREAK DOT_AN_DCOMMA
    (34) SENTENCE_METHOD -> . CONTINUE DOT_AN_DCOMMA
    (35) SENTENCE_METHOD -> . METHOD_RETURN DOT_AN_DCOMMA
    (36) SENTENCE_METHOD -> . ID LPAREN CALLS RPAREN
    (100) DECLARATIONS -> . DECLARATIONS DECLARATION
    (101) DECLARATIONS -> . DECLARATION
    (107) ASSIGNMENTS -> . ASSIGNMENTS ASSIGNMENT
    (108) ASSIGNMENTS -> . ASSIGNMENT
    (61) SENTENCES_IF -> . SENTENCES_IF SENTENCE_IF
    (62) SENTENCES_IF -> . SENTENCE_IF
    (69) SENTENCES_WHILE -> . SENTENCES_WHILE SENTENCE_WHILE
    (70) SENTENCES_WHILE -> . SENTENCE_WHILE
    (102) DECLARATION -> . TYPE_INT ID IQUAL INT DOT_AN_DCOMMA
    (103) DECLARATION -> . TYPE_DOUBLE ID IQUAL FLOAT DOT_AN_DCOMMA
    (104) DECLARATION -> . TYPE_STRING ID IQUAL STRING DOT_AN_DCOMMA
    (105) DECLARATION -> . TYPE_CHAR ID IQUAL CHAR DOT_AN_DCOMMA
    (106) DECLARATION -> . TYPE_BOOL ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (109) ASSIGNMENT -> . ID IQUAL INT DOT_AN_DCOMMA
    (110) ASSIGNMENT -> . ID IQUAL FLOAT DOT_AN_DCOMMA
    (111) ASSIGNMENT -> . ID IQUAL STRING DOT_AN_DCOMMA
    (112) ASSIGNMENT -> . ID IQUAL CHAR DOT_AN_DCOMMA
    (113) ASSIGNMENT -> . ID IQUAL DATA_BOOL DOT_AN_DCOMMA
    (114) ASSIGNMENT -> . ID IQUAL EXPRESSIONS DOT_AN_DCOMMA
    (63) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (64) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY
    (65) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (66) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY
    (67) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (68) SENTENCE_IF -> . CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY
    (71) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY
    (72) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (73) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY
    (74) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_FUNTION RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA
    (75) SENTENCE_WHILE -> . ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY
    (76) SENTENCE_WHILE -> . ITERATIVE_DO LKEY SENTENCES_METHOD RKEY ITERATIVE_WHILE LPAREN INSTRUCTIONS RPAREN DOT_AN_DCOMMA

    RKEY            shift and go to state 299
    COMENTLINE      shift and go to state 182
    COMENTMULTYLINE shift and go to state 183
    BREAK           shift and go to state 184
    CONTINUE        shift and go to state 185
    METHOD_RETURN   shift and go to state 186
    ID              shift and go to state 187
    TYPE_INT        shift and go to state 40
    TYPE_DOUBLE     shift and go to state 41
    TYPE_STRING     shift and go to state 42
    TYPE_CHAR       shift and go to state 43
    TYPE_BOOL       shift and go to state 44
    CONDITIONAL_IF  shift and go to state 28
    ITERATIVE_WHILE shift and go to state 29
    ITERATIVE_DO    shift and go to state 30

    SENTENCE_METHOD                shift and go to state 177
    DECLARATIONS                   shift and go to state 178
    ASSIGNMENTS                    shift and go to state 179
    SENTENCES_IF                   shift and go to state 180
    SENTENCES_WHILE                shift and go to state 181
    DECLARATION                    shift and go to state 26
    ASSIGNMENT                     shift and go to state 27
    SENTENCE_IF                    shift and go to state 174
    SENTENCE_WHILE                 shift and go to state 175

state 297

    (64) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY .

    COMENTLINE      reduce using rule 64 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY .)
    COMENTMULTYLINE reduce using rule 64 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY .)
    BREAK           reduce using rule 64 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY .)
    CONTINUE        reduce using rule 64 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY .)
    ID              reduce using rule 64 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY .)
    CONDITIONAL_IF  reduce using rule 64 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY .)
    ITERATIVE_WHILE reduce using rule 64 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY .)
    ITERATIVE_DO    reduce using rule 64 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY .)
    TYPE_INT        reduce using rule 64 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY .)
    TYPE_DOUBLE     reduce using rule 64 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY .)
    TYPE_STRING     reduce using rule 64 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY .)
    TYPE_CHAR       reduce using rule 64 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY .)
    TYPE_BOOL       reduce using rule 64 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY .)
    METHOD_VOID     reduce using rule 64 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY .)
    $end            reduce using rule 64 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY .)
    RKEY            reduce using rule 64 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY .)
    METHOD_RETURN   reduce using rule 64 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES RKEY CONDITIONAL_ELSE LKEY SENTENCES RKEY .)


state 298

    (66) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY .

    COMENTLINE      reduce using rule 66 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY .)
    COMENTMULTYLINE reduce using rule 66 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY .)
    BREAK           reduce using rule 66 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY .)
    CONTINUE        reduce using rule 66 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY .)
    ID              reduce using rule 66 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY .)
    CONDITIONAL_IF  reduce using rule 66 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY .)
    ITERATIVE_WHILE reduce using rule 66 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY .)
    ITERATIVE_DO    reduce using rule 66 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY .)
    TYPE_INT        reduce using rule 66 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY .)
    TYPE_DOUBLE     reduce using rule 66 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY .)
    TYPE_STRING     reduce using rule 66 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY .)
    TYPE_CHAR       reduce using rule 66 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY .)
    TYPE_BOOL       reduce using rule 66 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY .)
    METHOD_VOID     reduce using rule 66 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY .)
    $end            reduce using rule 66 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY .)
    RKEY            reduce using rule 66 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY .)
    METHOD_RETURN   reduce using rule 66 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_FUNTION RKEY CONDITIONAL_ELSE LKEY SENTENCES_FUNTION RKEY .)


state 299

    (68) SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY .

    COMENTLINE      reduce using rule 68 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY .)
    COMENTMULTYLINE reduce using rule 68 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY .)
    BREAK           reduce using rule 68 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY .)
    CONTINUE        reduce using rule 68 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY .)
    ID              reduce using rule 68 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY .)
    CONDITIONAL_IF  reduce using rule 68 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY .)
    ITERATIVE_WHILE reduce using rule 68 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY .)
    ITERATIVE_DO    reduce using rule 68 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY .)
    TYPE_INT        reduce using rule 68 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY .)
    TYPE_DOUBLE     reduce using rule 68 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY .)
    TYPE_STRING     reduce using rule 68 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY .)
    TYPE_CHAR       reduce using rule 68 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY .)
    TYPE_BOOL       reduce using rule 68 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY .)
    METHOD_VOID     reduce using rule 68 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY .)
    $end            reduce using rule 68 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY .)
    RKEY            reduce using rule 68 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY .)
    METHOD_RETURN   reduce using rule 68 (SENTENCE_IF -> CONDITIONAL_IF LPAREN INSTRUCTIONS RPAREN LKEY SENTENCES_METHOD RKEY CONDITIONAL_ELSE LKEY SENTENCES_METHOD RKEY .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for METHOD_VOID in state 0 resolved as shift
WARNING: shift/reduce conflict for TYPE_INT in state 0 resolved as shift
WARNING: shift/reduce conflict for TYPE_DOUBLE in state 0 resolved as shift
WARNING: shift/reduce conflict for TYPE_STRING in state 0 resolved as shift
WARNING: shift/reduce conflict for TYPE_CHAR in state 0 resolved as shift
WARNING: shift/reduce conflict for TYPE_BOOL in state 0 resolved as shift
WARNING: shift/reduce conflict for COMENTLINE in state 0 resolved as shift
WARNING: shift/reduce conflict for COMENTMULTYLINE in state 0 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 0 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 0 resolved as shift
WARNING: shift/reduce conflict for ID in state 0 resolved as shift
WARNING: shift/reduce conflict for CONDITIONAL_IF in state 0 resolved as shift
WARNING: shift/reduce conflict for ITERATIVE_WHILE in state 0 resolved as shift
WARNING: shift/reduce conflict for ITERATIVE_DO in state 0 resolved as shift
WARNING: shift/reduce conflict for METHOD_VOID in state 5 resolved as shift
WARNING: shift/reduce conflict for TYPE_INT in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_DOUBLE in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_STRING in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_CHAR in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_BOOL in state 6 resolved as shift
WARNING: shift/reduce conflict for COMENTLINE in state 7 resolved as shift
WARNING: shift/reduce conflict for COMENTMULTYLINE in state 7 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 7 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 7 resolved as shift
WARNING: shift/reduce conflict for ID in state 7 resolved as shift
WARNING: shift/reduce conflict for CONDITIONAL_IF in state 7 resolved as shift
WARNING: shift/reduce conflict for ITERATIVE_WHILE in state 7 resolved as shift
WARNING: shift/reduce conflict for ITERATIVE_DO in state 7 resolved as shift
WARNING: shift/reduce conflict for TYPE_INT in state 7 resolved as shift
WARNING: shift/reduce conflict for TYPE_DOUBLE in state 7 resolved as shift
WARNING: shift/reduce conflict for TYPE_STRING in state 7 resolved as shift
WARNING: shift/reduce conflict for TYPE_CHAR in state 7 resolved as shift
WARNING: shift/reduce conflict for TYPE_BOOL in state 7 resolved as shift
WARNING: shift/reduce conflict for TYPE_INT in state 18 resolved as shift
WARNING: shift/reduce conflict for TYPE_DOUBLE in state 18 resolved as shift
WARNING: shift/reduce conflict for TYPE_STRING in state 18 resolved as shift
WARNING: shift/reduce conflict for TYPE_CHAR in state 18 resolved as shift
WARNING: shift/reduce conflict for TYPE_BOOL in state 18 resolved as shift
WARNING: shift/reduce conflict for ID in state 19 resolved as shift
WARNING: shift/reduce conflict for DOT_AN_DCOMMA in state 83 resolved as shift
WARNING: shift/reduce conflict for DOT_AN_DCOMMA in state 84 resolved as shift
WARNING: shift/reduce conflict for DOT_AN_DCOMMA in state 85 resolved as shift
WARNING: shift/reduce conflict for DOT_AN_DCOMMA in state 86 resolved as shift
WARNING: shift/reduce conflict for DOT_AN_DCOMMA in state 87 resolved as shift
WARNING: shift/reduce conflict for ID in state 101 resolved as shift
WARNING: shift/reduce conflict for INT in state 101 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 101 resolved as shift
WARNING: shift/reduce conflict for STRING in state 101 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 101 resolved as shift
WARNING: shift/reduce conflict for DATA_BOOL in state 101 resolved as shift
WARNING: shift/reduce conflict for TYPE_INT in state 108 resolved as shift
WARNING: shift/reduce conflict for TYPE_DOUBLE in state 108 resolved as shift
WARNING: shift/reduce conflict for TYPE_STRING in state 108 resolved as shift
WARNING: shift/reduce conflict for TYPE_CHAR in state 108 resolved as shift
WARNING: shift/reduce conflict for TYPE_BOOL in state 108 resolved as shift
WARNING: shift/reduce conflict for ID in state 109 resolved as shift
WARNING: shift/reduce conflict for CONDITIONAL_IF in state 117 resolved as shift
WARNING: shift/reduce conflict for ITERATIVE_WHILE in state 118 resolved as shift
WARNING: shift/reduce conflict for ITERATIVE_DO in state 118 resolved as shift
WARNING: shift/reduce conflict for TYPE_INT in state 164 resolved as shift
WARNING: shift/reduce conflict for TYPE_DOUBLE in state 164 resolved as shift
WARNING: shift/reduce conflict for TYPE_STRING in state 164 resolved as shift
WARNING: shift/reduce conflict for TYPE_CHAR in state 164 resolved as shift
WARNING: shift/reduce conflict for TYPE_BOOL in state 164 resolved as shift
WARNING: shift/reduce conflict for ID in state 165 resolved as shift
WARNING: shift/reduce conflict for CONDITIONAL_IF in state 166 resolved as shift
WARNING: shift/reduce conflict for ITERATIVE_WHILE in state 167 resolved as shift
WARNING: shift/reduce conflict for ITERATIVE_DO in state 167 resolved as shift
WARNING: shift/reduce conflict for TYPE_INT in state 178 resolved as shift
WARNING: shift/reduce conflict for TYPE_DOUBLE in state 178 resolved as shift
WARNING: shift/reduce conflict for TYPE_STRING in state 178 resolved as shift
WARNING: shift/reduce conflict for TYPE_CHAR in state 178 resolved as shift
WARNING: shift/reduce conflict for TYPE_BOOL in state 178 resolved as shift
WARNING: shift/reduce conflict for ID in state 179 resolved as shift
WARNING: shift/reduce conflict for CONDITIONAL_IF in state 180 resolved as shift
WARNING: shift/reduce conflict for ITERATIVE_WHILE in state 181 resolved as shift
WARNING: shift/reduce conflict for ITERATIVE_DO in state 181 resolved as shift
WARNING: shift/reduce conflict for AND in state 218 resolved as shift
WARNING: shift/reduce conflict for OR in state 218 resolved as shift
WARNING: shift/reduce conflict for NOT in state 218 resolved as shift
WARNING: shift/reduce conflict for AND in state 219 resolved as shift
WARNING: shift/reduce conflict for OR in state 219 resolved as shift
WARNING: shift/reduce conflict for NOT in state 219 resolved as shift
WARNING: shift/reduce conflict for AND in state 220 resolved as shift
WARNING: shift/reduce conflict for OR in state 220 resolved as shift
WARNING: shift/reduce conflict for NOT in state 220 resolved as shift
WARNING: shift/reduce conflict for IQUALS in state 221 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 221 resolved as shift
WARNING: shift/reduce conflict for IQUAL_GREATER in state 221 resolved as shift
WARNING: shift/reduce conflict for IQUAL_LESS in state 221 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 221 resolved as shift
WARNING: shift/reduce conflict for LESS in state 221 resolved as shift
WARNING: shift/reduce conflict for IQUALS in state 222 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 222 resolved as shift
WARNING: shift/reduce conflict for IQUAL_GREATER in state 222 resolved as shift
WARNING: shift/reduce conflict for IQUAL_LESS in state 222 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 222 resolved as shift
WARNING: shift/reduce conflict for LESS in state 222 resolved as shift
WARNING: shift/reduce conflict for IQUALS in state 223 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 223 resolved as shift
WARNING: shift/reduce conflict for IQUAL_GREATER in state 223 resolved as shift
WARNING: shift/reduce conflict for IQUAL_LESS in state 223 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 223 resolved as shift
WARNING: shift/reduce conflict for LESS in state 223 resolved as shift
WARNING: shift/reduce conflict for IQUALS in state 224 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 224 resolved as shift
WARNING: shift/reduce conflict for IQUAL_GREATER in state 224 resolved as shift
WARNING: shift/reduce conflict for IQUAL_LESS in state 224 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 224 resolved as shift
WARNING: shift/reduce conflict for LESS in state 224 resolved as shift
WARNING: shift/reduce conflict for IQUALS in state 225 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 225 resolved as shift
WARNING: shift/reduce conflict for IQUAL_GREATER in state 225 resolved as shift
WARNING: shift/reduce conflict for IQUAL_LESS in state 225 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 225 resolved as shift
WARNING: shift/reduce conflict for LESS in state 225 resolved as shift
WARNING: shift/reduce conflict for IQUALS in state 226 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 226 resolved as shift
WARNING: shift/reduce conflict for IQUAL_GREATER in state 226 resolved as shift
WARNING: shift/reduce conflict for IQUAL_LESS in state 226 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 226 resolved as shift
WARNING: shift/reduce conflict for LESS in state 226 resolved as shift
WARNING: reduce/reduce conflict in state 100 resolved using rule (OPTION -> ID)
WARNING: rejected rule (E -> ID) in state 100
WARNING: reduce/reduce conflict in state 108 resolved using rule (SENTENCE_FUNTION -> DECLARATIONS)
WARNING: rejected rule (SENTENCE -> DECLARATIONS) in state 108
WARNING: reduce/reduce conflict in state 108 resolved using rule (SENTENCE_METHOD -> DECLARATIONS)
WARNING: rejected rule (SENTENCE_FUNTION -> DECLARATIONS) in state 108
WARNING: reduce/reduce conflict in state 109 resolved using rule (SENTENCE_FUNTION -> ASSIGNMENTS)
WARNING: rejected rule (SENTENCE -> ASSIGNMENTS) in state 109
WARNING: reduce/reduce conflict in state 109 resolved using rule (SENTENCE_METHOD -> ASSIGNMENTS)
WARNING: rejected rule (SENTENCE_FUNTION -> ASSIGNMENTS) in state 109
WARNING: reduce/reduce conflict in state 110 resolved using rule (SENTENCE -> SENTENCE_IF)
WARNING: rejected rule (SENTENCES_IF -> SENTENCE_IF) in state 110
WARNING: reduce/reduce conflict in state 111 resolved using rule (SENTENCE -> SENTENCE_WHILE)
WARNING: rejected rule (SENTENCES_WHILE -> SENTENCE_WHILE) in state 111
WARNING: reduce/reduce conflict in state 112 resolved using rule (SENTENCE_FUNTION -> COMENTLINE)
WARNING: rejected rule (SENTENCE -> COMENTLINE) in state 112
WARNING: reduce/reduce conflict in state 112 resolved using rule (SENTENCE_METHOD -> COMENTLINE)
WARNING: rejected rule (SENTENCE_FUNTION -> COMENTLINE) in state 112
WARNING: reduce/reduce conflict in state 113 resolved using rule (SENTENCE_FUNTION -> COMENTMULTYLINE)
WARNING: rejected rule (SENTENCE -> COMENTMULTYLINE) in state 113
WARNING: reduce/reduce conflict in state 113 resolved using rule (SENTENCE_METHOD -> COMENTMULTYLINE)
WARNING: rejected rule (SENTENCE_FUNTION -> COMENTMULTYLINE) in state 113
WARNING: reduce/reduce conflict in state 117 resolved using rule (SENTENCE_METHOD -> SENTENCES_IF)
WARNING: rejected rule (SENTENCE_FUNTION -> SENTENCES_IF) in state 117
WARNING: reduce/reduce conflict in state 118 resolved using rule (SENTENCE_METHOD -> SENTENCES_WHILE)
WARNING: rejected rule (SENTENCE_FUNTION -> SENTENCES_WHILE) in state 118
WARNING: reduce/reduce conflict in state 188 resolved using rule (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA)
WARNING: rejected rule (SENTENCE -> BREAK DOT_AN_DCOMMA) in state 188
WARNING: reduce/reduce conflict in state 188 resolved using rule (SENTENCE_METHOD -> BREAK DOT_AN_DCOMMA)
WARNING: rejected rule (SENTENCE_FUNTION -> BREAK DOT_AN_DCOMMA) in state 188
WARNING: reduce/reduce conflict in state 189 resolved using rule (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA)
WARNING: rejected rule (SENTENCE -> CONTINUE DOT_AN_DCOMMA) in state 189
WARNING: reduce/reduce conflict in state 189 resolved using rule (SENTENCE_METHOD -> CONTINUE DOT_AN_DCOMMA)
WARNING: rejected rule (SENTENCE_FUNTION -> CONTINUE DOT_AN_DCOMMA) in state 189
WARNING: reduce/reduce conflict in state 258 resolved using rule (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN)
WARNING: rejected rule (SENTENCE -> ID LPAREN CALLS RPAREN) in state 258
WARNING: reduce/reduce conflict in state 258 resolved using rule (SENTENCE_METHOD -> ID LPAREN CALLS RPAREN)
WARNING: rejected rule (SENTENCE_FUNTION -> ID LPAREN CALLS RPAREN) in state 258
